var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["1.0","1.1","1.2","10","2","2.0","2017","29'","3","3xa3","7","9","aggreg","app","base","browser","clone","command","commun","compodoc","comput","core","creat","current","decemb","depend","descript","discuss","document","download","eas","engin","function","gener","get","goal","group","histori","index","index.html","inform","instal","instruct","ionic","it'","local","major","match","mi","new","node.j","novemb","npm","onlin","part","pertain","post","principl","project","proper","reddit","redevelop","repo","repositori","result","rev1","revis","run","scratch","serv","setup","social","softwar","specif","start","take","term","topic","under","updat","us","user","version","view"],"overview.html":["12","3","4","5","appmodul","authservic","bootstrap","class","cluster_appmodul","cluster_appmodule_bootstrap","cluster_appmodule_declar","cluster_appmodule_import","cluster_appmodule_provid","cluster_componentsmodul","cluster_componentsmodule_declar","cluster_componentsmodule_export","cluster_homepagemodul","cluster_homepagemodule_declar","cluster_subredditpagemodul","cluster_subredditpagemodule_declar","commentcompon","commentspag","compon","componentsmodul","createpostpag","createsubredditpag","databaseservic","datasharingservic","declar","depend","export","homepag","homepagemodul","inject","ionicapp","legend","loginpag","match","modul","myapp","out","overview","postcompon","profilepag","provid","reset","result","settingsprovid","sortbypopov","storageservic","subredditpag","subredditpagemodul","zoom"],"modules.html":["appmodul","brows","browser","componentsmodul","homepagemodul","match","modul","result","subredditpagemodul","support","svg"],"modules/AppModule.html":["_redditclonedb","angular","angular/cor","angular/http","angular/platform","app.compon","appmodul","authservic","bar","bootstrap","browser","browsermodul","class","cluster_appmodul","cluster_appmodule_bootstrap","cluster_appmodule_declar","cluster_appmodule_import","cluster_appmodule_provid","commentspag","compon","components/components.modul","components/sortby/sortbi","componentsmodul","createpostpag","createsubredditpag","databaseservic","datasharingservic","declar","defaulthistori","depend","driverord","entrycompon","errorhandl","export","file","home","homepag","homepagemodul","httpmodul","import","indexeddb","info","ionic","ionic/storag","ionicapp","ionicerrorhandl","ionicmodul","ionicmodule.forroot(myapp","ionicstoragemodul","ionicstoragemodule.forroot","legend","link","locationstrategi","loginpag","match","modul","myapp","name","native/splash","native/statu","ngmodul","out","pages/home/home.modul","pages/subreddit/subreddit.modul","path","profil","profilepag","provid","r/:name","reset","result","screen","segment","settingsprovid","settingsprovider,storageservic","shared/auth.servic","shared/data","shared/database.servic","shared/pag","shared/storage.servic","shared/theming.servic","sharing.servic","sortbypopov","sourc","splashscreen","sqlite","src/app/app.module.t","statusbar","storageservic","subreddit","subredditpag","subredditpagemodul","u/:usernam","useclass","websql","zoom"],"modules/ComponentsModule.html":["angular","angular/common","angular/cor","bootstrap","class","cluster_componentsmodul","cluster_componentsmodule_declar","cluster_componentsmodule_export","comment/com","commentcompon","commonmodul","componentsmodul","declar","depend","export","file","import","info","ionic","ionicmodul","legend","match","modul","ngmodul","out","post/post","postcompon","provid","reset","result","sourc","src/components/components.module.t","zoom"],"modules/HomePageModule.html":["angular","angular/cor","bootstrap","class","cluster_homepagemodul","cluster_homepagemodule_declar","components/components.modul","componentsmodul","declar","depend","export","file","home","homepag","homepagemodul","import","info","ionic","ionicpagemodul","ionicpagemodule.forchild(homepag","legend","match","modul","ngmodul","out","provid","reset","result","sourc","src/pages/home/home.module.t","zoom"],"modules/SubredditPageModule.html":["angular","angular/cor","bootstrap","class","cluster_subredditpagemodul","cluster_subredditpagemodule_declar","components/components.modul","componentsmodul","declar","depend","export","file","import","info","ionic","ionicpagemodul","ionicpagemodule.forchild(subredditpag","legend","match","modul","ngmodul","out","provid","reset","result","sourc","src/pages/subreddit/subreddit.module.t","subreddit","subredditpag","subredditpagemodul","zoom"],"components/CommentComponent.html":["1","1000","24","365","60","actual_compon","ago","alert","alert.pres","alertcontrol","alertctrl","angular","angular/cor","authmod","authmodal.onwilldismiss((isloggedin","authmodal.pres","authservic","boolean","bull","button","calculatedatepost","cancel","check","class","color","comment","comment'},{'nam","comment.cr","comment.html","comment.messag","commentcompon","comments'},{'nam","commentspag","compon","component_templ","confirm","const","constructor","constructor(alertctrl","creat","createpost'},{'nam","createpostpag","createsubreddit'},{'nam","createsubredditpag","currenttim","currenttime.gettim","data","databaseservic","date","datepost","day","daysdiffer","defin","delet","deletecom","descript","differ","direct","disabl","disableinput","dismiss","dom","downvot","element","event","export","fals","file","handler","home'},{'nam","homepag","hoursdiffer","html","import","in/sign","index","info","initi","input","ionic","isloggedin","legend","log","login","login'},{'nam","login/signup","loginpag","match","math.floor(differ","metadata","method","minut","minutesdiffer","modalcontrol","modalctrl","models/comment.model","myapp","name","navparam","new","ngoninit","number","open","openauth","option","page","param","paramet","pleas","point","post","post'},{'nam","postcompon","postid","present","privat","profile'},{'nam","profilepag","properti","public","result","return","role","score","second","secondsdiffer","selector","shared/auth.servic","shared/database.servic","shared/pag","showdeletebtn","sortbypopov","sourc","src/components/comment/comment.t","src/components/comment/comment.ts:119","src/components/comment/comment.ts:12","src/components/comment/comment.ts:129","src/components/comment/comment.ts:13","src/components/comment/comment.ts:139","src/components/comment/comment.ts:14","src/components/comment/comment.ts:15","src/components/comment/comment.ts:16","src/components/comment/comment.ts:17","src/components/comment/comment.ts:18","src/components/comment/comment.ts:183","src/components/comment/comment.ts:19","src/components/comment/comment.ts:20","src/components/comment/comment.ts:21","src/components/comment/comment.ts:22","src/components/comment/comment.ts:23","src/components/comment/comment.ts:30","src/components/comment/comment.ts:34","src/components/comment/comment.ts:47","src/components/comment/comment.ts:83","string","subreddit","subredditid","subredditpag","subtitl","sure","templat","templateurl","temporari","text","this.alertctrl.cr","this.authservice.getusernam","this.authservice.isloggedin","this.calculatedatepost","this.com","this.comment.comment_id).then((com","this.comment.scor","this.comment.timestamp","this.databaseservice.checkdownvotedcomment(us","this.databaseservice.checkupvotedcomment(us","this.databaseservice.deletecomment(this.subredditid","this.databaseservice.downvotecomment(us","this.databaseservice.getcomment(this.postid","this.databaseservice.upvotecomment(us","this.datepost","this.disableinput","this.events.publish('update:com","this.isloggedin","this.modalctrl.create(loginpag","this.openauth","this.postid).then((point","this.postid).then(boolean","this.postid,this.comment.comment_id).then","this.scor","this.updatecom","this.userdownvot","this.userhasaccount","this.userupvot","titl","tree","true","type","up","updatecom","upvot","upvotes/downvot","user","userdownvot","userhasaccount","userupvot","var","void","want","well","year","yearsdiffer"],"components/CommentsPage.html":["0","000","1a1a1a","actual_compon","ad","add","angular","angular/cor","angular/form","authservic","back","button","class","comment","comment'},{'nam","commentcompon","commentdata","commentpag","comments'},{'nam","comments.html","comments[key].comment_id","comments[key].cr","comments[key].messag","comments[key].scor","comments[key].timestamp","comments[key].uid","commentspag","compon","component_templ","constructor","constructor(authservic","constructor(priv","createpost'},{'nam","createpostpag","createsubreddit'},{'nam","createsubredditpag","creator","dark","databaseservic","decor","defin","descript","direct","dom","element","elementref","event","export","fff","file","form","form.value.commentinput.trim","getpostcom","home'},{'nam","homepag","html","implement","import","index","info","ionic","ionicpag","itemcolor","key","legend","login'},{'nam","loginpag","match","messag","metadata","method","models/comment.model","models/post.model","myapp","myinput","name","navbar","navcontrol","navctrl","navparam","ngform","ngoninit","oninit","option","page","param","paramet","post","post'},{'nam","postcompon","press","privat","profile'},{'nam","profilepag","properti","public","px","resiz","result","return","score","selector","settingsprovid","shared/auth.servic","shared/database.servic","shared/theming.servic","sortbypopov","sourc","src/pages/comments/comments.t","src/pages/comments/comments.ts:19","src/pages/comments/comments.ts:20","src/pages/comments/comments.ts:21","src/pages/comments/comments.ts:22","src/pages/comments/comments.ts:23","src/pages/comments/comments.ts:24","src/pages/comments/comments.ts:25","src/pages/comments/comments.ts:28","src/pages/comments/comments.ts:29","src/pages/comments/comments.ts:30","src/pages/comments/comments.ts:49","src/pages/comments/comments.ts:57","src/pages/comments/comments.ts:68","src/pages/comments/comments.ts:75","src/pages/comments/comments.ts:91","string","submitcom","submitcomment(form","subreddit","subredditpag","templateurl","textarea","textcolor","theme","this.authservice.getuid","this.authservice.getusernam","this.com","this.comments.push(com","this.comments.push(new","this.databaseservice.getpost(this.post.post_id","this.databaseservice.getpostcomments(this.post.post_id).then((com","this.databaseservice.writecomment(commentdata","this.events.publish('nav","this.events.subscribe('update:com","this.getpostcom","this.itemcolor","this.myinput.nativeelement.scrollheight","this.myinput.nativeelement.style.height","this.navbar.backbuttonclick","this.navctrl.pop","this.navparams.data.post","this.post","this.post.post_id","this.post.subreddit_id).then((com","this.post.subreddit_id).then((post","this.textcolor","this.theming.getactivetheme().subscribe(v","this.updatepost","this.usernam","tree","type","uid","updatepost","user","usernam","val","var","viewchild","viewchild('myinput","viewchild(navbar","void"],"components/CreatePostPage.html":["000","1a1a1a","1}[a","9","9]+)*\\.[a","9]{1,5","actual_compon","angular","angular/cor","angular/form","authservic","boolean","cancel","check","class","close","closemod","comment'},{'nam","commentcompon","comments'},{'nam","commentspag","compon","component_templ","console.log(\"invalid","constructor","constructor(navctrl","createpost","createpost'},{'nam","createpost.html","createpostpag","createsubreddit'},{'nam","createsubredditpag","dark","databas","databaseservic","defin","descript","determin","direct","dom","element","export","fals","fff","field","file","form","form.value.textinput","form.value.titleinput","form.value.urlinput","home'},{'nam","homepag","html","import","index","info","ionic","ionicpag","islinkpost","isurl","isurl(str","itemcolor","legend","link","linkpost","login'},{'nam","loginpag","match","messag","metadata","method","modal","models/subreddit.model","myapp","name","navcontrol","navctrl","navparam","navparams.data.subreddit","new","ngform","option","page","param","paramet","pattern","pattern.test(str","post","post'},{'nam","postcompon","postdata","privat","profile'},{'nam","profilepag","properti","public","r/{{subreddit.nam","regexp('^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a","result","return","selector","send","shared/auth.servic","shared/database.servic","sortbypopov","sourc","src/pages/createpost/createpost.t","src/pages/createpost/createpost.ts:14","src/pages/createpost/createpost.ts:15","src/pages/createpost/createpost.ts:16","src/pages/createpost/createpost.ts:17","src/pages/createpost/createpost.ts:19","src/pages/createpost/createpost.ts:20","src/pages/createpost/createpost.ts:33","src/pages/createpost/createpost.ts:39","src/pages/createpost/createpost.ts:45","src/pages/createpost/createpost.ts:52","src/pages/createpost/createpost.ts:79","str","str.includ","string","submit","submitpost","submitpost(form","subreddit","subredditpag","templat","templateurl","text","textcolor","textpost","theme","this.authservice.getuid","this.authservice.getusernam","this.closemod","this.databaseservice.createlinkpost(postdata).then","this.databaseservice.createtextpost(postdata).then","this.islinkpost","this.isurl(url","this.itemcolor","this.navctrl.pop","this.navparams.data.them","this.subreddit","this.textcolor","titl","tree","true","type","url","user_id","usernam","valid","var","void","z0","z]{2,5}(:[0"],"components/CreateSubredditPage.html":["000","1a1a1a","actual_compon","alreadi","angular","angular/cor","angular/form","authservic","cancel","case","class","close","closemod","closemodal(sub_id","comment'},{'nam","commentcompon","comments'},{'nam","commentspag","compon","component_templ","console.log(\"invalid","console.log(\"subreddit","constructor","constructor(navctrl","creat","createpost'},{'nam","createpostpag","createsubreddit","createsubreddit'},{'nam","createsubreddit.html","createsubredditpag","dark","data","databas","databaseservic","defin","descript","direct","dom","element","error","exist","export","fff","field","file","form","form.value.textinput","form.value.titleinput.tolowercas","home'},{'nam","homepag","html","import","index","info","ionic","ionicpag","itemcolor","legend","login'},{'nam","loginpag","lower","match","messag","metadata","method","modal","myapp","name","navcontrol","navctrl","navparam","new","ngform","option","page","param","paramet","post'},{'nam","postcompon","privat","profile'},{'nam","profilepag","properti","public","result","return","selector","send","shared/auth.servic","shared/database.servic","show","sortbypopov","sourc","space","src/pages/createsubreddit/createsubreddit.t","src/pages/createsubreddit/createsubreddit.ts:13","src/pages/createsubreddit/createsubreddit.ts:14","src/pages/createsubreddit/createsubreddit.ts:17","src/pages/createsubreddit/createsubreddit.ts:18","src/pages/createsubreddit/createsubreddit.ts:29","src/pages/createsubreddit/createsubreddit.ts:36","string","sub_id","submit","submitsubreddit","submitsubreddit(form","subreddit","subredditpag","templat","templateurl","text","textcolor","theme","this.authservice.getuid","this.authservice.getusernam","this.closemodal(key","this.databaseservice.newsubreddit(titl","this.itemcolor","this.navparams.data.them","this.textcolor","this.viewctrl.dismiss(sub_id","titl","title.indexof","tree","type","user_uid","user_uid).then(key","usernam","valid","var","viewcontrol","viewctrl","void","white"],"components/HomePage.html":["0","1","actual_compon","add","aggreg","angular","angular/cor","authmod","authmodal.onwilldismiss((isloggedin","authmodal.pres","authservic","between","boolean","break","card","case","catch(err","class","clean","clear","click","clone","close","closealloverlay","comment'},{'nam","commentcompon","comments'},{'nam","commentspag","compact","compon","component_templ","components/sortby/sortbi","console.error(err","constructor","constructor(authservic","constructor(priv","content","creat","createpost'},{'nam","createpostpag","createsubreddit","createsubreddit'},{'nam","createsubredditmod","createsubredditmodal.ondiddismiss(sub_id","createsubredditmodal.pres","createsubredditpag","cssclass","curat","dark","databas","databaseservic","datashar","datasharingservic","defin","descript","direct","display","dom","element","emit","environ","ev","event","event.target.valu","export","fals","file","filter","fire","flame","getallpost","getallsubreddit","getpost","getsubscrib","go","gotosubreddit","gotosubreddit(subreddit_id","home","home'},{'nam","home.html","homepag","hot","html","icon","id","if(sub_id","imag","import","index","info","initi","initializesearch","input","ionic","ionic/storag","iscardlayout","isloggedin","ismobil","key","keyup","larg","legend","light","list","log","login'},{'nam","login/signup","loginpag","logout","match","menu","menucolor","menuiconcolor","metadata","method","modalcontrol","modalctrl","models/post.model","models/subreddit.model","myapp","name","nav","navcontrol","navctrl","navig","nbsp;&nbsp;&nbsp","nbsp;&nbsp;{{sortmethod}}&nbsp;&nbsp","new","null","oncancel","oncancel(ev","oninput","oninput(ev","open","openauth","openprofil","option","out","overlay","page","param","paramet","popov","popover.onwilldismiss(sortmethod","popover.pres","popovercontrol","popoverctrl","popular","post","post'},{'nam","postcompon","power","primari","privat","profil","profile'},{'nam","profilepag","profmod","profmodal.pres","prompt","properti","public","r/{{subreddit.nam","r/{{subreddit.subreddit_nam","rate","reddit","refresh","regist","reiniti","result","return","search","searchbar","secondari","selectedsubreddit","selectedthem","selector","servic","set","settingsprovid","setup","setusernam","shared/auth.servic","shared/data","shared/database.servic","shared/pag","shared/storage.servic","shared/theming.servic","sharing.servic","show","showbackgrounddiv","showmenu","shownewpostbox","showsearchbar","showsortbypopov","showsortbypopover(ev","showsubscribedsubreddit","sign","small","social","sort","sort(sortmethod","sortbypopov","sorticon","sortmethod","sortmethod.icon","sortmethod.sortmethod","sourc","specifi","src/pages/home/home.t","src/pages/home/home.ts:132","src/pages/home/home.ts:142","src/pages/home/home.ts:163","src/pages/home/home.ts:177","src/pages/home/home.ts:198","src/pages/home/home.ts:20","src/pages/home/home.ts:205","src/pages/home/home.ts:21","src/pages/home/home.ts:22","src/pages/home/home.ts:222","src/pages/home/home.ts:23","src/pages/home/home.ts:24","src/pages/home/home.ts:241","src/pages/home/home.ts:25","src/pages/home/home.ts:26","src/pages/home/home.ts:266","src/pages/home/home.ts:27","src/pages/home/home.ts:273","src/pages/home/home.ts:28","src/pages/home/home.ts:29","src/pages/home/home.ts:290","src/pages/home/home.ts:299","src/pages/home/home.ts:30","src/pages/home/home.ts:305","src/pages/home/home.ts:31","src/pages/home/home.ts:32","src/pages/home/home.ts:322","src/pages/home/home.ts:33","src/pages/home/home.ts:34","src/pages/home/home.ts:340","src/pages/home/home.ts:346","src/pages/home/home.ts:35","src/pages/home/home.ts:353","src/pages/home/home.ts:36","src/pages/home/home.ts:367","src/pages/home/home.ts:37","src/pages/home/home.ts:374","src/pages/home/home.ts:38","src/pages/home/home.ts:385","src/pages/home/home.ts:39","src/pages/home/home.ts:40","src/pages/home/home.ts:45","src/pages/home/home.ts:46","still","storag","storageservic","string","subreddit","subreddit'","subreddit.nam","subreddit.name.tolowercase().indexof(event.target.value.tolowercas","subreddit_id","subredditdisplay","subredditkey","subredditlist","subredditlist.foreach((subreddit","subredditlist.push(subreddits[key","subredditpag","subscrib","subscribed.push(subreddits[key","subscribedsubreddit","subscribedsubreddits.length","subscribes/unsubscrib","switch","tell","templat","templateurl","theme","this.authservice.getuid","this.authservice.getusernam","this.authservice.isloggedin","this.authservice.logout().then","this.authservice.updateauthstate().then","this.closealloverlay","this.databaseservice.getallposts().then((subreddit","this.databaseservice.getsubreddit(subreddit_id).then((subreddit","this.databaseservice.getsubredditposts(\"subredditid_1\").then((post","this.databaseservice.getsubreddits().then((subreddit","this.databaseservice.getsubreddits().then(subreddit","this.databaseservice.getsubscribedsubreddits(this.authservice.getuid()).then(subreddit","this.datasharing.getismobil","this.datasharing.sortby(this.post","this.events.subscribe('nav","this.events.subscribe('refresh:subscrib","this.events.subscribe('theme:retriev","this.events.subscribe('update:post","this.events.subscribe('user:loggedin&set","this.getallpost","this.getallsubreddit","this.getsubscrib","this.gotosubreddit(sub_id","this.initializesearch","this.iscardlayout","this.isloggedin","this.ismobil","this.menucolor","this.menuiconcolor","this.modalctrl.create(createsubredditpag","this.modalctrl.create(loginpag","this.modalctrl.create(profilepag","this.navctrl.push('subreddit","this.openauth","this.popoverctrl.create(sortbypopov","this.post","this.posts.concat(object.values(post","this.posts.push(subreddit[subredditkey","this.selectedthem","this.setup","this.setusernam","this.showbackgrounddiv","this.showmenu","this.shownewpostbox","this.showsearchbar","this.showsubscribedsubreddit","this.sort(\"hot","this.sort(this.sortmethod","this.sorticon","this.sortmethod","this.storage.get(\"userhasaccount\").then(v","this.storageservice.getinitsubreddit","this.storageservice.getsubscribedsubreddits().then(subscrib","this.storageservice.setsubscribedsubreddit","this.storageservice.setsubscribedsubreddits(subscrib","this.subreddit","this.subredditdisplay","this.subreddits.filter((subreddit","this.subreddits.push(subreddits[key","this.subscribedsubreddit","this.theming.getactivetheme().subscribe(v","this.theming.setactivetheme('dark","this.theming.setactivetheme('light","this.user_id","this.userhasaccount","this.usernam","those","toggl","togglelayout","togglemenu","togglenewpostbox","togglesearchbar","togglethem","tree","true","type","u/{{usernam","up","updat","user","user'","user_id","userhasaccount","usernam","val","val.trim","var","variabl","view","void","votabl","welcom"],"components/LoginPage.html":["0","000","16","1a1a1a","3","account","actual_compon","add","address","again","alert","alert.pres","alertcontrol","alertctrl","alreadi","angular","angular/cor","angular/form","attempt","attemptsignin","authservic","avail","back","between","boolean","button","cancel","catch","catch((err","catch(err","check","checkusernam","checkusername(usernam","class","click","clone","closemod","collect","comment'},{'nam","commentcompon","comments'},{'nam","commentspag","complet","compon","component_templ","confirmpassword","console.error(err","console.log(\"email","console.log(err","constructor","constructor(alertctrl","content","conveni","creat","createpost'},{'nam","createpostpag","createsubreddit'},{'nam","createsubredditpag","creation","dark","data","databas","database.ref('userlist","datashar","datasharingservic","defin","descript","direct","dom","don't","don\\'t","duplic","element","email","enablebackdropdismiss","err.messag","error","event","explicit","export","fals","fff","field","file","firebas","firebase.auth().createuserwithemailandpassword(email","firebase.auth().currentuser.emailverifi","firebase.auth().currentuser.sendemailverification().then","firebase.auth().currentuser.uid","firebase.auth().sendpasswordresetemail(form.value.emailinput).then","firebase.auth().setpersistence(firebase.auth.auth.persistence.local).then","firebase.auth().signinwithemailandpassword(email","firebase.auth().signout().catch((err","firebase.databas","firebase.database().ref('us","firebase.database().ref('userlist/').upd","forgot","form","form.value.confirmpassword","form.value.emailinput","form.value.password","handl","here","home'},{'nam","homepag","html","import","inbox","index","info","inform","initi","ionic","ionic/storag","ionicpag","isloggedin","ismobil","isverifi","itemcolor","karma","legend","letter","link","load","loading.dismiss","loading.pres","loadingcontrol","loadingctrl","log","login","login'},{'nam","login.html","loginpag","loginus","loginuser(form","look","match","messag","metadata","method","myapp","name","navcontrol","navctrl","navparam","needsverif","ngform","normal","note","number","ok","on","option","out","page","param","param(form","paramet","password","password).then","perman","platform","platform.is('mobil","pleas","post'},{'nam","postcompon","present","privat","profile'},{'nam","profilepag","properti","pswd","pswd).then","public","quickli","reach","reddit","replac","reset","resetemail","resetpassword","resetpassword(form","result","return","role","screeni","screenx","selector","send","sent","setemail","setpswd","setuserinfo","shared/auth.servic","shared/data","sharing.servic","showincompleteformerr","showpasswordserr","sign","signinus","signinuser(email","signupus","signupuser(form","snapshot","snapshot.v","sortbypopov","sourc","src/pages/login/login.t","src/pages/login/login.ts:111","src/pages/login/login.ts:119","src/pages/login/login.ts:140","src/pages/login/login.ts:16","src/pages/login/login.ts:17","src/pages/login/login.ts:18","src/pages/login/login.ts:19","src/pages/login/login.ts:20","src/pages/login/login.ts:209","src/pages/login/login.ts:21","src/pages/login/login.ts:22","src/pages/login/login.ts:23","src/pages/login/login.ts:24","src/pages/login/login.ts:25","src/pages/login/login.ts:250","src/pages/login/login.ts:257","src/pages/login/login.ts:26","src/pages/login/login.ts:261","src/pages/login/login.ts:27","src/pages/login/login.ts:28","src/pages/login/login.ts:35","src/pages/login/login.ts:36","src/pages/login/login.ts:38","src/pages/login/login.ts:39","src/pages/login/login.ts:63","src/pages/login/login.ts:84","sso","storag","string","submit","subreddit","subredditpag","subtitl","switch","switchform","switchtoresetemail","take","templat","templateurl","text","textcolor","theme","this.alertctrl.cr","this.authservice.getemail","this.authservice.getpswd","this.authservice.setemail(email","this.authservice.setpswd(password","this.datasharing.getismobil","this.datasharing.getscreeni","this.datasharing.getscreenx","this.events.publish('update:com","this.events.publish('update:post","this.isloggedin","this.ismobil","this.itemcolor","this.loadingctrl.cr","this.navparams.data.them","this.needsverif","this.resetemail","this.screeni","this.screenx","this.showincompleteformerr","this.showpasswordserr","this.signinuser(email","this.signinuser(form.value.emailinput","this.storage.get('userhasaccount').then((v","this.storage.set('isloggedin","this.storage.set('userhasaccount","this.textcolor","this.userhasaccount","this.usernametext","this.validusernam","this.viewcontroller.dismiss(this.isloggedin","time","titl","todo","tree","tri","true","true).then","type","uid","uid).set","unavail","until","up","user","user'","userhasaccount","userlist","usernam","username).on('valu","username.length","username.tolowercas","usernametext","val","validusernam","var","verif","verifi","viewcontrol","void","w","w+$/i.test(usernam","welcom","window.screen.height","window.screen.width"],"components/MyApp.html":["activ","actual_compon","angular","angular/cor","app","app.html","avail","bar","class","comment'},{'nam","commentcompon","comments'},{'nam","commentspag","compon","component_templ","constructor","constructor(ev","constructor(priv","createpost'},{'nam","createpostpag","createsubreddit'},{'nam","createsubredditpag","databaseservic","datashar","datasharingservic","default","defin","descript","direct","dom","element","emit","event","export","file","getthem","here","higher","home'},{'nam","homepag","html","import","index","info","initi","ionic","legend","level","login'},{'nam","loginpag","match","metadata","method","myapp","name","nativ","native/splash","native/statu","need","okay","option","page","pages/home/hom","paramet","platform","platform.ready().then","plugin","post'},{'nam","postcompon","privat","profile'},{'nam","profilepag","properti","public","readi","result","return","rootpag","screen","selectedthem","selector","servic","set","settingsprovid","shared/data","shared/database.servic","shared/storage.servic","shared/theming.servic","sharing.servic","sortbypopov","sourc","splashscreen","splashscreen.hid","src/app/app.component.t","src/app/app.component.ts:15","src/app/app.component.ts:16","src/app/app.component.ts:21","src/app/app.component.ts:45","statusbar","statusbar.styledefault","storageservic","string","subreddit","subredditpag","subscrib","templat","templateurl","theme","thing","this.datasharing.setismobile(platform.is('mobil","this.datasharing.setscreenx(platform.width","this.events.publish('platform:readi","this.events.subscribe('theme:retriev","this.getthem","this.selectedthem","this.storageservice.getsubscribedsubreddits().then(subscribedsubreddit","this.storageservice.setinitsubreddits(subscribedsubreddit","this.theming.getactivetheme().subscribe(v","tree","type","up","val","valu","var","void"],"components/PostComponent.html":["1","1000","24","365","60","actual_compon","ago","alert","alert.pres","alertcontrol","alertctrl","angular","angular/cor","authmod","authmodal.onwilldismiss((isloggedin","authmodal.pres","authservic","boolean","bull","button","calculatedatepost","cancel","check","class","comment","comment'},{'nam","commentcompon","commentcount","commentpag","comments'},{'nam","commentspag","compon","component_templ","confirm","console.log(\"loggedin","console.log(\"not","console.log(this.commentpag","const","constructor","constructor(authservic","constructor(priv","count","creat","createpost'},{'nam","createpostpag","createsubreddit'},{'nam","createsubredditpag","currenttim","currenttime.gettim","data","databaseservic","date","datepost","day","daysdiffer","defin","delet","deletepost","descript","differ","direct","disabl","disableinput","dismiss","dom","downvot","element","event","export","fals","file","gotolink","gotosubreddit","handler","home'},{'nam","homepag","hoursdiffer","html","implement","import","in/sign","index","info","initi","input","ionic","iscardlayout","isloggedin","ismobil","key","legend","log","login","login'},{'nam","login/signup","loginpag","match","math.floor(differ","metadata","method","minut","minutesdiffer","modalcontrol","modalctrl","models/post.model","models/subreddit.model","myapp","name","navcontrol","navctrl","nbsp;&nbsp","new","ngoninit","number","oninit","open","openauth","option","page","param","paramet","pleas","point","post","post'},{'nam","post.html","post.messag","post.numcom","post.titl","postcompon","present","privat","profile'},{'nam","profilepag","properti","public","r/{{post.subreddit","result","return","role","score","second","secondsdiffer","selector","shared/auth.servic","shared/database.servic","shared/pag","showcom","showcommentbtn","showdeletebtn","slice:0:120","sortbypopov","sourc","src/components/post/post.t","src/components/post/post.ts:103","src/components/post/post.ts:109","src/components/post/post.ts:119","src/components/post/post.ts:14","src/components/post/post.ts:15","src/components/post/post.ts:156","src/components/post/post.ts:16","src/components/post/post.ts:17","src/components/post/post.ts:18","src/components/post/post.ts:19","src/components/post/post.ts:193","src/components/post/post.ts:20","src/components/post/post.ts:203","src/components/post/post.ts:21","src/components/post/post.ts:215","src/components/post/post.ts:219","src/components/post/post.ts:23","src/components/post/post.ts:24","src/components/post/post.ts:25","src/components/post/post.ts:26","src/components/post/post.ts:27","src/components/post/post.ts:28","src/components/post/post.ts:29","src/components/post/post.ts:33","src/components/post/post.ts:34","src/components/post/post.ts:35","src/components/post/post.ts:36","src/components/post/post.ts:41","src/components/post/post.ts:85","string","subreddit","subredditpag","subtitl","sure","templat","templateurl","temporari","text","this.alertctrl.cr","this.authservice.getusernam","this.authservice.isloggedin","this.calculatedatepost","this.commentcount","this.databaseservice.checkdownvoted(us","this.databaseservice.checkupvoted(us","this.databaseservice.deletepost(this.post.subreddit_id","this.databaseservice.downvotepost(us","this.databaseservice.getpost(this.post.post_id","this.databaseservice.getpostcommentslength(this.post.post_id).then(count","this.databaseservice.getsubreddit(this.post.subreddit_id).then((subreddit","this.databaseservice.upvotepost(us","this.datepost","this.disableinput","this.events.publish('update:post","this.isloggedin","this.modalctrl.create(loginpag","this.navctrl.push('subreddit","this.navctrl.push(commentspag","this.openauth","this.post","this.post).then((point","this.post).then(boolean","this.post.link","this.post.post_id).then","this.post.scor","this.post.subreddit_id).then((post","this.post.timestamp","this.scor","this.showcom","this.updatepost","this.userdownvot","this.userhasaccount","this.userupvot","titl","tree","true","type","u/{{post.us","up","updatepost","upvot","upvotes/downvot","user","userdownvot","userhasaccount","userupvot","var","void","want","well","window.open(this.post.link","year","yearsdiffer"],"components/ProfilePage.html":["1}[a","9","9]+)*\\.[a","9]{1,5","actual_compon","alert","alert.pres","alertcontrol","alertctrl","angular","angular/cor","angular/forms/src/directives/ng_form","authservic","boolean","button","changephoto","class","closemod","comment'},{'nam","commentcompon","comments'},{'nam","commentspag","compon","component_templ","console.log(\"email","console.log(\"karma","console.log(\"memb","console.log(\"uid","console.log(\"usernam","console.log('ionviewdidload","constructor","constructor(alertctrl","createpost'},{'nam","createpostpag","createsubreddit'},{'nam","createsubredditpag","databaseservic","defin","descript","direct","dismiss","display","dom","element","email","enter","event","export","fals","file","form","form.value.photourl","getphotourl","home'},{'nam","homepag","html","import","index","info","ionic","ionicpag","ionviewdidload","isloggedin","isurl","isurl(str","karma","legend","link","login'},{'nam","loginpag","match","member","membersinc","metadata","method","myapp","name","navcontrol","navctrl","navparam","new","ngform","option","page","paramet","pattern","pattern.test(str","photo","platform","pleas","point","post'},{'nam","postcompon","privat","profil","profile'},{'nam","profile.html","profilepag","properti","public","regexp('^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a","result","return","selectedthem","selector","setphoto","setphoto(form","settingsprovid","shared/auth.servic","shared/database.servic","shared/theming.servic","show","showphotolink","showuserinfo","sortbypopov","sourc","src/pages/profile/profile.t","src/pages/profile/profile.ts:18","src/pages/profile/profile.ts:19","src/pages/profile/profile.ts:20","src/pages/profile/profile.ts:21","src/pages/profile/profile.ts:22","src/pages/profile/profile.ts:23","src/pages/profile/profile.ts:24","src/pages/profile/profile.ts:25","src/pages/profile/profile.ts:26","src/pages/profile/profile.ts:33","src/pages/profile/profile.ts:34","src/pages/profile/profile.ts:35","src/pages/profile/profile.ts:38","src/pages/profile/profile.ts:55","src/pages/profile/profile.ts:59","src/pages/profile/profile.ts:63","src/pages/profile/profile.ts:71","src/pages/profile/profile.ts:86","src/pages/profile/profile.ts:90","src/pages/profile/profile.ts:93","str","str.includ","string","submit","subreddit","subredditpag","templat","templateurl","theme","this.alertctrl.cr","this.authservice.getemail","this.authservice.getmembersinc","this.authservice.getphoto","this.authservice.getuid","this.authservice.getusernam","this.authservice.isloggedin","this.authservice.setphoto(this.photo","this.changephoto","this.databaseservice.getkarma(this.uid).then(karma","this.email","this.isloggedin","this.isurl(form.value.photourl","this.karma","this.membersinc","this.photo","this.selectedthem","this.theming.getactivetheme().subscribe(v","this.uid","this.usernam","this.viewcontroller.dismiss","titl","tree","true","type","u/{{usernam","uid","updat","url","user","usernam","val","valid","var","viewcontrol","void","z0","z]{2,5}(:[0"],"components/SortByPopover.html":["actual_compon","angular","angular/cor","class","comment'},{'nam","commentcompon","comments'},{'nam","commentspag","compon","component_templ","constructor","constructor(priv","constructor(viewctrl","createpost'},{'nam","createpostpag","createsubreddit'},{'nam","createsubredditpag","defin","descript","direct","dom","element","export","file","flame","home'},{'nam","homepag","hot","html","icon","icons[sortmethod","import","index","info","ionic","legend","login'},{'nam","loginpag","match","metadata","method","myapp","name","navparam","navparams.data.sortmethod","new","option","page","param","paramet","podium","post","post'},{'nam","postcompon","privat","profile'},{'nam","profilepag","properti","result","return","selector","selectsortmethod","selectsortmethod(sortmethod","sort","sortbypopov","sortmethod","sourc","src/components/sortby/sortby.t","src/components/sortby/sortby.ts:30","src/components/sortby/sortby.ts:43","star","string","subreddit","subredditpag","templat","this.navparams.data.sortmethod","this.sortmethod","this.viewctrl.dismiss","top","tree","type","var","viewcontrol","viewctrl","void"],"components/SubredditPage.html":["0","404","actual_compon","add","alert","alert.pres","alertcontrol","alertctrl","angular","angular/cor","authmod","authmodal.onwilldismiss((isloggedin","authmodal.pres","authservic","back","below","boolean","button","catch","catch(err","check","class","clear","click","comment","comment'},{'nam","commentcompon","comments'},{'nam","commentspag","compon","component_templ","components/sortby/sortbi","console.error(err","console.log(\"subreddit","console.log('ok","console.log('subscrib","const","constructor","constructor(databaseservic","content","creat","createpost","createpost'},{'nam","createpostmod","createpostmodal.ondiddismiss","createpostmodal.pres","createpostpag","createsubreddit'},{'nam","createsubredditpag","cssclass","current","data","databaseservic","datashar","datasharingservic","decor","defin","descript","direct","dismiss","display","dom","downvot","element","emit","ev","event","export","fals","file","flame","found","function","getpost","handler","home","home'},{'nam","homepag","hot","html","icon","id","implement","import","in/sign","index","info","initi","invalid","ionic","isempti","isloggedin","issubscrib","key","legend","log","login","login'},{'nam","loginpag","match","metadata","method","modalcontrol","modalctrl","models/post.model","models/subreddit.model","moment","myapp","name","navbar","navcontrol","navctrl","navparam","nbsp;&nbsp;subscrib","nbsp;&nbsp;{{sortmethod}}&nbsp;&nbsp","new","ngoninit","oninit","option","page","param","paramet","pass","pleas","popov","popover.onwilldismiss(sortmethod","popover.pres","popovercontrol","popoverctrl","post","post'},{'nam","postcompon","press","privat","profile'},{'nam","profilepag","properti","public","r/{{subreddit.nam","refresh","resort","result","return","role","rout","scroll","selectedthem","selector","settingsprovid","setup","shared/auth.servic","shared/data","shared/database.servic","shared/pag","shared/storage.servic","shared/theming.servic","sharing.servic","show","showbackgrounddiv","showsortbypopov","showsortbypopover(ev","sign","sort","sortbypopov","sorticon","sortmethod","sortmethod.icon","sortmethod.sortmethod","sourc","src/pages/subreddit/subreddit.t","src/pages/subreddit/subreddit.ts:105","src/pages/subreddit/subreddit.ts:140","src/pages/subreddit/subreddit.ts:180","src/pages/subreddit/subreddit.ts:20","src/pages/subreddit/subreddit.ts:200","src/pages/subreddit/subreddit.ts:21","src/pages/subreddit/subreddit.ts:22","src/pages/subreddit/subreddit.ts:23","src/pages/subreddit/subreddit.ts:24","src/pages/subreddit/subreddit.ts:248","src/pages/subreddit/subreddit.ts:25","src/pages/subreddit/subreddit.ts:26","src/pages/subreddit/subreddit.ts:27","src/pages/subreddit/subreddit.ts:28","src/pages/subreddit/subreddit.ts:29","src/pages/subreddit/subreddit.ts:30","src/pages/subreddit/subreddit.ts:31","src/pages/subreddit/subreddit.ts:32","src/pages/subreddit/subreddit.ts:33","src/pages/subreddit/subreddit.ts:39","src/pages/subreddit/subreddit.ts:40","src/pages/subreddit/subreddit.ts:41","src/pages/subreddit/subreddit.ts:42","src/pages/subreddit/subreddit.ts:73","src/pages/subreddit/subreddit.ts:90","state","storageservic","string","subreddit","subreddit.descript","subreddit.html","subreddit_id","subreddit_id).then","subreddit_nam","subredditnam","subredditpag","subreddits.push","subscrib","subscribe(user_id","subtitl","success","tell","templat","templateurl","text","theme","this.alertctrl.cr","this.authservice.getuid","this.authservice.getusernam","this.authservice.isloggedin","this.authservice.updateauthstate().then","this.databaseservice.checkgetsubreddit(subredditname).then((subreddit","this.databaseservice.getsubredditposts(this.id).then(post","this.databaseservice.subscribesubreddit(user_id","this.databaseservice.unsubscribesubreddit(user_id","this.datasharing.sortby(this.post","this.events.publish('nav","this.events.publish('refresh:subscrib","this.events.subscribe('theme:retriev","this.events.subscribe('update:post","this.getpost","this.id","this.isempti","this.isloggedin","this.issubscrib","this.modalctrl.create(createpostpag","this.modalctrl.create(loginpag","this.navbar.backbuttonclick","this.navctrl.pop","this.navctrl.viewdidleave.subscrib","this.navparams.data","this.navparams.data['nam","this.navparams.data['uid","this.popoverctrl.create(sortbypopov","this.post","this.posts.push(posts[key","this.selectedthem","this.setup","this.showbackgrounddiv","this.sorticon","this.sortmethod","this.storageservice.getsubscribedsubreddits().then(subreddit","this.storageservice.issubscribed(this.subreddit.subreddit_id","this.storageservice.setsubscribedsubreddits(subreddit","this.subreddit","this.subreddit.subreddit_id","this.theming.getactivetheme().subscribe(v","this.theming.getthemeasstr","this.user_id","this.usernam","through","time","titl","tree","true","type","unsubscrib","unsubscribe(user_id","up","upvot","user","user_id","usernam","val","var","viewchild","viewchild(navbar","void","votabl","welcom","well"],"injectables/AuthService.html":["896550001075","account","activ","again","aizasyareotdcsttpbczatkdt","allow","allowed\":\"oper","angular","angular/cor","api","apikey","app","argument","auth/app","auth/argu","auth/invalid","auth/network","auth/oper","auth/requir","auth/too","auth/unauthor","auth/us","auth/web","authdomain","authent","author","authorized\":\"app","authservic","block","boolean","catch(err","catch(function(error","ced0","ced0e.appspot.com","ced0e.firebaseapp.com","ced0e.firebaseio.com","check","class","clone","code","codes[cod","config","configur","connect","console.error(err","console.log(\"error","console.log(\"upd","console.log(err","constructor","constructor(ev","constructor(priv","creat","creation","credenti","databas","database.ref('us","databaseurl","declin","defin","delet","deleted\":\"thi","descript","determin","develop","devic","din","disabl","disabled\":\"your","displaynam","domain","domain\":\"app","due","email","error","error\":\"incorrect","event","expir","expired\":\"your","export","failed\":\"network","fals","file","firebas","firebase.auth().currentus","firebase.auth().currentuser.metadata.creationtim","firebase.auth().onauthstatechanged((us","firebase.auth().signout().then","firebase.databas","firebase.initializeapp(config","firebasesetup","getemail","geterrmsg","geterrmsg(cod","getmembersinc","getphoto","getpswd","getuid","getusernam","https://reddit","import","index","info","initi","inject","internet","ionic","isloggedin","key","key\":\"invalid","last","log","logg","loggedin","login\":\"tim","logout","longer","mani","match","meet","messag","messagingsenderid","method","name","nelnibizsj2ui","new","notifi","null","oauth","oper","option","param","paramet","password","photo","photourl","pleas","privat","profil","projectid","promise((resolv","properti","provid","pswd","recent","reddit","reject","reject(fals","request","requests\":\"request","resolv","resolve(tru","result","return","secur","set","setemail","setemail(email","setphoto","setphoto(photo","setpswd","setpswd(pswd","setusernam","sign","snapshot.v","snapshot.val().usernam","sourc","src/shared/auth.service.t","src/shared/auth.service.ts:10","src/shared/auth.service.ts:107","src/shared/auth.service.ts:11","src/shared/auth.service.ts:116","src/shared/auth.service.ts:12","src/shared/auth.service.ts:123","src/shared/auth.service.ts:13","src/shared/auth.service.ts:131","src/shared/auth.service.ts:138","src/shared/auth.service.ts:146","src/shared/auth.service.ts:150","src/shared/auth.service.ts:157","src/shared/auth.service.ts:177","src/shared/auth.service.ts:22","src/shared/auth.service.ts:36","src/shared/auth.service.ts:63","src/shared/auth.service.ts:7","src/shared/auth.service.ts:77","src/shared/auth.service.ts:8","src/shared/auth.service.ts:84","src/shared/auth.service.ts:9","src/shared/auth.service.ts:92","state","storag","storagebucket","string","success","support","then(funct","this.creat","this.email","this.events.publish('user:loggedin&set","this.firebasesetup","this.loggedin","this.password","this.photourl","this.setphoto(\"https://www.stockvault.net/data/2009/10/05/110974/thumb16.jpg","this.setusername().then","this.uid","this.uid).once('value').then((snapshot","this.usernam","threshold","time","token","token\":\"us","tri","true","type","uid","unsupported\":\"brows","unusu","updat","updateauthst","user","user'","user.displaynam","user.email","user.photourl","user.uid","user.updateprofil","usernam","valid","var","void"],"injectables/DataSharingService.html":["0","1","angular/cor","array","b","boolean","break","case","class","constructor","copi","correct","currentd","currentdate.gettim","currenttim","datasharingservic","date","defin","descript","devic","export","fals","file","function","getismobil","getscreeni","getscreenx","height","hot","import","index","info","inject","insert","insertionsorthot","insertionsortnew","insertionsorttop","ismobil","j","len","match","math.abs(a","method","mobil","models/post.model","name","new","number","option","otherwis","param","paramet","part","posit","post","posts.length","posts[j","posts[j][\"scor","posts[j][\"timestamp","properti","relativediff(a","relativediff(posts[j][\"scor","relativediff(tmp[\"scor","result","return","run","screen","screeni","screenx","set","setismobil","setismobile(ismobil","setscreeni","setscreenx","setscreenx(width","setscreeny(height","sharing.service.t","sharing.service.ts:13","sharing.service.ts:20","sharing.service.ts:26","sharing.service.ts:33","sharing.service.ts:39","sharing.service.ts:46","sharing.service.ts:54","sharing.service.ts:6","sharing.service.ts:7","sharing.service.ts:8","shift","sort","sortbi","sortby(post","sortmethod","sourc","src/shared/data","string","switch","this.ismobil","this.screeni","this.screenx","tmp","tmp[\"timestamp","top","true","type","var","void","width"],"injectables/DatabaseService.html":["0","1","2","angular/cor","away","be","case","catch((err","catch(err","chang","check","checkdownvot","checkdownvoted(usernam","checkdownvotedcom","checkdownvotedcomment(usernam","checkgetsubreddit","checkgetsubreddit(subredditnam","checkupvot","checkupvoted(usernam","checkupvotedcom","checkupvotedcomment(usernam","checkvalidsubreddit","checkvalidsubreddit(subredditnam","checkvotedcom","checkvotedcomment(usernam","checkvotedpost","checkvotedpost(usernam","class","comment","comment.comment_id","comment.comment_id).once('value').then(com","comment.comment_id).once('value').then(post","comment.comment_id).update(upd","comment.val().downvotes[usernam","comment.val().hasownproperty(\"downvot","comment.val().hasownproperty(\"upvot","comment.val().upvotes[usernam","commentdata","commentdata.cr","commentdata.messag","commentdata.scor","commentdata.uid","commentid","commentid).once('value').then(com","comments/').once('value').then(com","comments/').push().key","console.error(err","console.log","console.log('delet","console.log(err","console.log(karma.v","constructor","counter","creat","createlinkpost","createlinkpost(postdata","createtextpost","createtextpost(postdata","creator","current","d","d.gettim","data","databas","database.ref('com","database.ref('post","database.ref('posts/').once('value').then(post","database.ref('subreddit","database.ref('subredditlist","database.ref('subreddits/').once('value').then(subreddit","databaseservic","date","defin","delet","deletecom","deletecomment(subredditid","deletecomment(subredditid:str","deletepost","deletepost(subredditid","deletesubreddit","deletesubreddit(subredditid","descript","didn't","downvot","downvotecom","downvotecomment(usernam","downvotepost","downvotepost(usernam","exist","export","file","firebas","firebase.databas","firebase.database().ref(\"/com","firebase.database().ref(\"/post","firebase.database().ref('com","firebase.database().ref('post","firebase.database().ref('subreddit","firebase.database().ref('subreddits').push().key","firebase.database().ref('us","firebase.database().ref().update(upd","firebase.database().ref(`users/${user_id}/subscribed/${subreddit_id","firebase.database().ref(`users/${user_id}/subscribed`).once('value').then(subreddit","firebase.database.servervalue.timestamp","found","getallpost","getcom","getcomment(postid","getkarma","getkarma(user_id","getpost","getpost(post_id","getpostcom","getpostcomments(postid","getsubreddit","getsubreddit(subreddit_id","getsubredditpost","getsubredditposts(subredditid","getsubscribedsubreddit","getsubscribedsubreddits(user_id","hasdownvot","hasupvot","id","import","increment","index","info","inject","json","karma","karma\").once('value').then(karma","key","key).update(comment).catch(err","key).update(post).catch(err","match","method","models/comment.model","models/post.model","models/subreddit.model","name","new","newsubreddit","newsubreddit(subredditnam","null","number","numcom","obj","option","param","paramet","point","post","post).then((vot","post.post_id","post.post_id).once('value').then(post","post.post_id).update(upd","post.subreddit_id","post.val().downvotes[usernam","post.val().hasownproperty(\"downvot","post.val().hasownproperty(\"upvot","post.val().upvotes[usernam","post[\"upvot","post_id","post_id).once('value').then(post","postdata","postdata.link","postdata.messag","postdata.subreddit.nam","postdata.subreddit.subreddit_id","postdata.titl","postdata.user_id","postdata.usernam","postid","postid).remove().then","postid).then((vot","promise((resolv","promise(resolv","push().key","ref","ref.transaction((com","ref.transaction((karma","ref.transaction((scor","reject","remov","remove().then","resolv","resolve(0","resolve(1","resolve(2","resolve(com","resolve(comment.v","resolve(comments.v","resolve(fals","resolve(karma.v","resolve(key","resolve(post.v","resolve(posts.v","resolve(subreddit","resolve(subreddit.v","resolve(subreddits.v","resolve(tru","result","result.v","return","score","sourc","specifi","src/shared/database.service.t","src/shared/database.service.ts:106","src/shared/database.service.ts:124","src/shared/database.service.ts:142","src/shared/database.service.ts:160","src/shared/database.service.ts:17","src/shared/database.service.ts:178","src/shared/database.service.ts:192","src/shared/database.service.ts:205","src/shared/database.service.ts:219","src/shared/database.service.ts:253","src/shared/database.service.ts:286","src/shared/database.service.ts:29","src/shared/database.service.ts:320","src/shared/database.service.ts:354","src/shared/database.service.ts:366","src/shared/database.service.ts:378","src/shared/database.service.ts:389","src/shared/database.service.ts:401","src/shared/database.service.ts:413","src/shared/database.service.ts:426","src/shared/database.service.ts:441","src/shared/database.service.ts:465","src/shared/database.service.ts:48","src/shared/database.service.ts:493","src/shared/database.service.ts:522","src/shared/database.service.ts:550","src/shared/database.service.ts:560","src/shared/database.service.ts:578","src/shared/database.service.ts:600","src/shared/database.service.ts:613","src/shared/database.service.ts:625","src/shared/database.service.ts:66","src/shared/database.service.ts:8","src/shared/database.service.ts:86","string","subredddit","subreddit","subreddit_id","subreddit_id).once('value').then(subreddit","subreddit_nam","subredditdescript","subredditid","subredditid).once('value').then(post","subredditid).remove().then","subredditnam","subredditname).once('value').then(result","subscrib","subscribesubreddit","subscribesubreddit(user_id","success","switch","take","this.checkvotedcomment(usernam","this.checkvotedpost(usernam","this.getsubreddit(subredditid).then(subreddit","this.updatecommentscore(com","this.updatepostscore(post","this.userkarmaupdate(comment.uid","this.userkarmaupdate(post.user_id","true","type","unsubscrib","unsubscribesubreddit","unsubscribesubreddit(user_id","updat","updatecommentscor","updatecommentscore(com","updatepostscor","updatepostscore(post","updates[\"/downvot","updates[\"/upvot","updates['subreddit","updates['subredditlist","upvot","upvote[postdata.usernam","upvotecom","upvotecomment(usernam","upvotepost","upvotepost(usernam","user","user_id","userkarmaupd","userkarmaupdate(user_id","usernam","valid","var","void","vote","write","writecom","writecomment(commentdata","written"],"injectables/SettingsProvider.html":["activ","angular","angular/cor","app","behaviorsubject","behaviorsubject('light","behaviorsubject(them","class","constructor","constructor(priv","constructor(storag","defin","descript","event","export","file","getactivethem","getthem","getthemeasstr","import","index","info","inject","ionic","ionic/storag","match","method","name","new","option","param","paramet","privat","properti","result","return","rxjs/rx","set","setactivethem","setactivetheme(v","settingsprovid","sourc","src/shared/theming.service.t","src/shared/theming.service.ts:17","src/shared/theming.service.ts:32","src/shared/theming.service.ts:39","src/shared/theming.service.ts:45","src/shared/theming.service.ts:9","storag","string","theme","theme').then(them","this.events.publish('theme:retriev","this.events.subscribe('platform:readi","this.getthem","this.storage.get('app","this.storage.set('app","this.them","this.theme.asobserv","this.theme.next(v","this.theme.valu","type","val","void"],"injectables/StorageService.html":["0","angular/cor","boolean","catch(err","check","class","console.error(err","constructor","constructor(priv","constructor(storag","defin","descript","export","file","getinitsubreddit","getsubscribedsubreddit","id","import","index","info","initi","initsubreddit","inject","ionic/storag","issubscrib","issubscribed(subreddit_id","match","method","name","new","option","param","paramet","promise(resolv","promise>(resolv","properti","resolv","resolve(nul","resolve(this.subreddit","result","return","set","setinitsubreddit","setinitsubreddits(subreddit","setsubscribedsubreddit","setsubscribedsubreddits(subscribedsubreddit","sourc","src/shared/storage.service.t","src/shared/storage.service.ts:13","src/shared/storage.service.ts:24","src/shared/storage.service.ts:41","src/shared/storage.service.ts:6","src/shared/storage.service.ts:65","src/shared/storage.service.ts:7","src/shared/storage.service.ts:71","storag","storageservic","string","subreddit","subreddit_id","subscrib","subscribedsubreddit","this.getsubscribedsubreddits().then","this.storage.get('subscribedsubreddits').then(subreddit","this.storage.set('subscribedsubreddit","this.subreddit","type","user","user'","void"],"classes/Comment.html":["class","comment","comment_id","constructor","constructor(messag","creator","defin","descript","export","file","index","info","match","messag","name","number","option","paramet","properti","result","score","sourc","src/models/comment.model.t","src/models/comment.model.ts:2","src/models/comment.model.ts:3","src/models/comment.model.ts:4","src/models/comment.model.ts:5","src/models/comment.model.ts:6","src/models/comment.model.ts:7","string","this.comment_id","this.creat","this.messag","this.scor","this.timestamp","this.uid","timestamp","type","uid"],"classes/Post.html":["class","constructor","constructor(titl","defin","descript","export","file","index","info","link","match","messag","name","number","numcom","option","paramet","post","post_id","properti","result","score","sourc","src/models/post.model.t","src/models/post.model.ts:10","src/models/post.model.ts:11","src/models/post.model.ts:12","src/models/post.model.ts:2","src/models/post.model.ts:3","src/models/post.model.ts:4","src/models/post.model.ts:5","src/models/post.model.ts:6","src/models/post.model.ts:7","src/models/post.model.ts:8","src/models/post.model.ts:9","string","subreddit","subreddit_id","this.link","this.messag","this.numcom","this.post_id","this.scor","this.subreddit","this.subreddit_id","this.timestamp","this.titl","this.us","this.user_id","timestamp","titl","type","user","user_id"],"classes/Subreddit.html":["class","constructor","constructor(nam","creator","defin","descript","export","file","index","info","match","name","option","paramet","properti","result","sourc","src/models/subreddit.model.t","src/models/subreddit.model.ts:2","src/models/subreddit.model.ts:3","src/models/subreddit.model.ts:4","src/models/subreddit.model.ts:5","src/models/subreddit.model.ts:6","string","subreddit","subreddit_id","this.creat","this.descript","this.nam","this.subreddit_id","this.uid","type","uid"],"coverage.html":["0","0/13","0/7","0/8","1/22","1/31","1/4","1/6","14/17","16","19/45","25","3","3/5","33/35","4","42","5/9","55","58","60","7/12","7/27","82","94","authservic","class","comment","commentcompon","compon","coverag","databaseservic","datasharingservic","document","file","homepag","identifi","inject","match","myapp","new","post","postcompon","result","settingsprovid","sharing.service.t","sortbypopov","src/app/app.component.t","src/components/comment/comment.t","src/components/post/post.t","src/components/sortby/sortby.t","src/models/comment.model.t","src/models/post.model.t","src/models/subreddit.model.t","src/pages/home/home.t","src/pages/subreddit/subreddit.t","src/shared/auth.service.t","src/shared/data","src/shared/database.service.t","src/shared/storage.service.t","src/shared/theming.service.t","statement","storageservic","subreddit","subredditpag","tabl","tablesort(document.getelementbyid('coverag","type"]},"length":27},"tokenStore":{"root":{"0":{"0":{"0":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"docs":{}},"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.00909090909090909},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0056323604710701485},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694},"coverage.html":{"ref":"coverage.html","tf":0.03571428571428571}},"/":{"1":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}}},"1":{"0":{"0":{"0":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.014539579967689823},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.012048192771084338}}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}},"2":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931}}},"4":{"docs":{},"/":{"1":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}},"docs":{}}},"6":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"9":{"docs":{},"/":{"4":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}},"docs":{}}},"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.012924071082390954},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0107095046854083},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.00909090909090909},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.014336917562724014}},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}},"1":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}},"2":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}},"docs":{}},"a":{"1":{"docs":{},"a":{"1":{"docs":{},"a":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}},"docs":{}}},"docs":{}},"}":{"docs":{},"[":{"docs":{},"a":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}},"/":{"2":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}},"3":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}}},"2":{"0":{"1":{"7":{"docs":{"index.html":{"ref":"index.html","tf":0.036036036036036036}}},"docs":{}},"docs":{}},"4":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.023809523809523808}}},"9":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}},"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.007168458781362007}},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.018018018018018018}}},"docs":{}}},"3":{"3":{"docs":{},"/":{"3":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}},"docs":{}}},"6":{"5":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"x":{"docs":{},"a":{"3":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}},"docs":{}}},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}}},"4":{"0":{"4":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"5":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931}},"/":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}}},"6":{"0":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.022617124394184167},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.018741633199464525},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}},"7":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}},"/":{"1":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}},"2":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{}},"docs":{}}},"8":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"9":{"6":{"5":{"5":{"0":{"0":{"0":{"1":{"0":{"7":{"5":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}},"]":{"docs":{},"+":{"docs":{},")":{"docs":{},"*":{"docs":{},"\\":{"docs":{},".":{"docs":{},"[":{"docs":{},"a":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}},"{":{"1":{"docs":{},",":{"5":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"docs":{}}},"docs":{}}}},"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}},"o":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.009693053311793215},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.025974025974025976}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.21379310344827587},"modules.html":{"ref":"modules.html","tf":0.04},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.124528301886793}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542}}}}}}}},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.022641509433962263},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.011308562197092083},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.01411764705882353},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.016317016317016316},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.022435897435897436},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007014809041309431},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.007209062821833162},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0137524557956778},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.00776914539400666},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.003327787021631},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923}}}}},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.008238928939237899},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}},"d":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176}},"d":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"d":{"docs":{},"c":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"b":{"docs":{},"c":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"k":{"docs":{},"d":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002048131080389145}}}}}},"b":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.015151515151515152}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}},"c":{"docs":{},"k":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.16}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"modules.html":{"ref":"modules.html","tf":0.16},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.00909090909090909}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011320754716981131},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.03231017770597738},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.006993006993006993},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.021823850350740453},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.025746652935118436},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.041499330655957165},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.011787819253438114},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.013318534961154272},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.021212121212121213},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568}}}}}}},"e":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.025974025974025976}},"(":{"docs":{},"'":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.02702702702702703},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}},"s":{"docs":{},"e":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.009324009324009324},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694},"classes/Comment.html":{"ref":"classes/Comment.html","tf":5.015873015873016},"classes/Post.html":{"ref":"classes/Post.html","tf":5.009090909090909},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":5.017241379310345},"coverage.html":{"ref":"coverage.html","tf":0.03571428571428571}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.01938610662358643},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.042352941176470586},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.044034818228366614},"classes/Comment.html":{"ref":"classes/Comment.html","tf":5.015873015873016},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04827586206896552},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.14814814814814814},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":5.006462035541196},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.026415094339622643},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":5.011764705882353},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}}}}}},"r":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}}}}}},"/":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112}}}}},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0035842293906810036}},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.06349206349206349}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.024691358024691357}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011320754716981131},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":5.008077544426494},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":5.011764705882353},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":5.011655011655011},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":5.016025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":5.0054559625876855},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":5.005149330587024},"components/MyApp.html":{"ref":"components/MyApp.html","tf":5.019083969465649},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":5.00669344042838},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":5.009823182711198},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":5.027027027027027},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":5.005549389567148},"coverage.html":{"ref":"coverage.html","tf":0.07142857142857142}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05517241379310345},"modules.html":{"ref":"modules.html","tf":0.04},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":5.1234567901234565},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.037037037037037035},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.037037037037037035}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212}}}}}}}}}}}},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"u":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}},"s":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.00909090909090909},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0015360983102918587},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.00909090909090909},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}}},"m":{"docs":{"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.017241379310344827}}}}},"e":{"docs":{},"v":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.015873015873015872}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}},"p":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0015360983102918587}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}}}},"'":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},".":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.01638504864311316},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}},"e":{"docs":{},"r":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.011647254575707155}},"s":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}},"p":{"docs":{},"i":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.011904761904763}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.01282051282051282},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.026415094339622643},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":5.0093240093240095},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.026415094339622643},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":5.012820512820513},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002048131080389145},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.06349206349206349},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.07758620689655173}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002048131080389145}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}},"d":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}},"s":{"docs":{},"e":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.00909090909090909},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.006144393241167435}}}},"r":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.005149330587023687},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.01638504864311316},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}}}}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00819252432155658},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}}}}},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.007680491551459293}},"e":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568}}}}}}}}},"e":{"docs":{},"d":{"0":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}}},"docs":{}}}},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011320754716981131},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.037037037037037035},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.05555555555555555},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.05555555555555555}}}},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}},"o":{"docs":{},"r":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.006993006993006993},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.016025641025641024},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.005893909626719057},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.008319467554076539},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.016897081413210446},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02185792349726776},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.07758620689655173}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.033925686591276254},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.03764705882352941},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.027972027972027972},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.022435897435897436},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.034294621979735},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.027806385169927908},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.019083969465648856},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.040160642570281124},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0412573673870334},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.016216216216216217},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.02885682574916759},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.03826955074875208},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.03333333333333333},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.017409114183307733},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.03896103896103896},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.04371584699453552},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.05555555555555555},"classes/Post.html":{"ref":"classes/Post.html","tf":0.05454545454545454},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.05172413793103448}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002560163850486431}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.013986013986013986},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.008319467554076539}}}}}},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.01818181818181818}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}}},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.006235385814497272},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.008077544426494346},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.006693440428380187}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}}}},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.011308562197092083},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.009370816599732263},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00819252432155658}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}},"\\":{"docs":{},"'":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.004608294930875576}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.022641509433962263},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.011308562197092083},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.01647058823529412},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.016317016317016316},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.022435897435897436},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.005455962587685113},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.026717557251908396},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.009370816599732263},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0137524557956778},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":5.001024065540195},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"(":{"docs":{},"'":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},"s":{"docs":{},"/":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}},"s":{"docs":{},"/":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.011450381679389313},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.022641509433962263},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.015267175572519083},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":5.006060606060606},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}}}}}}}}}}}},"e":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.009693053311793215},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224}}}}}}}},"y":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.008077544426494346},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.006693440428380187}}}}}}}}}},"r":{"docs":{},"k":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.00857365549493375},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}},"e":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.04938271604938271},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.037037037037037035},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.037037037037037035},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}},"i":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.011647254575707155}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755}}}}}}},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.009411764705882352}}}}}}}}}}},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.011308562197092083},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.02823529411764706},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.012470771628994544},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.012358393408856848},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.026717557251908396},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.01606425702811245},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.023575638506876228},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.013318534961154272},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009983361064891847},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.045454545454545456}},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.028836251287332648},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.015717092337917484},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021630615640599003}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}},"r":{"docs":{},"e":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.016638935108153077},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0035842293906810036}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"(":{"docs":{},"'":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.004608294930875576}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},"s":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.004608294930875576}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.004608294930875576}}}}}}}},")":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}},"`":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}},"`":{"docs":{},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007014809041309431},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.009268795056642637},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.005893909626719057},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.009324009324009324},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.01282051282051282},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.014418125643666324},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176}}}}}}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00409626216077829}}}}}},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.009411764705882352},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002048131080389145}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.025974025974025976}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02185792349726776}},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121}}},"x":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.015267175572519083},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.025974025974025976}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.025974025974025976}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}}}},"r":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121}}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01639344262295082}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}},"o":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}}},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011320754716981131},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011320754716981131},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.1111111111111111},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":5.0031176929072485},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.015267175572519083},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.034482758620689655},"modules.html":{"ref":"modules.html","tf":0.04},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.022641509433962263},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":5.111111111111111}}}}}}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}}}}}}},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.032432432432432434},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}},"m":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}},"e":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}},"s":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00409626216077829}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00409626216077829}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.02727272727272727}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}}},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"b":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}},"f":{"docs":{},"o":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.005893909626719057},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.02702702702702703}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.004991680532446},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":5.009090909090909},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":5.001536098310292},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":5.01948051948052},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":5.016393442622951},"coverage.html":{"ref":"coverage.html","tf":0.05952380952380952}}}}}},"/":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.005549389567147614},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01639344262295082}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02185792349726776}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.014539579967689823},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.014725568942436412}}}}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.018018018018018018},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011320754716981131},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.011450381679389313},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027586206896551724},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.026415094339622643}}}}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.024691358024691357}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"y":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742}}}}}}}}}}}}}}},"t":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.009411764705882352},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.009324009324009324},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.01282051282051282},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.07547169811320754},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.07407407407407407},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.09259259259259259},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.09259259259259259},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.009693053311793215},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.018823529411764704},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.013986013986013986},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.016025641025641024},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.009353078721745909},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.007209062821833162},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.03435114503816794},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.009370816599732263},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0137524557956778},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.01220865704772475},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002560163850486431},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.025974025974025976},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}},"a":{"docs":{},"g":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.009693053311793215},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.009353078721745909},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.008879023307436182},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.009324009324009324}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.021212121212121213}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.013318534961154272},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.017921146953405017},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}},"g":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.011308562197092083},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.00857365549493375},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.012048192771084338},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"i":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.016477857878475798},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.026415094339622643},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":5.0041194644696185},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}}}}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}},"u":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009983361064891847}}}}},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}},"a":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}},"n":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.016317016317016316},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"classes/Post.html":{"ref":"classes/Post.html","tf":0.03636363636363636}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.009324009324009324}}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.00779423226812159}}}}},"s":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.018018018018018018},"overview.html":{"ref":"overview.html","tf":0.013793103448275862},"modules.html":{"ref":"modules.html","tf":0.08},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.024691358024691357},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.037037037037037035},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.037037037037037035},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.015873015873015872},"classes/Post.html":{"ref":"classes/Post.html","tf":0.00909090909090909},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.017241379310344827},"coverage.html":{"ref":"coverage.html","tf":0.023809523809523808}}}},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.008077544426494346},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.006693440428380187}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}}}}}}},"n":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.06306306306306306}},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}},"e":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.013793103448275862},"modules.html":{"ref":"modules.html","tf":10.04},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.007547169811321},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":5.0246913580246915},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":5.037037037037037},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":5.037037037037037}}}},"a":{"docs":{},"l":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136}}}}}}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.01818181818181818}}}}}},"y":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.026415094339622643},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":5.015267175572519},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.009411764705882352}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.032432432432432434},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.01818181818181818},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.007058823529411765},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.047619047619047616},"classes/Post.html":{"ref":"classes/Post.html","tf":0.03636363636363636}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.011787819253438114}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.02564102564102564},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.02702702702702703},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.022017409114183307},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}},"s":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}}}},"l":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"z":{"docs":{},"s":{"docs":{},"j":{"2":{"docs":{},"u":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}},"docs":{}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}},"v":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.02702702702702703}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}},"t":{"docs":{},"e":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.008319467554076539}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01509433962264151},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.009693053311793215},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.018823529411764704},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.018648018648018648},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.02564102564102564},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.00857365549493375},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01132852729145211},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.022900763358778626},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.015717092337917484},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.03783783783783784},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.01220865704772475},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.008319467554076539},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.022017409114183307},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.025974025974025976},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02185792349726776},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.0603448275862069}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}}}}}}},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.01938610662358643},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.02823529411764706},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.027972027972027972},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.038461538461538464},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.012358393408856848},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.023575638506876228},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.03783783783783784},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.013318534961154272}},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.018823529411764704},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.008879023307436182}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.01411764705882353},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.013986013986013986},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.019230769230769232},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.011787819253438114},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.01411764705882353},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.011655011655011656},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.016025641025641024},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.011787819253438114},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136}}}}}},"i":{"docs":{},"g":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795}}}}}},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.024691358024691357},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.037037037037037035},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.037037037037037035}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.009411764705882352},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.009411764705882352},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.009324009324009324},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.01282051282051282},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01132852729145211},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.007209062821833162},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.048484848484848485},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.004608294930875576},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.047619047619047616},"classes/Post.html":{"ref":"classes/Post.html","tf":0.06818181818181818}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725},"classes/Post.html":{"ref":"classes/Post.html","tf":0.03636363636363636}}}}}},"l":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.005120327700972862}}}}},"b":{"docs":{},"s":{"docs":{},"p":{"docs":{},";":{"docs":{},"&":{"docs":{},"n":{"docs":{},"b":{"docs":{},"s":{"docs":{},"p":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}},";":{"docs":{},"&":{"docs":{},"n":{"docs":{},"b":{"docs":{},"s":{"docs":{},"p":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795}}}}}}},"{":{"docs":{},"{":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"}":{"docs":{},"}":{"docs":{},"&":{"docs":{},"n":{"docs":{},"b":{"docs":{},"s":{"docs":{},"p":{"docs":{},";":{"docs":{},"&":{"docs":{},"n":{"docs":{},"b":{"docs":{},"s":{"docs":{},"p":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.007058823529411765},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.006896551724138}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.006993006993006993},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.009615384615384616},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.006235385814497272},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.005893909626719057},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.008319467554076539},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.015873015873015872},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02185792349726776},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}}}}}},"k":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.007209062821833162}},"a":{"docs":{},"y":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}}}}},"b":{"docs":{},"j":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.005120327700972862}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007014809041309431},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.015151515151515152},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.030209933435739886},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}},"e":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.006993006993006993},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.009615384615384616},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.005893909626719057},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.008319467554076539},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.015873015873015872},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02185792349726776},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}},"g":{"docs":{},"e":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.014539579967689823},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.018823529411764704},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.02097902097902098},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.028846153846153848},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.013250194855806703},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01132852729145211},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.026717557251908396},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.012048192771084338},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.01768172888015717},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.03783783783783784},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.016648168701442843}},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.016477857878475798},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.016638935108153077}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.008077544426494346},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.03058823529411765},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.027972027972027972},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.019485580670303974},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0214190093708166},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.016216216216216217},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.03995560488346282},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.03636363636363636},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.04915514592933948},"classes/Post.html":{"ref":"classes/Post.html","tf":5.009090909090909},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04827586206896552},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.14814814814814814},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":5.005354752342704},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}}}},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678}}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.029185867895545316}},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0015360983102918587}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.005120327700972862}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0015360983102918587}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0015360983102918587}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}}}}}},"[":{"docs":{},"j":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.00909090909090909}},"]":{"docs":{},"[":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}},"[":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0015360983102918587},"classes/Post.html":{"ref":"classes/Post.html","tf":0.03636363636363636}},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002048131080389145}}}}},"p":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.005549389567147614}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.008077544426494346},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.009615384615384616},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.005455962587685113},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.005149330587023687},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.011450381679389313},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.00776914539400666},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.03494176372712146},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.045454545454545456}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02702702702702703}},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}},"t":{"docs":{},"i":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.015873015873015872},"classes/Post.html":{"ref":"classes/Post.html","tf":0.00909090909090909},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.017241379310344827}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.03018867924528302},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":5.009823182711198},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01509433962264151},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002048131080389145}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.014336917562724014},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}}},">":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}},"s":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.007209062821833162},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009983361064891847}}}}},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.007209062821833162},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.030534351145038167},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0137524557956778}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.021176470588235293},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.013986013986013986},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.019230769230769232},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.012358393408856848},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.011450381679389313},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.01606425702811245},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.023575638506876228},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.013318534961154272}}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}},"x":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"s":{"docs":{},"w":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.015717092337917484},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009983361064891847}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.008319467554076539}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.036036036036036036},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}}}}},"p":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.018018018018018018},"overview.html":{"ref":"overview.html","tf":0.013793103448275862},"modules.html":{"ref":"modules.html","tf":0.08},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.024691358024691357},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.037037037037037035},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.037037037037037035},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.015873015873015872},"classes/Post.html":{"ref":"classes/Post.html","tf":0.00909090909090909},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.017241379310344827},"coverage.html":{"ref":"coverage.html","tf":0.023809523809523808}},".":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006896551724137931},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.01411764705882353}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}},"l":{"docs":{},"v":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.006144393241167435},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}},"e":{"docs":{},"(":{"0":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}},"1":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}},"2":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002048131080389145}}},"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002560163850486431}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}},"s":{"docs":{},".":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002560163850486431}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},".":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}},"e":{"docs":{},"y":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}},"s":{"docs":{},".":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},".":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}},"s":{"docs":{},".":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}}}}},"v":{"1":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}},"docs":{},"i":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.011308562197092083},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.011764705882352941},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.016317016317016316},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.01636788776305534},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.009268795056642637},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.013386880856760375},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.01768172888015717},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.00776914539400666},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.05324459234608985},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.04242424242424243},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.059907834101382486},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.05194805194805195},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.0546448087431694}}}}}},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"(":{"docs":{},"'":{"docs":{},"^":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},"\\":{"docs":{},".":{"docs":{},"|":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},"\\":{"docs":{},".":{"docs":{},"|":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"|":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},")":{"docs":{},"?":{"docs":{},"[":{"docs":{},"a":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}},"f":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002560163850486431}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}},"d":{"docs":{},"i":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0035842293906810036}},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"s":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"(":{"docs":{},"a":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"[":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}}}}}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"[":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0015360983102918587}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.018018018018018018},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}},"/":{"docs":{},":":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}},"{":{"docs":{},"{":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}},"o":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.015267175572519083}}}}}}},"u":{"docs":{},"t":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}},"x":{"docs":{},"j":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"x":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.03636363636363636}},"i":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121}}},"x":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.009693053311793215},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00409626216077829},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.06349206349206349},"classes/Post.html":{"ref":"classes/Post.html","tf":0.03636363636363636}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}},"i":{"docs":{},"c":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013311148086522463},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.01818181818181818},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01639344262295082}},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.009411764705882352},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.015267175572519083},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":5.012987012987013},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}}}}}}}}}}}},"p":{"docs":{},"s":{"docs":{},"w":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},"(":{"docs":{},"p":{"docs":{},"s":{"docs":{},"w":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}}}}}},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}},"x":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}},"(":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}}}}},"y":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988}},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988}}}}}}}}}}}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011320754716981131}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}},"u":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.022617124394184167},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.03058823529411765},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.03263403263403263},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.04487179487179487},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.010911925175370226},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.014418125643666324},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.04580152671755725},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.018741633199464525},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0275049115913556},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.06486486486486487},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.01553829078801332}}}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.015267175572519083},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811}},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212}}},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.005149330587023687}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}}},"r":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.009353078721745909},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.03783783783783784},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.005549389567147614},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.024242424242424242}},"b":{"docs":{},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"v":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.026415094339622643},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":5.021621621621621},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}}}},"i":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.00857365549493375},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.04864864864864865},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.008879023307436182},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.015151515151515152}},".":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}},"i":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.026717557251908396}},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333}}}},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.026717557251908396}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007014809041309431},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.007209062821833162},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.03896103896103896},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.04371584699453552}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.018867924528301886},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.005455962587685113},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.04580152671755725},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.00776914539400666},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":5.0109289617486334},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}}}},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}},"r":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.014539579967689823},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.021176470588235293},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.02097902097902098},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.028846153846153848},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02338269680436477},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.018537590113285273},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.011450381679389313},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.047151277013752456},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.016216216216216217},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.03995560488346282},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.05324459234608985},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.00909090909090909},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.06554019457245264},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.025974025974025976},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01639344262295082},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.19047619047619047},"classes/Post.html":{"ref":"classes/Post.html","tf":0.21818181818181817},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.25862068965517243}}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.02564102564102564},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.028846153846153848},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.034294621979735},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.013386880856760375},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.03995560488346282},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.02816180235535074},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.1092896174863388},"classes/Post.html":{"ref":"classes/Post.html","tf":0.03636363636363636},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":5.017241379310345},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.020689655172413793},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.011320754716981131},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.1111111111111111},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":5.004439511653718},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.034482758620689655},"modules.html":{"ref":"modules.html","tf":0.04},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.022641509433962263},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":5.111111111111111}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00972862263184844}},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}},"'":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.011098779134295227},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.008704557091653867},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388},"classes/Post.html":{"ref":"classes/Post.html","tf":0.03636363636363636},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.06896551724137931}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.00776914539400666},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002560163850486431}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00409626216077829}},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.009324009324009324},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007014809041309431},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.013318534961154272},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002048131080389145},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.04918032786885246}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.005455962587685113},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02185792349726776}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.16},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}},"r":{"docs":{},"e":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}},"v":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.16}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"3":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"docs":{}},"2":{"0":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"6":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"docs":{}},"3":{"3":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"9":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"docs":{}},"4":{"6":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"docs":{}},"5":{"4":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"docs":{}},"6":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"7":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}},"8":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}},"docs":{}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"b":{"docs":{},"t":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"t":{"docs":{},"n":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.006693440428380187}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}}},"q":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"5":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}},"6":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542}}},"docs":{}},"2":{"1":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}},"docs":{}},"4":{"5":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"1":{"9":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"docs":{}},"2":{"9":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"3":{"9":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"4":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"5":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"6":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"7":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"8":{"3":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"9":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"docs":{}},"2":{"0":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"1":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"2":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"3":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385}}},"docs":{}},"3":{"0":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"4":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"docs":{}},"4":{"7":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"docs":{}},"8":{"3":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"0":{"3":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"9":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"docs":{}},"1":{"9":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"docs":{}},"4":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"5":{"6":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"6":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"7":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"8":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"9":{"3":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"docs":{}},"2":{"0":{"3":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"1":{"5":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"9":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"3":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"4":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"5":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"6":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"7":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"8":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"9":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}},"docs":{}},"3":{"3":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"4":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"5":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"6":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"docs":{}},"4":{"1":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"docs":{}},"8":{"5":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"3":{"0":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811}}},"docs":{}},"4":{"3":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.018518518518518517}}}}}}}}}},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"3":{"2":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{}},"4":{"2":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{}},"6":{"3":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{}},"7":{"7":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{}},"9":{"8":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{}},"docs":{}},"2":{"0":{"5":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"1":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"2":{"2":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"3":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"4":{"1":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"5":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"6":{"6":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"7":{"3":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"8":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"9":{"0":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"9":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{}},"3":{"0":{"5":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"1":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"2":{"2":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"3":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"4":{"0":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"6":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"5":{"3":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"6":{"7":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"7":{"4":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"8":{"5":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"9":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{}},"4":{"0":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}},"5":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"6":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.018518518518518517}}}}}}}}}},"t":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"0":{"5":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{}},"4":{"0":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{}},"8":{"0":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{}},"docs":{}},"2":{"0":{"0":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"1":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"2":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"3":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"4":{"8":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"5":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"6":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"7":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"8":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"9":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{}},"3":{"0":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"1":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"2":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"3":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}},"9":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{}},"4":{"0":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"1":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"2":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{}},"7":{"3":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{}},"9":{"0":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}},"s":{"docs":{},":":{"1":{"9":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"docs":{}},"2":{"0":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"1":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"2":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"3":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"4":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"5":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176}}},"8":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"9":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"docs":{}},"3":{"0":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"docs":{}},"4":{"9":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"docs":{}},"5":{"7":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"docs":{}},"6":{"8":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"docs":{}},"7":{"5":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"docs":{}},"9":{"1":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}},"s":{"docs":{},":":{"1":{"4":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}},"5":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}},"6":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}},"7":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662}}},"9":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}},"docs":{}},"2":{"0":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}},"docs":{}},"3":{"3":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}},"9":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}},"docs":{}},"4":{"5":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}},"docs":{}},"5":{"2":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}},"docs":{}},"7":{"9":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}},"s":{"docs":{},":":{"1":{"3":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}},"4":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641}}},"7":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}},"8":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}},"docs":{}},"2":{"9":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}},"docs":{}},"3":{"6":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}},"s":{"docs":{},":":{"1":{"1":{"1":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"9":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"docs":{}},"4":{"0":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"docs":{}},"6":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"7":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"8":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"9":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"docs":{}},"2":{"0":{"9":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"1":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"2":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"3":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"4":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"5":{"0":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"7":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"6":{"1":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"7":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"8":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}},"docs":{}},"3":{"5":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"6":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"8":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"9":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"docs":{}},"6":{"3":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"docs":{}},"8":{"4":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}},"s":{"docs":{},":":{"1":{"8":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"9":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"docs":{}},"2":{"0":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"1":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"2":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"3":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"4":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"5":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"6":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}}},"docs":{}},"3":{"3":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"4":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"5":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"8":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"docs":{}},"5":{"5":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"9":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"docs":{}},"6":{"3":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"docs":{}},"7":{"1":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"docs":{}},"8":{"6":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"docs":{}},"9":{"0":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"3":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"0":{"7":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"1":{"6":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"2":{"3":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"3":{"1":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"8":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}}},"4":{"6":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{}},"5":{"0":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"7":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{}},"7":{"7":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{}},"docs":{}},"2":{"2":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{}},"3":{"6":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{}},"6":{"3":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{}},"7":{"7":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"8":{"4":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"9":{"2":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}},"docs":{}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.03636363636363636},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"0":{"6":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"2":{"4":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"4":{"2":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"6":{"0":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"7":{"8":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"9":{"2":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"docs":{}},"2":{"0":{"5":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"1":{"9":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"5":{"3":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"8":{"6":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"9":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"3":{"2":{"0":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"5":{"4":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"6":{"6":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"7":{"8":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"8":{"9":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"docs":{}},"4":{"0":{"1":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"1":{"3":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"2":{"6":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"4":{"1":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"6":{"5":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"8":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"9":{"3":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"docs":{}},"5":{"2":{"2":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"5":{"0":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"6":{"0":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"7":{"8":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"docs":{}},"6":{"0":{"0":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"1":{"3":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"2":{"5":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"6":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}},"8":{"6":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"7":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}},"docs":{}},"3":{"2":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}},"9":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}},"docs":{}},"4":{"5":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}},"docs":{}},"9":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988}}},"docs":{}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"3":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}},"docs":{}},"2":{"4":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}},"docs":{}},"4":{"1":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}},"docs":{}},"6":{"5":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}},"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}},"7":{"1":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}},"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01092896174863388}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"2":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936}}},"3":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936}}},"4":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936}}},"5":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936}}},"6":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936}}},"7":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.015873015873015872}}},"docs":{}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"1":{"0":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}},"1":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}},"2":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.00909090909090909}}},"docs":{}},"2":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}},"3":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}},"4":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}},"5":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}},"6":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}},"7":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}},"8":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}},"9":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}},"docs":{}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"s":{"docs":{},":":{"2":{"docs":{"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}},"3":{"docs":{"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}},"4":{"docs":{"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}},"5":{"docs":{"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}},"6":{"docs":{"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.017241379310344827}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.015447991761071062},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002048131080389145}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}},".":{"docs":{},"v":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"0":{"docs":{},":":{"1":{"2":{"0":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.002048131080389145}}}},"b":{"docs":{},"l":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.007633587786259542},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}},"x":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.009693053311793215},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.02564102564102564},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.009615384615384616},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.009411764705882352},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.009324009324009324},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.01282051282051282},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.009324009324009324}}}}}}}},"l":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}},"o":{"docs":{},"p":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.02702702702702703},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}},"d":{"docs":{},"o":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}},"p":{"docs":{},"s":{"docs":{},"w":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}},"p":{"docs":{},"s":{"docs":{},"w":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.014539579967689823},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.005893909626719057}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"1":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}},"x":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"x":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.009693053311793215},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"&":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"&":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}}}}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007014809041309431},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.006693440428380187},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.00776914539400666}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.011655011655011656}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.005549389567147614}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954}}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.007058823529411765},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.005455962587685113},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.00776914539400666}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.009693053311793215}}}}}}}}}}}}}}}},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"[":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.008032128514056224}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}}}}}},"p":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.005893909626719057}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.008077544426494346},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.006693440428380187},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}},"x":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061}}}}}}}},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.006993006993006993},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01639344262295082},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477}}}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.010132501948558068},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"v":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"/":{"2":{"0":{"0":{"9":{"docs":{},"/":{"1":{"0":{"docs":{},"/":{"0":{"5":{"docs":{},"/":{"1":{"1":{"0":{"9":{"7":{"4":{"docs":{},"/":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"1":{"6":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.016216216216216217},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923}},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.005549389567147614}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988}}}}}}}},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406}}}}}}}}}}}}},"[":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}},"m":{"docs":{"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.008620689655172414}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.007936507936507936},"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}}}}}}}},"t":{"docs":{},"l":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406}},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"classes/Post.html":{"ref":"classes/Post.html","tf":0.004545454545454545}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.023529411764705882},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.013986013986013986},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.016025641025641024},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.019485580670303974},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.005149330587023687},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.026717557251908396},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.005893909626719057},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.017758046614872364},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.09740259740259741}},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.006493506493506494}}}}}}}}}}}}}}}},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.004846526655896607},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.018648018648018648},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.01282051282051282},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.005149330587023687},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.004016064257028112},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455},"classes/Post.html":{"ref":"classes/Post.html","tf":0.031818181818181815}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.06349206349206349},"classes/Post.html":{"ref":"classes/Post.html","tf":0.03636363636363636}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}},"u":{"docs":{},"e":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.007209062821833162},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.012121212121212121},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.005120327700972862}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}},"i":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.003089598352214212},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.022617124394184167},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.03294117647058824},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.02097902097902098},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.022435897435897436},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02260327357755261},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02368692070030896},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.015267175572519083},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.02677376171352075},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.03143418467583497},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.016216216216216217},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0244173140954495},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.019966722129783693},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.021212121212121213},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.015873015873015872},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.01948051948051948},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.03278688524590164},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.05555555555555555},"classes/Post.html":{"ref":"classes/Post.html","tf":0.05454545454545454},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.05172413793103448},"coverage.html":{"ref":"coverage.html","tf":0.011904761904761904}}}}},"m":{"docs":{},"p":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}},"[":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.006659267480577136},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"u":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}},"p":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.007209062821833162},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02702702702702703},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033277870216306157},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.006144393241167435}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.009411764705882352},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314}}}}}}}},"s":{"docs":{},"[":{"docs":{},"\"":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00409626216077829}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00409626216077829}}}}}}}}},"'":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.011308562197092083},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.009370816599732263},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.014336917562724014}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}},"[":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.018018018018018018}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.004705882352941176},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.00857365549493375},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.009268795056642637},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.008879023307436182},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.026622296173044926},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.011264720942140297},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02185792349726776},"classes/Post.html":{"ref":"classes/Post.html","tf":0.03636363636363636}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.008077544426494346},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003897116134060795},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.008238928939237899},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.006693440428380187}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.00535475234270415}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.009411764705882352},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.011655011655011656},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007014809041309431},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.009268795056642637},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.015717092337917484},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.004439511653718091},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013311148086522463},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.022017409114183307}},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.008238928939237899}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.011655011655011656},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.008879023307436182},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00972862263184844},"classes/Post.html":{"ref":"classes/Post.html","tf":0.03636363636363636}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}}}}}}}}}}}},"'":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.00779423226812159},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.009268795056642637},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013311148086522463},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02185792349726776}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.004991680532445923}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}},"/":{"docs":{},":":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}},"{":{"docs":{},"{":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.007858546168958742},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.009983361064891847},"classes/Comment.html":{"ref":"classes/Comment.html","tf":0.06349206349206349},"classes/Subreddit.html":{"ref":"classes/Subreddit.html","tf":0.07758620689655173}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}},"r":{"docs":{},"l":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.018648018648018648},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009}}}}}},"i":{"docs":{},"f":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}},"i":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.006179196704428424}}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.009009009009009009},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.007058823529411765},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.01282051282051282},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.012358393408856848},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.023575638506876228},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.021621621621621623}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.009615384615384616},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.010810810810810811}}}}}}}}},"a":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.006462035541195477},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.011764705882352941},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.011655011655011656},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.01282051282051282},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.006235385814497272},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.005149330587023687},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.015267175572519083},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.006693440428380187},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.009823182711198428},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.021621621621621623},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.005549389567147614},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.006060606060606061},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0035842293906810036}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318}}}}}}},"l":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.004676539360872954},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.01948051948051948}},"i":{"docs":{},"d":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.004119464469618949}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159}}}}}}},"u":{"docs":{"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.011308562197092083},"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.011764705882352941},"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.009324009324009324},"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.00641025641025641},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.01558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.009268795056642637},"components/MyApp.html":{"ref":"components/MyApp.html","tf":0.003816793893129771},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.013386880856760375},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.011787819253438114},"components/SortByPopover.html":{"ref":"components/SortByPopover.html","tf":0.005405405405405406},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.00776914539400666},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0066555740432612314},"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.00909090909090909},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862},"injectables/SettingsProvider.html":{"ref":"injectables/SettingsProvider.html","tf":0.012987012987012988},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00546448087431694}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.000779423226812159},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.003329633740288568}}}}},"e":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.007168458781362007}}}}}},"z":{"0":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.004662004662004662},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.003929273084479371}}},"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.013793103448275862},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.007547169811320755},"modules/ComponentsModule.html":{"ref":"modules/ComponentsModule.html","tf":0.024691358024691357},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.037037037037037035},"modules/SubredditPageModule.html":{"ref":"modules/SubredditPageModule.html","tf":0.037037037037037035}}}}},"]":{"docs":{},"{":{"2":{"docs":{},",":{"5":{"docs":{},"}":{"docs":{},"(":{"docs":{},":":{"docs":{},"[":{"0":{"docs":{"components/CreatePostPage.html":{"ref":"components/CreatePostPage.html","tf":0.002331002331002331},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.0019646365422396855}}},"docs":{}}}}}},"docs":{}}},"docs":{}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}}}}}}}}}}}},"w":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"q":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0037735849056603774}}}}}},"l":{"docs":{},"l":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.001558846453624318},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0022197558268590455}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0016155088852988692},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"components/CreateSubredditPage.html":{"ref":"components/CreateSubredditPage.html","tf":0.003205128205128205}}}}}},"+":{"docs":{},"$":{"docs":{},"/":{"docs":{},"i":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.02727272727272727}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.00409626216077829}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.0032310177705977385},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.002677376171352075}},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/CommentComponent.html":{"ref":"components/CommentComponent.html","tf":0.008077544426494346},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.006693440428380187}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/CommentsPage.html":{"ref":"components/CommentsPage.html","tf":0.002352941176470588},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.002338269680436477},"components/PostComponent.html":{"ref":"components/PostComponent.html","tf":0.0013386880856760374},"components/SubredditPage.html":{"ref":"components/SubredditPage.html","tf":0.0011098779134295228},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.005120327700972862}},"u":{"docs":{},"p":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.003117692907248636}}}},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0016638935108153079}}}}}}}}}}}},")":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0010240655401945725}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0010298661174047373},"components/ProfilePage.html":{"ref":"components/ProfilePage.html","tf":0.01768172888015717},"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0030721966205837174}},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.0005120327700972862}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.0020597322348094747}}}}}}}}},"j":{"docs":{"injectables/DataSharingService.html":{"ref":"injectables/DataSharingService.html","tf":0.0030303030303030303}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/DatabaseService.html":{"ref":"injectables/DatabaseService.html","tf":0.005120327700972862}}}}}}},"length":3583},"corpusTokens":["0","0/13","0/7","0/8","000","1","1.0","1.1","1.2","1/22","1/31","1/4","1/6","10","1000","12","14/17","16","19/45","1a1a1a","1}[a","2","2.0","2017","24","25","29'","3","3/5","33/35","365","3xa3","4","404","42","5","5/9","55","58","60","7","7/12","7/27","82","896550001075","9","94","9]+)*\\.[a","9]{1,5","_redditclonedb","account","activ","actual_compon","ad","add","address","again","aggreg","ago","aizasyareotdcsttpbczatkdt","alert","alert.pres","alertcontrol","alertctrl","allow","allowed\":\"oper","alreadi","angular","angular/common","angular/cor","angular/form","angular/forms/src/directives/ng_form","angular/http","angular/platform","api","apikey","app","app.compon","app.html","appmodul","argument","array","attempt","attemptsignin","auth/app","auth/argu","auth/invalid","auth/network","auth/oper","auth/requir","auth/too","auth/unauthor","auth/us","auth/web","authdomain","authent","authmod","authmodal.onwilldismiss((isloggedin","authmodal.pres","author","authorized\":\"app","authservic","avail","away","b","back","bar","base","be","behaviorsubject","behaviorsubject('light","behaviorsubject(them","below","between","block","boolean","bootstrap","break","brows","browser","browsermodul","bull","button","calculatedatepost","cancel","card","case","catch","catch((err","catch(err","catch(function(error","ced0","ced0e.appspot.com","ced0e.firebaseapp.com","ced0e.firebaseio.com","chang","changephoto","check","checkdownvot","checkdownvoted(usernam","checkdownvotedcom","checkdownvotedcomment(usernam","checkgetsubreddit","checkgetsubreddit(subredditnam","checkupvot","checkupvoted(usernam","checkupvotedcom","checkupvotedcomment(usernam","checkusernam","checkusername(usernam","checkvalidsubreddit","checkvalidsubreddit(subredditnam","checkvotedcom","checkvotedcomment(usernam","checkvotedpost","checkvotedpost(usernam","class","clean","clear","click","clone","close","closealloverlay","closemod","closemodal(sub_id","cluster_appmodul","cluster_appmodule_bootstrap","cluster_appmodule_declar","cluster_appmodule_import","cluster_appmodule_provid","cluster_componentsmodul","cluster_componentsmodule_declar","cluster_componentsmodule_export","cluster_homepagemodul","cluster_homepagemodule_declar","cluster_subredditpagemodul","cluster_subredditpagemodule_declar","code","codes[cod","collect","color","command","comment","comment'},{'nam","comment.comment_id","comment.comment_id).once('value').then(com","comment.comment_id).once('value').then(post","comment.comment_id).update(upd","comment.cr","comment.html","comment.messag","comment.val().downvotes[usernam","comment.val().hasownproperty(\"downvot","comment.val().hasownproperty(\"upvot","comment.val().upvotes[usernam","comment/com","comment_id","commentcompon","commentcount","commentdata","commentdata.cr","commentdata.messag","commentdata.scor","commentdata.uid","commentid","commentid).once('value').then(com","commentpag","comments'},{'nam","comments.html","comments/').once('value').then(com","comments/').push().key","comments[key].comment_id","comments[key].cr","comments[key].messag","comments[key].scor","comments[key].timestamp","comments[key].uid","commentspag","commonmodul","commun","compact","complet","compodoc","compon","component_templ","components/components.modul","components/sortby/sortbi","componentsmodul","comput","config","configur","confirm","confirmpassword","connect","console.error(err","console.log","console.log(\"email","console.log(\"error","console.log(\"invalid","console.log(\"karma","console.log(\"loggedin","console.log(\"memb","console.log(\"not","console.log(\"subreddit","console.log(\"uid","console.log(\"upd","console.log(\"usernam","console.log('delet","console.log('ionviewdidload","console.log('ok","console.log('subscrib","console.log(err","console.log(karma.v","console.log(this.commentpag","const","constructor","constructor(alertctrl","constructor(authservic","constructor(databaseservic","constructor(ev","constructor(messag","constructor(nam","constructor(navctrl","constructor(priv","constructor(storag","constructor(titl","constructor(viewctrl","content","conveni","copi","core","correct","count","counter","coverag","creat","createlinkpost","createlinkpost(postdata","createpost","createpost'},{'nam","createpost.html","createpostmod","createpostmodal.ondiddismiss","createpostmodal.pres","createpostpag","createsubreddit","createsubreddit'},{'nam","createsubreddit.html","createsubredditmod","createsubredditmodal.ondiddismiss(sub_id","createsubredditmodal.pres","createsubredditpag","createtextpost","createtextpost(postdata","creation","creator","credenti","cssclass","curat","current","currentd","currentdate.gettim","currenttim","currenttime.gettim","d","d.gettim","dark","data","databas","database.ref('com","database.ref('post","database.ref('posts/').once('value').then(post","database.ref('subreddit","database.ref('subredditlist","database.ref('subreddits/').once('value').then(subreddit","database.ref('us","database.ref('userlist","databaseservic","databaseurl","datashar","datasharingservic","date","datepost","day","daysdiffer","decemb","declar","declin","decor","default","defaulthistori","defin","delet","deletecom","deletecomment(subredditid","deletecomment(subredditid:str","deleted\":\"thi","deletepost","deletepost(subredditid","deletesubreddit","deletesubreddit(subredditid","depend","descript","determin","develop","devic","didn't","differ","din","direct","disabl","disabled\":\"your","disableinput","discuss","dismiss","display","displaynam","document","dom","domain","domain\":\"app","don't","don\\'t","download","downvot","downvotecom","downvotecomment(usernam","downvotepost","downvotepost(usernam","driverord","due","duplic","eas","element","elementref","email","emit","enablebackdropdismiss","engin","enter","entrycompon","environ","err.messag","error","error\":\"incorrect","errorhandl","ev","event","event.target.valu","exist","expir","expired\":\"your","explicit","export","failed\":\"network","fals","fff","field","file","filter","fire","firebas","firebase.auth().createuserwithemailandpassword(email","firebase.auth().currentus","firebase.auth().currentuser.emailverifi","firebase.auth().currentuser.metadata.creationtim","firebase.auth().currentuser.sendemailverification().then","firebase.auth().currentuser.uid","firebase.auth().onauthstatechanged((us","firebase.auth().sendpasswordresetemail(form.value.emailinput).then","firebase.auth().setpersistence(firebase.auth.auth.persistence.local).then","firebase.auth().signinwithemailandpassword(email","firebase.auth().signout().catch((err","firebase.auth().signout().then","firebase.databas","firebase.database().ref(\"/com","firebase.database().ref(\"/post","firebase.database().ref('com","firebase.database().ref('post","firebase.database().ref('subreddit","firebase.database().ref('subreddits').push().key","firebase.database().ref('us","firebase.database().ref('userlist/').upd","firebase.database().ref().update(upd","firebase.database().ref(`users/${user_id}/subscribed/${subreddit_id","firebase.database().ref(`users/${user_id}/subscribed`).once('value').then(subreddit","firebase.database.servervalue.timestamp","firebase.initializeapp(config","firebasesetup","flame","forgot","form","form.value.commentinput.trim","form.value.confirmpassword","form.value.emailinput","form.value.password","form.value.photourl","form.value.textinput","form.value.titleinput","form.value.titleinput.tolowercas","form.value.urlinput","found","function","gener","get","getactivethem","getallpost","getallsubreddit","getcom","getcomment(postid","getemail","geterrmsg","geterrmsg(cod","getinitsubreddit","getismobil","getkarma","getkarma(user_id","getmembersinc","getphoto","getphotourl","getpost","getpost(post_id","getpostcom","getpostcomments(postid","getpswd","getscreeni","getscreenx","getsubreddit","getsubreddit(subreddit_id","getsubredditpost","getsubredditposts(subredditid","getsubscrib","getsubscribedsubreddit","getsubscribedsubreddits(user_id","getthem","getthemeasstr","getuid","getusernam","go","goal","gotolink","gotosubreddit","gotosubreddit(subreddit_id","group","handl","handler","hasdownvot","hasupvot","height","here","higher","histori","home","home'},{'nam","home.html","homepag","homepagemodul","hot","hoursdiffer","html","httpmodul","https://reddit","icon","icons[sortmethod","id","identifi","if(sub_id","imag","implement","import","in/sign","inbox","increment","index","index.html","indexeddb","info","inform","initi","initializesearch","initsubreddit","inject","input","insert","insertionsorthot","insertionsortnew","insertionsorttop","instal","instruct","internet","invalid","ionic","ionic/storag","ionicapp","ionicerrorhandl","ionicmodul","ionicmodule.forroot(myapp","ionicpag","ionicpagemodul","ionicpagemodule.forchild(homepag","ionicpagemodule.forchild(subredditpag","ionicstoragemodul","ionicstoragemodule.forroot","ionviewdidload","iscardlayout","isempti","islinkpost","isloggedin","ismobil","issubscrib","issubscribed(subreddit_id","isurl","isurl(str","isverifi","it'","itemcolor","j","json","karma","karma\").once('value').then(karma","key","key\":\"invalid","key).update(comment).catch(err","key).update(post).catch(err","keyup","larg","last","legend","len","letter","level","light","link","linkpost","list","load","loading.dismiss","loading.pres","loadingcontrol","loadingctrl","local","locationstrategi","log","logg","loggedin","login","login\":\"tim","login'},{'nam","login.html","login/signup","loginpag","loginus","loginuser(form","logout","longer","look","lower","major","mani","match","math.abs(a","math.floor(differ","meet","member","membersinc","menu","menucolor","menuiconcolor","messag","messagingsenderid","metadata","method","mi","minut","minutesdiffer","mobil","modal","modalcontrol","modalctrl","models/comment.model","models/post.model","models/subreddit.model","modul","moment","myapp","myinput","name","nativ","native/splash","native/statu","nav","navbar","navcontrol","navctrl","navig","navparam","navparams.data.sortmethod","navparams.data.subreddit","nbsp;&nbsp","nbsp;&nbsp;&nbsp","nbsp;&nbsp;subscrib","nbsp;&nbsp;{{sortmethod}}&nbsp;&nbsp","need","needsverif","nelnibizsj2ui","new","newsubreddit","newsubreddit(subredditnam","ngform","ngmodul","ngoninit","node.j","normal","note","notifi","novemb","npm","null","number","numcom","oauth","obj","ok","okay","on","oncancel","oncancel(ev","oninit","oninput","oninput(ev","onlin","open","openauth","openprofil","oper","option","otherwis","out","overlay","overview","page","pages/home/hom","pages/home/home.modul","pages/subreddit/subreddit.modul","param","param(form","paramet","part","pass","password","password).then","path","pattern","pattern.test(str","perman","pertain","photo","photourl","platform","platform.is('mobil","platform.ready().then","pleas","plugin","podium","point","popov","popover.onwilldismiss(sortmethod","popover.pres","popovercontrol","popoverctrl","popular","posit","post","post'},{'nam","post).then((vot","post.html","post.messag","post.numcom","post.post_id","post.post_id).once('value').then(post","post.post_id).update(upd","post.subreddit_id","post.titl","post.val().downvotes[usernam","post.val().hasownproperty(\"downvot","post.val().hasownproperty(\"upvot","post.val().upvotes[usernam","post/post","post[\"upvot","post_id","post_id).once('value').then(post","postcompon","postdata","postdata.link","postdata.messag","postdata.subreddit.nam","postdata.subreddit.subreddit_id","postdata.titl","postdata.user_id","postdata.usernam","postid","postid).remove().then","postid).then((vot","posts.length","posts[j","posts[j][\"scor","posts[j][\"timestamp","power","present","press","primari","principl","privat","profil","profile'},{'nam","profile.html","profilepag","profmod","profmodal.pres","project","projectid","promise((resolv","promise(resolv","promise>(resolv","prompt","proper","properti","provid","pswd","pswd).then","public","push().key","px","quickli","r/:name","r/{{post.subreddit","r/{{subreddit.nam","r/{{subreddit.subreddit_nam","rate","reach","readi","recent","reddit","redevelop","ref","ref.transaction((com","ref.transaction((karma","ref.transaction((scor","refresh","regexp('^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a","regist","reiniti","reject","reject(fals","relativediff(a","relativediff(posts[j][\"scor","relativediff(tmp[\"scor","remov","remove().then","replac","repo","repositori","request","requests\":\"request","reset","resetemail","resetpassword","resetpassword(form","resiz","resolv","resolve(0","resolve(1","resolve(2","resolve(com","resolve(comment.v","resolve(comments.v","resolve(fals","resolve(karma.v","resolve(key","resolve(nul","resolve(post.v","resolve(posts.v","resolve(subreddit","resolve(subreddit.v","resolve(subreddits.v","resolve(this.subreddit","resolve(tru","resort","result","result.v","return","rev1","revis","role","rootpag","rout","run","rxjs/rx","score","scratch","screen","screeni","screenx","scroll","search","searchbar","second","secondari","secondsdiffer","secur","segment","selectedsubreddit","selectedthem","selector","selectsortmethod","selectsortmethod(sortmethod","send","sent","serv","servic","set","setactivethem","setactivetheme(v","setemail","setemail(email","setinitsubreddit","setinitsubreddits(subreddit","setismobil","setismobile(ismobil","setphoto","setphoto(form","setphoto(photo","setpswd","setpswd(pswd","setscreeni","setscreenx","setscreenx(width","setscreeny(height","setsubscribedsubreddit","setsubscribedsubreddits(subscribedsubreddit","settingsprovid","settingsprovider,storageservic","setup","setuserinfo","setusernam","shared/auth.servic","shared/data","shared/database.servic","shared/pag","shared/storage.servic","shared/theming.servic","sharing.servic","sharing.service.t","sharing.service.ts:13","sharing.service.ts:20","sharing.service.ts:26","sharing.service.ts:33","sharing.service.ts:39","sharing.service.ts:46","sharing.service.ts:54","sharing.service.ts:6","sharing.service.ts:7","sharing.service.ts:8","shift","show","showbackgrounddiv","showcom","showcommentbtn","showdeletebtn","showincompleteformerr","showmenu","shownewpostbox","showpasswordserr","showphotolink","showsearchbar","showsortbypopov","showsortbypopover(ev","showsubscribedsubreddit","showuserinfo","sign","signinus","signinuser(email","signupus","signupuser(form","slice:0:120","small","snapshot","snapshot.v","snapshot.val().usernam","social","softwar","sort","sort(sortmethod","sortbi","sortby(post","sortbypopov","sorticon","sortmethod","sortmethod.icon","sortmethod.sortmethod","sourc","space","specif","specifi","splashscreen","splashscreen.hid","sqlite","src/app/app.component.t","src/app/app.component.ts:15","src/app/app.component.ts:16","src/app/app.component.ts:21","src/app/app.component.ts:45","src/app/app.module.t","src/components/comment/comment.t","src/components/comment/comment.ts:119","src/components/comment/comment.ts:12","src/components/comment/comment.ts:129","src/components/comment/comment.ts:13","src/components/comment/comment.ts:139","src/components/comment/comment.ts:14","src/components/comment/comment.ts:15","src/components/comment/comment.ts:16","src/components/comment/comment.ts:17","src/components/comment/comment.ts:18","src/components/comment/comment.ts:183","src/components/comment/comment.ts:19","src/components/comment/comment.ts:20","src/components/comment/comment.ts:21","src/components/comment/comment.ts:22","src/components/comment/comment.ts:23","src/components/comment/comment.ts:30","src/components/comment/comment.ts:34","src/components/comment/comment.ts:47","src/components/comment/comment.ts:83","src/components/components.module.t","src/components/post/post.t","src/components/post/post.ts:103","src/components/post/post.ts:109","src/components/post/post.ts:119","src/components/post/post.ts:14","src/components/post/post.ts:15","src/components/post/post.ts:156","src/components/post/post.ts:16","src/components/post/post.ts:17","src/components/post/post.ts:18","src/components/post/post.ts:19","src/components/post/post.ts:193","src/components/post/post.ts:20","src/components/post/post.ts:203","src/components/post/post.ts:21","src/components/post/post.ts:215","src/components/post/post.ts:219","src/components/post/post.ts:23","src/components/post/post.ts:24","src/components/post/post.ts:25","src/components/post/post.ts:26","src/components/post/post.ts:27","src/components/post/post.ts:28","src/components/post/post.ts:29","src/components/post/post.ts:33","src/components/post/post.ts:34","src/components/post/post.ts:35","src/components/post/post.ts:36","src/components/post/post.ts:41","src/components/post/post.ts:85","src/components/sortby/sortby.t","src/components/sortby/sortby.ts:30","src/components/sortby/sortby.ts:43","src/models/comment.model.t","src/models/comment.model.ts:2","src/models/comment.model.ts:3","src/models/comment.model.ts:4","src/models/comment.model.ts:5","src/models/comment.model.ts:6","src/models/comment.model.ts:7","src/models/post.model.t","src/models/post.model.ts:10","src/models/post.model.ts:11","src/models/post.model.ts:12","src/models/post.model.ts:2","src/models/post.model.ts:3","src/models/post.model.ts:4","src/models/post.model.ts:5","src/models/post.model.ts:6","src/models/post.model.ts:7","src/models/post.model.ts:8","src/models/post.model.ts:9","src/models/subreddit.model.t","src/models/subreddit.model.ts:2","src/models/subreddit.model.ts:3","src/models/subreddit.model.ts:4","src/models/subreddit.model.ts:5","src/models/subreddit.model.ts:6","src/pages/comments/comments.t","src/pages/comments/comments.ts:19","src/pages/comments/comments.ts:20","src/pages/comments/comments.ts:21","src/pages/comments/comments.ts:22","src/pages/comments/comments.ts:23","src/pages/comments/comments.ts:24","src/pages/comments/comments.ts:25","src/pages/comments/comments.ts:28","src/pages/comments/comments.ts:29","src/pages/comments/comments.ts:30","src/pages/comments/comments.ts:49","src/pages/comments/comments.ts:57","src/pages/comments/comments.ts:68","src/pages/comments/comments.ts:75","src/pages/comments/comments.ts:91","src/pages/createpost/createpost.t","src/pages/createpost/createpost.ts:14","src/pages/createpost/createpost.ts:15","src/pages/createpost/createpost.ts:16","src/pages/createpost/createpost.ts:17","src/pages/createpost/createpost.ts:19","src/pages/createpost/createpost.ts:20","src/pages/createpost/createpost.ts:33","src/pages/createpost/createpost.ts:39","src/pages/createpost/createpost.ts:45","src/pages/createpost/createpost.ts:52","src/pages/createpost/createpost.ts:79","src/pages/createsubreddit/createsubreddit.t","src/pages/createsubreddit/createsubreddit.ts:13","src/pages/createsubreddit/createsubreddit.ts:14","src/pages/createsubreddit/createsubreddit.ts:17","src/pages/createsubreddit/createsubreddit.ts:18","src/pages/createsubreddit/createsubreddit.ts:29","src/pages/createsubreddit/createsubreddit.ts:36","src/pages/home/home.module.t","src/pages/home/home.t","src/pages/home/home.ts:132","src/pages/home/home.ts:142","src/pages/home/home.ts:163","src/pages/home/home.ts:177","src/pages/home/home.ts:198","src/pages/home/home.ts:20","src/pages/home/home.ts:205","src/pages/home/home.ts:21","src/pages/home/home.ts:22","src/pages/home/home.ts:222","src/pages/home/home.ts:23","src/pages/home/home.ts:24","src/pages/home/home.ts:241","src/pages/home/home.ts:25","src/pages/home/home.ts:26","src/pages/home/home.ts:266","src/pages/home/home.ts:27","src/pages/home/home.ts:273","src/pages/home/home.ts:28","src/pages/home/home.ts:29","src/pages/home/home.ts:290","src/pages/home/home.ts:299","src/pages/home/home.ts:30","src/pages/home/home.ts:305","src/pages/home/home.ts:31","src/pages/home/home.ts:32","src/pages/home/home.ts:322","src/pages/home/home.ts:33","src/pages/home/home.ts:34","src/pages/home/home.ts:340","src/pages/home/home.ts:346","src/pages/home/home.ts:35","src/pages/home/home.ts:353","src/pages/home/home.ts:36","src/pages/home/home.ts:367","src/pages/home/home.ts:37","src/pages/home/home.ts:374","src/pages/home/home.ts:38","src/pages/home/home.ts:385","src/pages/home/home.ts:39","src/pages/home/home.ts:40","src/pages/home/home.ts:45","src/pages/home/home.ts:46","src/pages/login/login.t","src/pages/login/login.ts:111","src/pages/login/login.ts:119","src/pages/login/login.ts:140","src/pages/login/login.ts:16","src/pages/login/login.ts:17","src/pages/login/login.ts:18","src/pages/login/login.ts:19","src/pages/login/login.ts:20","src/pages/login/login.ts:209","src/pages/login/login.ts:21","src/pages/login/login.ts:22","src/pages/login/login.ts:23","src/pages/login/login.ts:24","src/pages/login/login.ts:25","src/pages/login/login.ts:250","src/pages/login/login.ts:257","src/pages/login/login.ts:26","src/pages/login/login.ts:261","src/pages/login/login.ts:27","src/pages/login/login.ts:28","src/pages/login/login.ts:35","src/pages/login/login.ts:36","src/pages/login/login.ts:38","src/pages/login/login.ts:39","src/pages/login/login.ts:63","src/pages/login/login.ts:84","src/pages/profile/profile.t","src/pages/profile/profile.ts:18","src/pages/profile/profile.ts:19","src/pages/profile/profile.ts:20","src/pages/profile/profile.ts:21","src/pages/profile/profile.ts:22","src/pages/profile/profile.ts:23","src/pages/profile/profile.ts:24","src/pages/profile/profile.ts:25","src/pages/profile/profile.ts:26","src/pages/profile/profile.ts:33","src/pages/profile/profile.ts:34","src/pages/profile/profile.ts:35","src/pages/profile/profile.ts:38","src/pages/profile/profile.ts:55","src/pages/profile/profile.ts:59","src/pages/profile/profile.ts:63","src/pages/profile/profile.ts:71","src/pages/profile/profile.ts:86","src/pages/profile/profile.ts:90","src/pages/profile/profile.ts:93","src/pages/subreddit/subreddit.module.t","src/pages/subreddit/subreddit.t","src/pages/subreddit/subreddit.ts:105","src/pages/subreddit/subreddit.ts:140","src/pages/subreddit/subreddit.ts:180","src/pages/subreddit/subreddit.ts:20","src/pages/subreddit/subreddit.ts:200","src/pages/subreddit/subreddit.ts:21","src/pages/subreddit/subreddit.ts:22","src/pages/subreddit/subreddit.ts:23","src/pages/subreddit/subreddit.ts:24","src/pages/subreddit/subreddit.ts:248","src/pages/subreddit/subreddit.ts:25","src/pages/subreddit/subreddit.ts:26","src/pages/subreddit/subreddit.ts:27","src/pages/subreddit/subreddit.ts:28","src/pages/subreddit/subreddit.ts:29","src/pages/subreddit/subreddit.ts:30","src/pages/subreddit/subreddit.ts:31","src/pages/subreddit/subreddit.ts:32","src/pages/subreddit/subreddit.ts:33","src/pages/subreddit/subreddit.ts:39","src/pages/subreddit/subreddit.ts:40","src/pages/subreddit/subreddit.ts:41","src/pages/subreddit/subreddit.ts:42","src/pages/subreddit/subreddit.ts:73","src/pages/subreddit/subreddit.ts:90","src/shared/auth.service.t","src/shared/auth.service.ts:10","src/shared/auth.service.ts:107","src/shared/auth.service.ts:11","src/shared/auth.service.ts:116","src/shared/auth.service.ts:12","src/shared/auth.service.ts:123","src/shared/auth.service.ts:13","src/shared/auth.service.ts:131","src/shared/auth.service.ts:138","src/shared/auth.service.ts:146","src/shared/auth.service.ts:150","src/shared/auth.service.ts:157","src/shared/auth.service.ts:177","src/shared/auth.service.ts:22","src/shared/auth.service.ts:36","src/shared/auth.service.ts:63","src/shared/auth.service.ts:7","src/shared/auth.service.ts:77","src/shared/auth.service.ts:8","src/shared/auth.service.ts:84","src/shared/auth.service.ts:9","src/shared/auth.service.ts:92","src/shared/data","src/shared/database.service.t","src/shared/database.service.ts:106","src/shared/database.service.ts:124","src/shared/database.service.ts:142","src/shared/database.service.ts:160","src/shared/database.service.ts:17","src/shared/database.service.ts:178","src/shared/database.service.ts:192","src/shared/database.service.ts:205","src/shared/database.service.ts:219","src/shared/database.service.ts:253","src/shared/database.service.ts:286","src/shared/database.service.ts:29","src/shared/database.service.ts:320","src/shared/database.service.ts:354","src/shared/database.service.ts:366","src/shared/database.service.ts:378","src/shared/database.service.ts:389","src/shared/database.service.ts:401","src/shared/database.service.ts:413","src/shared/database.service.ts:426","src/shared/database.service.ts:441","src/shared/database.service.ts:465","src/shared/database.service.ts:48","src/shared/database.service.ts:493","src/shared/database.service.ts:522","src/shared/database.service.ts:550","src/shared/database.service.ts:560","src/shared/database.service.ts:578","src/shared/database.service.ts:600","src/shared/database.service.ts:613","src/shared/database.service.ts:625","src/shared/database.service.ts:66","src/shared/database.service.ts:8","src/shared/database.service.ts:86","src/shared/storage.service.t","src/shared/storage.service.ts:13","src/shared/storage.service.ts:24","src/shared/storage.service.ts:41","src/shared/storage.service.ts:6","src/shared/storage.service.ts:65","src/shared/storage.service.ts:7","src/shared/storage.service.ts:71","src/shared/theming.service.t","src/shared/theming.service.ts:17","src/shared/theming.service.ts:32","src/shared/theming.service.ts:39","src/shared/theming.service.ts:45","src/shared/theming.service.ts:9","sso","star","start","state","statement","statusbar","statusbar.styledefault","still","storag","storagebucket","storageservic","str","str.includ","string","sub_id","submit","submitcom","submitcomment(form","submitpost","submitpost(form","submitsubreddit","submitsubreddit(form","subredddit","subreddit","subreddit'","subreddit.descript","subreddit.html","subreddit.nam","subreddit.name.tolowercase().indexof(event.target.value.tolowercas","subreddit_id","subreddit_id).once('value').then(subreddit","subreddit_id).then","subreddit_nam","subredditdescript","subredditdisplay","subredditid","subredditid).once('value').then(post","subredditid).remove().then","subredditkey","subredditlist","subredditlist.foreach((subreddit","subredditlist.push(subreddits[key","subredditnam","subredditname).once('value').then(result","subredditpag","subredditpagemodul","subreddits.push","subscrib","subscribe(user_id","subscribed.push(subreddits[key","subscribedsubreddit","subscribedsubreddits.length","subscribes/unsubscrib","subscribesubreddit","subscribesubreddit(user_id","subtitl","success","support","sure","svg","switch","switchform","switchtoresetemail","tabl","tablesort(document.getelementbyid('coverag","take","tell","templat","templateurl","temporari","term","text","textarea","textcolor","textpost","theme","theme').then(them","then(funct","thing","this.alertctrl.cr","this.authservice.getemail","this.authservice.getmembersinc","this.authservice.getphoto","this.authservice.getpswd","this.authservice.getuid","this.authservice.getusernam","this.authservice.isloggedin","this.authservice.logout().then","this.authservice.setemail(email","this.authservice.setphoto(this.photo","this.authservice.setpswd(password","this.authservice.updateauthstate().then","this.calculatedatepost","this.changephoto","this.checkvotedcomment(usernam","this.checkvotedpost(usernam","this.closealloverlay","this.closemod","this.closemodal(key","this.com","this.comment.comment_id).then((com","this.comment.scor","this.comment.timestamp","this.comment_id","this.commentcount","this.comments.push(com","this.comments.push(new","this.creat","this.databaseservice.checkdownvoted(us","this.databaseservice.checkdownvotedcomment(us","this.databaseservice.checkgetsubreddit(subredditname).then((subreddit","this.databaseservice.checkupvoted(us","this.databaseservice.checkupvotedcomment(us","this.databaseservice.createlinkpost(postdata).then","this.databaseservice.createtextpost(postdata).then","this.databaseservice.deletecomment(this.subredditid","this.databaseservice.deletepost(this.post.subreddit_id","this.databaseservice.downvotecomment(us","this.databaseservice.downvotepost(us","this.databaseservice.getallposts().then((subreddit","this.databaseservice.getcomment(this.postid","this.databaseservice.getkarma(this.uid).then(karma","this.databaseservice.getpost(this.post.post_id","this.databaseservice.getpostcomments(this.post.post_id).then((com","this.databaseservice.getpostcommentslength(this.post.post_id).then(count","this.databaseservice.getsubreddit(subreddit_id).then((subreddit","this.databaseservice.getsubreddit(this.post.subreddit_id).then((subreddit","this.databaseservice.getsubredditposts(\"subredditid_1\").then((post","this.databaseservice.getsubredditposts(this.id).then(post","this.databaseservice.getsubreddits().then((subreddit","this.databaseservice.getsubreddits().then(subreddit","this.databaseservice.getsubscribedsubreddits(this.authservice.getuid()).then(subreddit","this.databaseservice.newsubreddit(titl","this.databaseservice.subscribesubreddit(user_id","this.databaseservice.unsubscribesubreddit(user_id","this.databaseservice.upvotecomment(us","this.databaseservice.upvotepost(us","this.databaseservice.writecomment(commentdata","this.datasharing.getismobil","this.datasharing.getscreeni","this.datasharing.getscreenx","this.datasharing.setismobile(platform.is('mobil","this.datasharing.setscreenx(platform.width","this.datasharing.sortby(this.post","this.datepost","this.descript","this.disableinput","this.email","this.events.publish('nav","this.events.publish('platform:readi","this.events.publish('refresh:subscrib","this.events.publish('theme:retriev","this.events.publish('update:com","this.events.publish('update:post","this.events.publish('user:loggedin&set","this.events.subscribe('nav","this.events.subscribe('platform:readi","this.events.subscribe('refresh:subscrib","this.events.subscribe('theme:retriev","this.events.subscribe('update:com","this.events.subscribe('update:post","this.events.subscribe('user:loggedin&set","this.firebasesetup","this.getallpost","this.getallsubreddit","this.getpost","this.getpostcom","this.getsubreddit(subredditid).then(subreddit","this.getsubscrib","this.getsubscribedsubreddits().then","this.getthem","this.gotosubreddit(sub_id","this.id","this.initializesearch","this.iscardlayout","this.isempti","this.islinkpost","this.isloggedin","this.ismobil","this.issubscrib","this.isurl(form.value.photourl","this.isurl(url","this.itemcolor","this.karma","this.link","this.loadingctrl.cr","this.loggedin","this.membersinc","this.menucolor","this.menuiconcolor","this.messag","this.modalctrl.create(createpostpag","this.modalctrl.create(createsubredditpag","this.modalctrl.create(loginpag","this.modalctrl.create(profilepag","this.myinput.nativeelement.scrollheight","this.myinput.nativeelement.style.height","this.nam","this.navbar.backbuttonclick","this.navctrl.pop","this.navctrl.push('subreddit","this.navctrl.push(commentspag","this.navctrl.viewdidleave.subscrib","this.navparams.data","this.navparams.data.post","this.navparams.data.sortmethod","this.navparams.data.them","this.navparams.data['nam","this.navparams.data['uid","this.needsverif","this.numcom","this.openauth","this.password","this.photo","this.photourl","this.popoverctrl.create(sortbypopov","this.post","this.post).then((point","this.post).then(boolean","this.post.link","this.post.post_id","this.post.post_id).then","this.post.scor","this.post.subreddit_id).then((com","this.post.subreddit_id).then((post","this.post.timestamp","this.post_id","this.postid).then((point","this.postid).then(boolean","this.postid,this.comment.comment_id).then","this.posts.concat(object.values(post","this.posts.push(posts[key","this.posts.push(subreddit[subredditkey","this.resetemail","this.scor","this.screeni","this.screenx","this.selectedthem","this.setphoto(\"https://www.stockvault.net/data/2009/10/05/110974/thumb16.jpg","this.setup","this.setusernam","this.setusername().then","this.showbackgrounddiv","this.showcom","this.showincompleteformerr","this.showmenu","this.shownewpostbox","this.showpasswordserr","this.showsearchbar","this.showsubscribedsubreddit","this.signinuser(email","this.signinuser(form.value.emailinput","this.sort(\"hot","this.sort(this.sortmethod","this.sorticon","this.sortmethod","this.storage.get(\"userhasaccount\").then(v","this.storage.get('app","this.storage.get('subscribedsubreddits').then(subreddit","this.storage.get('userhasaccount').then((v","this.storage.set('app","this.storage.set('isloggedin","this.storage.set('subscribedsubreddit","this.storage.set('userhasaccount","this.storageservice.getinitsubreddit","this.storageservice.getsubscribedsubreddits().then(subreddit","this.storageservice.getsubscribedsubreddits().then(subscrib","this.storageservice.getsubscribedsubreddits().then(subscribedsubreddit","this.storageservice.issubscribed(this.subreddit.subreddit_id","this.storageservice.setinitsubreddits(subscribedsubreddit","this.storageservice.setsubscribedsubreddit","this.storageservice.setsubscribedsubreddits(subreddit","this.storageservice.setsubscribedsubreddits(subscrib","this.subreddit","this.subreddit.subreddit_id","this.subreddit_id","this.subredditdisplay","this.subreddits.filter((subreddit","this.subreddits.push(subreddits[key","this.subscribedsubreddit","this.textcolor","this.them","this.theme.asobserv","this.theme.next(v","this.theme.valu","this.theming.getactivetheme().subscribe(v","this.theming.getthemeasstr","this.theming.setactivetheme('dark","this.theming.setactivetheme('light","this.timestamp","this.titl","this.uid","this.uid).once('value').then((snapshot","this.updatecom","this.updatecommentscore(com","this.updatepost","this.updatepostscore(post","this.us","this.user_id","this.userdownvot","this.userhasaccount","this.userkarmaupdate(comment.uid","this.userkarmaupdate(post.user_id","this.usernam","this.usernametext","this.userupvot","this.validusernam","this.viewcontroller.dismiss","this.viewcontroller.dismiss(this.isloggedin","this.viewctrl.dismiss","this.viewctrl.dismiss(sub_id","those","threshold","through","time","timestamp","titl","title.indexof","tmp","tmp[\"timestamp","todo","toggl","togglelayout","togglemenu","togglenewpostbox","togglesearchbar","togglethem","token","token\":\"us","top","topic","tree","tri","true","true).then","type","u/:usernam","u/{{post.us","u/{{usernam","uid","uid).set","unavail","under","unsubscrib","unsubscribe(user_id","unsubscribesubreddit","unsubscribesubreddit(user_id","unsupported\":\"brows","until","unusu","up","updat","updateauthst","updatecom","updatecommentscor","updatecommentscore(com","updatepost","updatepostscor","updatepostscore(post","updates[\"/downvot","updates[\"/upvot","updates['subreddit","updates['subredditlist","upvot","upvote[postdata.usernam","upvotecom","upvotecomment(usernam","upvotepost","upvotepost(usernam","upvotes/downvot","url","us","useclass","user","user'","user.displaynam","user.email","user.photourl","user.uid","user.updateprofil","user_id","user_uid","user_uid).then(key","userdownvot","userhasaccount","userkarmaupd","userkarmaupdate(user_id","userlist","usernam","username).on('valu","username.length","username.tolowercas","usernametext","userupvot","val","val.trim","valid","validusernam","valu","var","variabl","verif","verifi","version","view","viewchild","viewchild('myinput","viewchild(navbar","viewcontrol","viewctrl","void","votabl","vote","w","w+$/i.test(usernam","want","websql","welcom","well","white","width","window.open(this.post.link","window.screen.height","window.screen.width","write","writecom","writecomment(commentdata","written","year","yearsdiffer","z0","z]{2,5}(:[0","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nReddit Clone\nRepo for Group 29's 3XA3 term project -- Reddit Clone\nDescription\nReddit is a community based social news aggregator where users can post information and take part in online discussions pertaining to specific topics with ease.\nThe goal of this project is to redevelop Reddit with all  of it's core functionality from scratch using proper software engineering principles.\nSetup Instructions\n\nHave Node.js and Ionic 2 installed on your computer\nClone or download this repository\nRun npm install to install project dependencies\nUse the command ionic serve to run the app in your local browser\n\nMajor Revision History for MIS Documentation\nMIS documentation generated with Compodoc and can be viewed under Documentation --> Rev1 --> MIS --> index.html\n\n1.0 MIS created on November 7, 2017\n1.1 MIS updated on November 9, 2017\n1.2 MIS updated on November 10, 2017\n2.0 MIS updated on December 3, 2017\n\nCurrent version: 2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_SubredditPageModule\n\n\n\ncluster_SubredditPageModule_declarations\n\n\n\n\nMyApp\n\nMyApp\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMyApp->AppModule\n\n\n\n\n\nCommentsPage\n\nCommentsPage\n\nAppModule -->\n\nCommentsPage->AppModule\n\n\n\n\n\nSortByPopover\n\nSortByPopover\n\nAppModule -->\n\nSortByPopover->AppModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAppModule -->\n\nLoginPage->AppModule\n\n\n\n\n\nCreatePostPage\n\nCreatePostPage\n\nAppModule -->\n\nCreatePostPage->AppModule\n\n\n\n\n\nCreateSubredditPage\n\nCreateSubredditPage\n\nAppModule -->\n\nCreateSubredditPage->AppModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nAppModule -->\n\nProfilePage->AppModule\n\n\n\n\n\nIonicApp \n\nIonicApp \n\nIonicApp  -->\n\nAppModule->IonicApp \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nSubredditPageModule\n\nSubredditPageModule\n\nAppModule -->\n\nSubredditPageModule->AppModule\n\n\n\n\n\nSettingsProvider\n\nSettingsProvider\n\nAppModule -->\n\nSettingsProvider->AppModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nAppModule -->\n\nStorageService->AppModule\n\n\n\n\n\nDataSharingService\n\nDataSharingService\n\nAppModule -->\n\nDataSharingService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nPostComponent->ComponentsModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nComponentsModule -->\n\nCommentComponent->ComponentsModule\n\n\n\n\n\nPostComponent \n\nPostComponent \n\nPostComponent  -->\n\nComponentsModule->PostComponent \n\n\n\n\n\nCommentComponent \n\nCommentComponent \n\nCommentComponent  -->\n\nComponentsModule->CommentComponent \n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nSubredditPage\n\nSubredditPage\n\nSubredditPageModule -->\n\nSubredditPage->SubredditPageModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        12 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubredditPageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nMyApp\n\nMyApp\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMyApp->AppModule\n\n\n\n\n\nCommentsPage\n\nCommentsPage\n\nAppModule -->\n\nCommentsPage->AppModule\n\n\n\n\n\nSortByPopover\n\nSortByPopover\n\nAppModule -->\n\nSortByPopover->AppModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAppModule -->\n\nLoginPage->AppModule\n\n\n\n\n\nCreatePostPage\n\nCreatePostPage\n\nAppModule -->\n\nCreatePostPage->AppModule\n\n\n\n\n\nCreateSubredditPage\n\nCreateSubredditPage\n\nAppModule -->\n\nCreateSubredditPage->AppModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nAppModule -->\n\nProfilePage->AppModule\n\n\n\n\n\nIonicApp \n\nIonicApp \n\nIonicApp  -->\n\nAppModule->IonicApp \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nSubredditPageModule\n\nSubredditPageModule\n\nAppModule -->\n\nSubredditPageModule->AppModule\n\n\n\n\n\nSettingsProvider\n\nSettingsProvider\n\nAppModule -->\n\nSettingsProvider->AppModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nAppModule -->\n\nStorageService->AppModule\n\n\n\n\n\nDataSharingService\n\nDataSharingService\n\nAppModule -->\n\nDataSharingService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MyApp\n                            \n                            \n                                CommentsPage\n                            \n                            \n                                SortByPopover\n                            \n                            \n                                LoginPage\n                            \n                            \n                                CreatePostPage\n                            \n                            \n                                CreateSubredditPage\n                            \n                            \n                                ProfilePage\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SettingsProvider\n                            \n                            \n                                     StorageService\n                            \n                            \n                                     DataSharingService\n                            \n                            \n                                     AuthService\n                            \n                            \n                                     DatabaseService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomePageModule\n                            \n                            \n                                    SubredditPageModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                IonicApp\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { IonicStorageModule } from \"@ionic/storage\";\n\nimport { MyApp } from './app.component';\nimport { AuthService } from '../shared/auth.service';\nimport { ComponentsModule } from '../components/components.module';\nimport { DatabaseService } from '../shared/database.service';\nimport { DataSharingService } from '../shared/data-sharing.service';\nimport { HomePage, CommentsPage, LoginPage, SubredditPage, CreatePostPage, CreateSubredditPage, ProfilePage} from '../shared/pages';\nimport { HomePageModule } from '../pages/home/home.module';\nimport { HttpModule } from '@angular/http';\nimport { SettingsProvider } from '../shared/theming.service';\nimport { SortByPopover } from '../components/sortBy/sortBy';\nimport { StorageService } from \"../shared/storage.service\";\nimport { SubredditPageModule } from '../pages/subreddit/subreddit.module';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    CommentsPage,\n    SortByPopover,\n    LoginPage,\n    CreatePostPage,\n    CreateSubredditPage,\n    ProfilePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp, {locationStrategy: 'path'}, {\n      links: [\n        { component: HomePage, name: 'home', segment: '' },\n        { component: SubredditPage, name: 'subreddit', segment: 'r/:name', defaultHistory: ['home'] },\n        { component: ProfilePage, name: 'profile', segment: 'u/:username', defaultHistory: ['home'] },\n      ]}),\n    IonicStorageModule.forRoot({\n      name: '_redditclonedb',\n      driverOrder: ['indexeddb', 'websql', 'sqlite']\n    }),\n    HttpModule,\n    HomePageModule,\n    SubredditPageModule,\n    ComponentsModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,    \n    CommentsPage,\n    LoginPage,\n    SubredditPage,\n    CreatePostPage,\n    CreateSubredditPage,\n    ProfilePage,\n    SortByPopover\n  ],\n  providers: [\n    StatusBar, SettingsProvider,StorageService,\n    SplashScreen, DataSharingService, AuthService, DatabaseService,\n    { provide: ErrorHandler, useClass: IonicErrorHandler }\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n  Modules\n  ComponentsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nPostComponent->ComponentsModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nComponentsModule -->\n\nCommentComponent->ComponentsModule\n\n\n\n\n\nPostComponent \n\nPostComponent \n\nPostComponent  -->\n\nComponentsModule->PostComponent \n\n\n\n\n\nCommentComponent \n\nCommentComponent \n\nCommentComponent  -->\n\nComponentsModule->CommentComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/components.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PostComponent\n                            \n                            \n                                CommentComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PostComponent\n                            \n                            \n                                    CommentComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PostComponent } from './post/post';\nimport { CommentComponent } from './comment/comment';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\n\n\n@NgModule({\n\tdeclarations: [PostComponent, CommentComponent],\n\timports: [IonicModule, CommonModule],\n\texports: [PostComponent, CommentComponent]\n})\nexport class ComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n  Modules\n  HomePageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pages/home/home.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomePage\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { HomePage } from './home';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  declarations: [\n    HomePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(HomePage),\n    ComponentsModule\n  ],\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubredditPageModule.html":{"url":"modules/SubredditPageModule.html","title":"module - SubredditPageModule","body":"\n                   \n\n\n\n\n  Modules\n  SubredditPageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubredditPageModule\n\n\n\ncluster_SubredditPageModule_declarations\n\n\n\n\nSubredditPage\n\nSubredditPage\n\n\n\nSubredditPageModule\n\nSubredditPageModule\n\nSubredditPageModule -->\n\nSubredditPage->SubredditPageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pages/subreddit/subreddit.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SubredditPage\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SubredditPage } from './subreddit';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  declarations: [\n    SubredditPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SubredditPage),\n    ComponentsModule\n  ],\n})\nexport class SubredditPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/components/comment/comment.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                comment\n            \n\n\n\n\n            \n                templateUrl\n                comment.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 datePosted\n                            \n                            \n                                 disableInput\n                            \n                            \n                                 isLoggedIn\n                            \n                            \n                                Public navParams\n                            \n                            \n                                 score\n                            \n                            \n                                 userDownvoted\n                            \n                            \n                                 userHasAccount\n                            \n                            \n                                 userUpvoted\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 calculateDatePosted\n                            \n                            \n                                 deleteComment\n                            \n                            \n                                 downvote\n                            \n                            \n                                 ngOnInit\n                            \n                            \n                                 openAuth\n                            \n                            \n                                 updateComment\n                            \n                            \n                                 upvote\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                comment\n                            \n                            \n                                postId\n                            \n                            \n                                showDeleteBtn\n                            \n                            \n                                subredditId\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(alertCtrl: AlertController, authService: AuthService, databaseService: DatabaseService, events: Events, modalCtrl: ModalController, navParams: NavParams)\n                        \n                    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:23\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      alertCtrl\n                                                      \n                                                                AlertController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      authService\n                                                      \n                                                                AuthService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      databaseService\n                                                      \n                                                                DatabaseService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      events\n                                                      \n                                                                Events\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      modalCtrl\n                                                      \n                                                                ModalController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navParams\n                                                      \n                                                                NavParams\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            color\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:17\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            comment\n                        \n                        \n                              \n                                Type:    Comment\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:14\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            postId\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:16\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            showDeleteBtn\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:18\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            subredditId\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:15\n                                \n                            \n                \n            \n    \n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             calculateDatePosted\n                        \n                    \n                    \n                        \n    calculateDatePosted()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:139\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             deleteComment\n                        \n                    \n                    \n                        \n    deleteComment()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:183\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             downvote\n                        \n                    \n                    \n                        \n    downvote()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:83\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:34\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             openAuth\n                        \n                    \n                    \n                        \n    openAuth()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:129\n                                \n                            \n    \n                    \n                        \n                                open the login/signup page\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             updateComment\n                        \n                    \n                    \n                        \n    updateComment()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:119\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             upvote\n                        \n                    \n                    \n                        \n    upvote()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:47\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             datePosted\n                        \n                    \n                    \n                        \n                            datePosted:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:12\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             disableInput\n                        \n                    \n                    \n                        \n                            disableInput:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:19\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isLoggedIn\n                        \n                    \n                    \n                        \n                            isLoggedIn:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:20\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navParams\n                        \n                    \n                    \n                        \n                            navParams:     NavParams\n    \n                        \n                    \n                        \n                            \n                                Type :     NavParams\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:30\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             score\n                        \n                    \n                    \n                        \n                            score:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:21\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             userDownvoted\n                        \n                    \n                    \n                        \n                            userDownvoted:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:22\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             userHasAccount\n                        \n                    \n                    \n                        \n                            userHasAccount:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:13\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             userUpvoted\n                        \n                    \n                    \n                        \n                            userUpvoted:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/comment/comment.ts:23\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\nimport { Comment } from \"../../models/comment.model\";\nimport { NavParams, AlertController, ModalController, Events } from \"ionic-angular\";\nimport { AuthService } from \"../../shared/auth.service\";\nimport { DatabaseService } from \"../../shared/database.service\";\nimport { LoginPage } from \"../../shared/pages\";\n@Component({\n  selector: 'comment',\n  templateUrl: 'comment.html'\n})\nexport class CommentComponent {\n  datePosted: string;\n  userHasAccount: any;\n  @Input() comment: Comment;\n  @Input() subredditId: string;\n  @Input() postId: string;\n  @Input() color: string;\n  @Input() showDeleteBtn: boolean;\n  disableInput: boolean;\n  isLoggedIn: boolean;\n  score: number;\n  userDownvoted: boolean;\n  userUpvoted: boolean;\n  constructor(\n    private alertCtrl: AlertController, \n    private authService: AuthService, \n    private databaseService: DatabaseService, \n    private events: Events,\n    private modalCtrl: ModalController, \n    public navParams: NavParams) {\n    this.isLoggedIn = this.authService.isLoggedIn(); // Check if user is logged in    \n    this.disableInput = false; // For temporary disable input on upvotes/downvotes\n  }\n  ngOnInit() {\n    this.score = this.comment.score;\n    let user = this.authService.getUsername();\n\n    //initialize posts upvotes and downvotes\n    this.databaseService.checkUpvotedComment(user, this.comment, this.postId).then(boolean => {\n      this.userUpvoted = boolean;\n    });\n    this.databaseService.checkDownvotedComment(user, this.comment, this.postId).then(boolean => {\n      this.userDownvoted = boolean;\n    });\n    this.calculateDatePosted();\n  }\n  upvote() {\n    if (this.isLoggedIn) {\n      this.disableInput = true;\n      let user = this.authService.getUsername();\n      this.databaseService.upvoteComment(user, this.comment, this.postId).then((points) => {\n        this.score = this.score + points;\n        this.databaseService.checkUpvotedComment(user, this.comment, this.postId).then(boolean => {\n          this.userUpvoted = boolean;\n        });\n        this.databaseService.checkDownvotedComment(user, this.comment, this.postId).then(boolean => {\n          this.userDownvoted = boolean;\n        });\n        this.updateComment();\n\n      });\n    } else {\n      const alert = this.alertCtrl.create({\n        title: \"Not Logged In\",\n        subTitle: \"Please log in to upvote and downvote posts, as well as create your own subreddits, posts, and comments!\",\n        buttons: [\n          {\n            text: 'Log In/Sign Up',\n            role: 'login',\n            handler: data => {\n              this.openAuth();\n            }\n          },\n          {\n            text: 'Dismiss'\n          }\n        ]\n      });\n      alert.present();\n    }\n  }\n\n  downvote() {\n    if (this.isLoggedIn) {\n      this.disableInput = true;\n      let user = this.authService.getUsername();\n      this.databaseService.downvoteComment(user, this.comment, this.postId).then((points) => {\n        this.score = this.score + points;\n        this.databaseService.checkDownvotedComment(user, this.comment, this.postId).then(boolean => {\n          this.userDownvoted = boolean;\n        });\n        this.databaseService.checkUpvotedComment(user, this.comment, this.postId).then(boolean => {\n          this.userUpvoted = boolean;\n        });\n        this.updateComment();\n      });\n    } else {\n      const alert = this.alertCtrl.create({\n        title: \"Not Logged In\",\n        subTitle: \"Please log in to upvote and downvote posts, as well as create your own subreddits, posts, and comments!\",\n        buttons: [\n          {\n            text: 'Log In/Sign Up',\n            role: 'login',\n            handler: data => {\n              this.openAuth();\n            }\n          },\n          {\n            text: 'Dismiss'\n          }\n        ]\n      });\n      alert.present();\n    }\n\n  }\n\n  updateComment() {\n    this.databaseService.getComment(this.postId, this.comment.comment_id).then((comment) => {\n      this.comment = comment;\n      this.disableInput = false;\n    })\n  }\n\n  /**\n* open the login/signup page\n*/\n  openAuth() {\n    let param = { userHasAccount: this.userHasAccount };\n    let authModal = this.modalCtrl.create(LoginPage, param);\n    authModal.present();\n    authModal.onWillDismiss((isLoggedIn) => {\n      if (isLoggedIn) {\n        this.isLoggedIn = isLoggedIn;\n      }\n    });\n  }\n  calculateDatePosted() {\n    let currentTime = new Date();\n    let difference = currentTime.getTime() - this.comment.timestamp;\n\n    let yearsDifference = Math.floor(difference / 1000 / 60 / 60 / 24 / 365);\n    difference -= yearsDifference * 1000 * 60 * 60 * 24 * 365;\n\n    let daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\n    difference -= daysDifference * 1000 * 60 * 60 * 24\n\n    let hoursDifference = Math.floor(difference / 1000 / 60 / 60);\n    difference -= hoursDifference * 1000 * 60 * 60\n\n    let minutesDifference = Math.floor(difference / 1000 / 60);\n    difference -= minutesDifference * 1000 * 60\n\n    let secondsDifference = Math.floor(difference / 1000);\n\n    if (yearsDifference > 1) {\n      this.datePosted = yearsDifference + ' years ago';\n    }\n    else if (yearsDifference == 1) {\n      this.datePosted = '1 year ago';\n    }\n    else if (daysDifference > 1) {\n      this.datePosted = daysDifference + ' days ago';\n    }\n    else if (daysDifference == 1) {\n      this.datePosted = '1 day ago';\n    }\n    else if (hoursDifference > 1 && hoursDifference = 1) {\n      this.datePosted = minutesDifference + ' minutes ago';\n    }\n    else {\n      this.datePosted = secondsDifference + ' seconds ago';\n    }\n  }\n\n  deleteComment() {\n    this.alertCtrl.create({\n      title: \"Deletion confirmation\",\n      subTitle: \"Are you sure you want to delete this comment?\",\n      buttons: [\n        {\n          text: 'Confirm',\n          handler: data => {\n            this.databaseService.deleteComment(this.subredditId, this.postId,this.comment.comment_id).then(() => {\n              this.events.publish('update:comments')\n            })\n          }\n        },\n        {\n          text: 'Cancel'\n        }\n      ]\n    }).present();\n  }\n}\n    \n\n    \n        \n    \n        {{comment.creator}} &bull; {{datePosted}}\n        \n    \n    \n        {{comment.message}}\n    \n    \n        \n            \n                \n                \n                \n                \n                \n            \n            {{score}}\n            \n                \n                \n                \n                \n                \n            \n        \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{comment.creator}} • {{datePosted}}                        {{comment.message}}                                                                                                                                    {{score}}                                                                                                                        '\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentsPage.html":{"url":"components/CommentsPage.html","title":"component - CommentsPage","body":"\n                   \n\n\n\n\n\n  Components\n  CommentsPage\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/pages/comments/comments.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 comments\n                            \n                            \n                                Public events\n                            \n                            \n                                 itemColor\n                            \n                            \n                                 myInput\n                            \n                            \n                                 navBar\n                            \n                            \n                                Public navCtrl\n                            \n                            \n                                Public navParams\n                            \n                            \n                                 post\n                            \n                            \n                                 textColor\n                            \n                            \n                                 username\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 getPostComments\n                            \n                            \n                                 ngOnInit\n                            \n                            \n                                 resize\n                            \n                            \n                                 submitComment\n                            \n                            \n                                 updatePost\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(authService: AuthService, databaseService: DatabaseService, events: Events, navCtrl: NavController, navParams: NavParams, theming: SettingsProvider)\n                        \n                    \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:25\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      authService\n                                                      \n                                                                AuthService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      databaseService\n                                                      \n                                                                DatabaseService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      events\n                                                      \n                                                                Events\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navCtrl\n                                                      \n                                                                NavController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navParams\n                                                      \n                                                                NavParams\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      theming\n                                                      \n                                                                SettingsProvider\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             getPostComments\n                        \n                    \n                    \n                        \n    getPostComments()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:91\n                                \n                            \n    \n                    \n                        \n                                get all comments for a post\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:49\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             resize\n                        \n                    \n                    \n                        \n    resize()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:68\n                                \n                            \n    \n                    \n                        \n                                for resizing textarea as user types\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             submitComment\n                        \n                    \n                    \n                        \n    submitComment(form: NgForm)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:75\n                                \n                            \n    \n                    \n                        \n                                add a comment to a post\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      form\n                                                      \n                                                              NgForm\n                                                      \n                                                      \n                                                      \n                                                      comment message to be added\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             updatePost\n                        \n                    \n                    \n                        \n    updatePost()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:57\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             comments\n                        \n                    \n                    \n                        \n                            comments:     Comment[]\n    \n                        \n                    \n                        \n                            \n                                Type :     Comment[]\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:20\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public events\n                        \n                    \n                    \n                        \n                            events:     Events\n    \n                        \n                    \n                        \n                            \n                                Type :     Events\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:28\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             itemColor\n                        \n                    \n                    \n                        \n                            itemColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:21\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             myInput\n                        \n                    \n                    \n                        \n                            myInput:     ElementRef\n    \n                        \n                    \n                        \n                            \n                                Type :     ElementRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:24\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             navBar\n                        \n                    \n                    \n                        \n                            navBar:     Navbar\n    \n                        \n                    \n                        \n                            \n                                Type :     Navbar\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:25\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navCtrl\n                        \n                    \n                    \n                        \n                            navCtrl:     NavController\n    \n                        \n                    \n                        \n                            \n                                Type :     NavController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:29\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navParams\n                        \n                    \n                    \n                        \n                            navParams:     NavParams\n    \n                        \n                    \n                        \n                            \n                                Type :     NavParams\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:30\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             post\n                        \n                    \n                    \n                        \n                            post:     Post\n    \n                        \n                    \n                        \n                            \n                                Type :     Post\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:19\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             textColor\n                        \n                    \n                    \n                        \n                            textColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:22\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             username\n                        \n                    \n                    \n                        \n                            username:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/comments/comments.ts:23\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Navbar, Events } from 'ionic-angular';\nimport { NgForm } from '@angular/forms';\n\nimport { AuthService } from '../../shared/auth.service';\nimport { Comment } from '../../models/comment.model';\nimport { DatabaseService } from '../../shared/database.service';\nimport { Post } from '../../models/post.model';\nimport { SettingsProvider } from '../../shared/theming.service';\n\n@IonicPage({\n  name: 'commentpage'\n})\n@Component({\n  selector: 'page-comments',\n  templateUrl: 'comments.html',\n})\nexport class CommentsPage implements OnInit {\n  post: Post;\n  comments: Comment[];\n  itemColor: string;\n  textColor: string;\n  username: string;\n  @ViewChild('myInput') myInput: ElementRef;\n  @ViewChild(Navbar) navBar: Navbar;\n  constructor(private authService: AuthService,\n    private databaseService: DatabaseService,\n    public events: Events,\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private theming: SettingsProvider) {\n    //theming\n    let theme;\n    this.theming.getActiveTheme().subscribe(val => {\n      theme = val;\n      this.itemColor = theme == 'dark-theme' ? '#1a1a1a' : '#fff';\n      this.textColor = theme == 'dark-theme' ? '#fff' : '#000';\n    });\n    this.username = this.authService.getUsername();\n    this.post = this.navParams.data.post;\n    this.getPostComments();\n\n    this.events.subscribe('update:comments', () => {\n      this.updatePost();      \n      this.getPostComments();\n    });\n  }\n\n  ngOnInit() {\n    // When the back button is pressed\n    this.navBar.backButtonClick = () => {\n      this.events.publish('nav');\n      this.navCtrl.pop();\n    }\n  }\n\n  updatePost() {\n    this.databaseService.getPost(this.post.post_id, this.post.subreddit_id).then((post) => {\n      if (this.post) {\n        this.post = post;\n      }\n    })\n  }\n\n  /**\n   * for resizing textarea as user types\n   */\n  resize() {\n    this.myInput.nativeElement.style.height = this.myInput.nativeElement.scrollHeight + 'px';\n  }\n  /**\n   * add a comment to a post\n   * @param form comment message to be added\n   */\n  submitComment(form: NgForm) {\n    if (form.value.commentInput.trim()) {\n      let commentData = {\n        creator: this.authService.getUsername(),\n        UID: this.authService.getUID(),\n        message: form.value.commentInput.trim(),\n        score: 0\n      }\n      this.databaseService.writeComment(commentData, this.post.post_id, this.post.subreddit_id).then((comment: Comment) => {\n        this.comments.push(comment);\n      });\n    }\n  }\n  /**\n   * get all comments for a post\n   */\n  getPostComments() {\n    this.databaseService.getPostComments(this.post.post_id).then((comments) => {\n      this.comments = [];\n      for (var key in comments) {\n        this.comments.push(new Comment(\n          comments[key].message,\n          comments[key].timestamp,\n          comments[key].creator,\n          comments[key].UID,\n          comments[key].comment_id,\n          comments[key].score\n        ));\n      }\n    });\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreatePostPage.html":{"url":"components/CreatePostPage.html","title":"component - CreatePostPage","body":"\n                   \n\n\n\n\n\n  Components\n  CreatePostPage\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/pages/createpost/createpost.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-createpost\n            \n\n\n\n\n            \n                templateUrl\n                createpost.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 isLinkPost\n                            \n                            \n                                 itemColor\n                            \n                            \n                                Public navCtrl\n                            \n                            \n                                Public navParams\n                            \n                            \n                                 subreddit\n                            \n                            \n                                 textColor\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 closeModal\n                            \n                            \n                                 isURL\n                            \n                            \n                                 linkPost\n                            \n                            \n                                 submitPost\n                            \n                            \n                                 textPost\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(navCtrl: NavController, navParams: NavParams, authService: AuthService, databaseService: DatabaseService)\n                        \n                    \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:17\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      navCtrl\n                                                      \n                                                                NavController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navParams\n                                                      \n                                                                NavParams\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      authService\n                                                      \n                                                                AuthService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      databaseService\n                                                      \n                                                                DatabaseService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             closeModal\n                        \n                    \n                    \n                        \n    closeModal()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:45\n                                \n                            \n    \n                    \n                        \n                                close the new post modal\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isURL\n                        \n                    \n                    \n                        \n    isURL(str: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:79\n                                \n                            \n    \n                    \n                        \n                                determine if a url is valid\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      str\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      url to be checked\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     any\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             linkPost\n                        \n                    \n                    \n                        \n    linkPost()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:33\n                                \n                            \n    \n                    \n                        \n                                determine if new post has link\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             submitPost\n                        \n                    \n                    \n                        \n    submitPost(form: NgForm)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:52\n                                \n                            \n    \n                    \n                        \n                                send the new post to the database\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      form\n                                                      \n                                                              NgForm\n                                                      \n                                                      \n                                                      \n                                                      new post form\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             textPost\n                        \n                    \n                    \n                        \n    textPost()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:39\n                                \n                            \n    \n                    \n                        \n                                determine if new post has text\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             isLinkPost\n                        \n                    \n                    \n                        \n                            isLinkPost:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:14\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             itemColor\n                        \n                    \n                    \n                        \n                            itemColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:15\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navCtrl\n                        \n                    \n                    \n                        \n                            navCtrl:     NavController\n    \n                        \n                    \n                        \n                            \n                                Type :     NavController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:19\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navParams\n                        \n                    \n                    \n                        \n                            navParams:     NavParams\n    \n                        \n                    \n                        \n                            \n                                Type :     NavParams\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:20\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             subreddit\n                        \n                    \n                    \n                        \n                            subreddit:     Subreddit\n    \n                        \n                    \n                        \n                            \n                                Type :     Subreddit\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:16\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             textColor\n                        \n                    \n                    \n                        \n                            textColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/createpost/createpost.ts:17\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AuthService } from '../../shared/auth.service';\nimport { Subreddit } from '../../models/subreddit.model';\nimport { DatabaseService } from '../../shared/database.service';\nimport { NgForm } from '@angular/forms';\n\n@IonicPage()\n@Component({\n  selector: 'page-createpost',\n  templateUrl: 'createpost.html',\n})\nexport class CreatePostPage {\n  isLinkPost: boolean;\n  itemColor: string;\n  subreddit: Subreddit;\n  textColor: string;\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams, \n    private authService: AuthService, \n    private databaseService: DatabaseService) {\n    this.isLinkPost = true;\n    this.subreddit = navParams.data.subreddit;\n    //theme\n    let theme = this.navParams.data.theme;\n    this.itemColor = theme == 'dark-theme' ? '#1a1a1a' : '#fff';\n    this.textColor = theme == 'dark-theme' ? '#fff' : '#000';\n  }\n  /**\n   * determine if new post has link\n   */\n  linkPost() {\n    this.isLinkPost = true;\n  }\n  /**\n   * determine if new post has text\n   */\n  textPost() {\n    this.isLinkPost = false;\n  }\n  /**\n   * close the new post modal\n   */\n  closeModal() {\n    this.navCtrl.pop();\n  }\n  /**\n   * send the new post to the database\n   * @param form new post form\n   */\n  submitPost(form: NgForm) {\n    let title = form.value.titleInput;\n    let url = form.value.urlInput;\n    let text = form.value.textInput;\n    let username = this.authService.getUsername();\n    let user_id = this.authService.getUID();\n\n    if (title) {\n      if (this.isLinkPost && this.isURL(url)) {\n        let postData = {\"title\": title, \"link\": url, \"subreddit\": this.subreddit, \"username\": username, \"user_id\": user_id};\n        this.databaseService.createLinkPost(postData).then(() => {\n          this.closeModal();\n        });\n      } else if (!this.isLinkPost && text) {\n        let postData = {\"title\": title, \"message\": text, \"subreddit\": this.subreddit, \"username\": username, \"user_id\": user_id};        \n        this.databaseService.createTextPost(postData).then(() => {\n          this.closeModal();\n        });\n      } else {\n        console.log(\"Invalid fields\");\n      }   \n    }\n  }\n  /**\n   * determine if a url is valid\n   * @param str url to be checked\n   */\n  isURL(str : string) {\n    if (str.includes('.')) {\n      var pattern = new RegExp('^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$');\n      return pattern.test(str);\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n    \n        \n\t\n\t\tSubmitting a post to\n\t\t\tr/{{subreddit.name}}\n\t\t\n\t\n\n\n\t\n\t\tLink\n\t\tLink\n\t\tText\n\t\tText\n\t\t\n\t\t\t\n\t\t\t\tTitle\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\tURL\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\tText\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\tSubmit\n\t\t\t\tCancel\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\tSubmitting a post to\t\t\tr/{{subreddit.name}}\t\t\t\t\t\tLink\t\tLink\t\tText\t\tText\t\t\t\t\t\t\t\t\tTitle\t\t\t\t\t\t\t\t\t\t\t\t\t\tURL\t\t\t\t\t\t\t\t\t\t\t\t\t\tText\t\t\t\t\t\t\t\t\t\t\t\t\t\tSubmit\t\t\t\tCancel\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreatePostPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateSubredditPage.html":{"url":"components/CreateSubredditPage.html","title":"component - CreateSubredditPage","body":"\n                   \n\n\n\n\n\n  Components\n  CreateSubredditPage\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/pages/createsubreddit/createsubreddit.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-createsubreddit\n            \n\n\n\n\n            \n                templateUrl\n                createsubreddit.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 itemColor\n                            \n                            \n                                Public navCtrl\n                            \n                            \n                                Public navParams\n                            \n                            \n                                 textColor\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 closeModal\n                            \n                            \n                                 submitSubreddit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(navCtrl: NavController, navParams: NavParams, authService: AuthService, databaseService: DatabaseService, viewCtrl: ViewController)\n                        \n                    \n                            \n                                \n                                    Defined in src/pages/createsubreddit/createsubreddit.ts:14\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      navCtrl\n                                                      \n                                                                NavController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navParams\n                                                      \n                                                                NavParams\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      authService\n                                                      \n                                                                AuthService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      databaseService\n                                                      \n                                                                DatabaseService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      viewCtrl\n                                                      \n                                                                ViewController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             closeModal\n                        \n                    \n                    \n                        \n    closeModal(sub_id: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/createsubreddit/createsubreddit.ts:29\n                                \n                            \n    \n                    \n                        \n                                close the create subreddit modal\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      sub_id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             submitSubreddit\n                        \n                    \n                    \n                        \n    submitSubreddit(form: NgForm)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/createsubreddit/createsubreddit.ts:36\n                                \n                            \n    \n                    \n                        \n                                send a new subreddit to the database\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      form\n                                                      \n                                                              NgForm\n                                                      \n                                                      \n                                                      \n                                                      form with subreddit data\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             itemColor\n                        \n                    \n                    \n                        \n                            itemColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/createsubreddit/createsubreddit.ts:13\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navCtrl\n                        \n                    \n                    \n                        \n                            navCtrl:     NavController\n    \n                        \n                    \n                        \n                            \n                                Type :     NavController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/createsubreddit/createsubreddit.ts:17\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navParams\n                        \n                    \n                    \n                        \n                            navParams:     NavParams\n    \n                        \n                    \n                        \n                            \n                                Type :     NavParams\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/createsubreddit/createsubreddit.ts:18\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             textColor\n                        \n                    \n                    \n                        \n                            textColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/createsubreddit/createsubreddit.ts:14\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController } from 'ionic-angular';\nimport { AuthService } from '../../shared/auth.service';\nimport { DatabaseService } from '../../shared/database.service';\nimport { NgForm } from '@angular/forms';\n\n@IonicPage()\n@Component({\n  selector: 'page-createsubreddit',\n  templateUrl: 'createsubreddit.html',\n})\nexport class CreateSubredditPage {\n  itemColor: string;\n  textColor: string;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private authService: AuthService,\n    private databaseService: DatabaseService,\n    private viewCtrl: ViewController) {\n    let theme = this.navParams.data.theme;\n    this.itemColor = theme == 'dark-theme' ? '#1a1a1a' : '#fff';\n    this.textColor = theme == 'dark-theme' ? '#fff' : '#000';\n  }\n  /**\n   * close the create subreddit modal\n   */\n  closeModal(sub_id: string) {\n    this.viewCtrl.dismiss(sub_id);\n  }\n  /**\n   * send a new subreddit to the database\n   * @param form form with subreddit data\n   */\n  submitSubreddit(form: NgForm) {\n    let title = form.value.titleInput.toLowerCase(); // No white space, only lower case\n    let text = form.value.textInput;\n    let username = this.authService.getUsername();\n    let user_uid = this.authService.getUID();\n\n    if (title && text && (title.indexOf(' ')  {\n        if (valid) {\n          this.databaseService.newSubreddit(title, text, username, user_uid).then(key => {\n            this.closeModal(key);\n          });\n        } else {\n          // Show error message\n          console.log(\"Subreddit already exists\");\n        }\n      })\n    } else {\n      console.log(\"Invalid fields\");\n    }\n  }\n\n}\n\n\n\n    \n\n    \n        \n    \n      Creating a Subreddit\n    \n  \n  \n    \n     \n      \n        \n          Title\n          \n        \n       \n        \n          Description\n          \n        \n        \n          Submit\n          Cancel\n        \n      \n  \n    \n  \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Creating a Subreddit                                         Title                                           Description                                    Submit          Cancel                        '\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateSubredditPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/pages/home/home.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-home\n            \n\n\n\n\n            \n                templateUrl\n                home.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 isCardLayout\n                            \n                            \n                                 isLoggedIn\n                            \n                            \n                                 isMobile\n                            \n                            \n                                 menuColor\n                            \n                            \n                                 menuIconColor\n                            \n                            \n                                Public modalCtrl\n                            \n                            \n                                Public navCtrl\n                            \n                            \n                                 posts\n                            \n                            \n                                 selectedSubreddit\n                            \n                            \n                                 selectedTheme\n                            \n                            \n                                 showBackgroundDiv\n                            \n                            \n                                 showMenu\n                            \n                            \n                                 showNewPostBox\n                            \n                            \n                                 showSearchbar\n                            \n                            \n                                 showSubscribedSubreddits\n                            \n                            \n                                 sortIcon\n                            \n                            \n                                 sortMethod\n                            \n                            \n                                 subredditDisplay\n                            \n                            \n                                 subreddits\n                            \n                            \n                                 subscribedSubreddits\n                            \n                            \n                                 user_id\n                            \n                            \n                                 userHasAccount\n                            \n                            \n                                 username\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 closeAllOverlays\n                            \n                            \n                                 createSubreddit\n                            \n                            \n                                 getAllPosts\n                            \n                            \n                                 getAllSubreddits\n                            \n                            \n                                 getSubscribed\n                            \n                            \n                                 goToSubreddit\n                            \n                            \n                                 initializeSearch\n                            \n                            \n                                 logout\n                            \n                            \n                                 onCancel\n                            \n                            \n                                 onInput\n                            \n                            \n                                 openAuth\n                            \n                            \n                                 openProfile\n                            \n                            \n                                 setUp\n                            \n                            \n                                 setUsername\n                            \n                            \n                                 showSortByPopover\n                            \n                            \n                                 sort\n                            \n                            \n                                 toggleLayout\n                            \n                            \n                                 toggleMenu\n                            \n                            \n                                 toggleSearchbar\n                            \n                            \n                                 toggleTheme\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(authService: AuthService, databaseService: DatabaseService, dataSharing: DataSharingService, events: Events, modalCtrl: ModalController, navCtrl: NavController, popoverCtrl: PopoverController, theming: SettingsProvider, storage: Storage, storageService: StorageService)\n                        \n                    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:40\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      authService\n                                                      \n                                                                AuthService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      databaseService\n                                                      \n                                                                DatabaseService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      dataSharing\n                                                      \n                                                                DataSharingService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      events\n                                                      \n                                                                Events\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      modalCtrl\n                                                      \n                                                                ModalController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navCtrl\n                                                      \n                                                                NavController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      popoverCtrl\n                                                      \n                                                                PopoverController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      theming\n                                                      \n                                                                SettingsProvider\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      storage\n                                                      \n                                                                Storage\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      storageService\n                                                      \n                                                                StorageService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             closeAllOverlays\n                        \n                    \n                    \n                        \n    closeAllOverlays()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:290\n                                \n                            \n    \n                    \n                        \n                                close any overlaying components\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             createSubreddit\n                        \n                    \n                    \n                        \n    createSubreddit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:385\n                                \n                            \n    \n                    \n                        \n                                create a new subreddit\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             getAllPosts\n                        \n                    \n                    \n                        \n    getAllPosts()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:177\n                                \n                            \n    \n                    \n                        \n                                get all posts\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             getAllSubreddits\n                        \n                    \n                    \n                        \n    getAllSubreddits()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:163\n                                \n                            \n    \n                    \n                        \n                                get a list of all subreddits\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             getSubscribed\n                        \n                    \n                    \n                        \n    getSubscribed()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:142\n                                \n                            \n    \n                    \n                        \n                                get user's subscribed subreddits from storage or from database\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             goToSubreddit\n                        \n                    \n                    \n                        \n    goToSubreddit(subreddit_id: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:374\n                                \n                            \n    \n                    \n                        \n                                navigate to a subreddit's page\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      subreddit_id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             initializeSearch\n                        \n                    \n                    \n                        \n    initializeSearch()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:346\n                                \n                            \n    \n                    \n                        \n                                reinitialize the search results on keyup\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             logout\n                        \n                    \n                    \n                        \n    logout()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:205\n                                \n                            \n    \n                    \n                        \n                                Log out user\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onCancel\n                        \n                    \n                    \n                        \n    onCancel(event: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:367\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      event\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      click event fired by user's input\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onInput\n                        \n                    \n                    \n                        \n    onInput(event: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:353\n                                \n                            \n    \n                    \n                        \n                                filter the list of subreddits and display those that match the user's input\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      event\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      keyup event fired by the user's input\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             openAuth\n                        \n                    \n                    \n                        \n    openAuth()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:222\n                                \n                            \n    \n                    \n                        \n                                open the login/signup page\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             openProfile\n                        \n                    \n                    \n                        \n    openProfile()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:241\n                                \n                            \n    \n                    \n                        \n                                open the user profile page\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             setUp\n                        \n                    \n                    \n                        \n    setUp()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:132\n                                \n                            \n    \n                    \n                        \n                                Set up environment\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             setUsername\n                        \n                    \n                    \n                        \n    setUsername()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:198\n                                \n                            \n    \n                    \n                        \n                                set the user's username\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showSortByPopover\n                        \n                    \n                    \n                        \n    showSortByPopover(ev: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:322\n                                \n                            \n    \n                    \n                        \n                                show a popover with options to sort posts by\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      ev\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      tells the popover where to display on the page\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             sort\n                        \n                    \n                    \n                        \n    sort(sortMethod: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:340\n                                \n                            \n    \n                    \n                        \n                                sort the posts\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      sortMethod\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      method to sort posts by\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             toggleLayout\n                        \n                    \n                    \n                        \n    toggleLayout()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:299\n                                \n                            \n    \n                    \n                        \n                                switch between large images and small images\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             toggleMenu\n                        \n                    \n                    \n                        \n    toggleMenu()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:266\n                                \n                            \n    \n                    \n                        \n                                Get posts from specified subreddit\n    toggle the display of the menu\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             toggleSearchbar\n                        \n                    \n                    \n                        \n    toggleSearchbar()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:273\n                                \n                            \n    \n                    \n                        \n                                toggle the display of the searchbar\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             toggleTheme\n                        \n                    \n                    \n                        \n    toggleTheme()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/home/home.ts:305\n                                \n                            \n    \n                    \n                        \n                                switch between dark and light themes\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             isCardLayout\n                        \n                    \n                    \n                        \n                            isCardLayout:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:23\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isLoggedIn\n                        \n                    \n                    \n                        \n                            isLoggedIn:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:24\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isMobile\n                        \n                    \n                    \n                        \n                            isMobile:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:25\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             menuColor\n                        \n                    \n                    \n                        \n                            menuColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:26\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             menuIconColor\n                        \n                    \n                    \n                        \n                            menuIconColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:21\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public modalCtrl\n                        \n                    \n                    \n                        \n                            modalCtrl:     ModalController\n    \n                        \n                    \n                        \n                            \n                                Type :     ModalController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:45\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navCtrl\n                        \n                    \n                    \n                        \n                            navCtrl:     NavController\n    \n                        \n                    \n                        \n                            \n                                Type :     NavController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:46\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             posts\n                        \n                    \n                    \n                        \n                            posts:     Post[]\n    \n                        \n                    \n                        \n                            \n                                Type :     Post[]\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:22\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             selectedSubreddit\n                        \n                    \n                    \n                        \n                            selectedSubreddit:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:37\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             selectedTheme\n                        \n                    \n                    \n                        \n                            selectedTheme:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:38\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showBackgroundDiv\n                        \n                    \n                    \n                        \n                            showBackgroundDiv:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:27\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showMenu\n                        \n                    \n                    \n                        \n                            showMenu:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:28\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showNewPostBox\n                        \n                    \n                    \n                        \n                            showNewPostBox:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:30\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showSearchbar\n                        \n                    \n                    \n                        \n                            showSearchbar:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:31\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showSubscribedSubreddits\n                        \n                    \n                    \n                        \n                            showSubscribedSubreddits:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:20\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             sortIcon\n                        \n                    \n                    \n                        \n                            sortIcon:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:32\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             sortMethod\n                        \n                    \n                    \n                        \n                            sortMethod:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:29\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             subredditDisplay\n                        \n                    \n                    \n                        \n                            subredditDisplay:     Subreddit[]\n    \n                        \n                    \n                        \n                            \n                                Type :     Subreddit[]\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:34\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             subreddits\n                        \n                    \n                    \n                        \n                            subreddits:     Subreddit[]\n    \n                        \n                    \n                        \n                            \n                                Type :     Subreddit[]\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:33\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             subscribedSubreddits\n                        \n                    \n                    \n                        \n                            subscribedSubreddits:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:39\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             user_id\n                        \n                    \n                    \n                        \n                            user_id:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:40\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             userHasAccount\n                        \n                    \n                    \n                        \n                            userHasAccount:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:36\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             username\n                        \n                    \n                    \n                        \n                            username:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/home/home.ts:35\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavController, ModalController, PopoverController, Events } from 'ionic-angular';\nimport { Storage } from \"@ionic/storage\";\n\nimport { AuthService } from '../../shared/auth.service';\nimport { DatabaseService } from '../../shared/database.service';\nimport { DataSharingService } from '../../shared/data-sharing.service';\nimport { LoginPage, CreateSubredditPage, ProfilePage } from \"../../shared/pages\";\nimport { Post } from '../../models/post.model';\nimport { SettingsProvider } from \"../../shared/theming.service\";\nimport { SortByPopover } from '../../components/sortBy/sortBy';\nimport { Subreddit } from '../../models/subreddit.model';\nimport { StorageService } from '../../shared/storage.service';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  showSubscribedSubreddits: boolean;\n  menuIconColor: string;\n  posts: Post[];\n  isCardLayout: boolean;\n  isLoggedIn: boolean;\n  isMobile: boolean;\n  menuColor: string;\n  showBackgroundDiv: boolean;\n  showMenu: boolean;\n  sortMethod: string;\n  showNewPostBox: boolean;\n  showSearchbar: boolean;\n  sortIcon: string;\n  subreddits: Subreddit[];\n  subredditDisplay: Subreddit[];\n  username: string;\n  userHasAccount: boolean;\n  selectedSubreddit: string;\n  selectedTheme: string;\n  subscribedSubreddits: any;\n  user_id: string;\n  constructor(private authService: AuthService,\n    private databaseService: DatabaseService,\n    private dataSharing: DataSharingService,\n    private events: Events,\n    public modalCtrl: ModalController,\n    public navCtrl: NavController,\n    private popoverCtrl: PopoverController,\n    private theming: SettingsProvider,\n    private storage: Storage,\n    private storageService: StorageService) {\n    // Update authservice variables when still logged in\n    this.authService.updateAuthState().then(() => {\n      this.setUp();\n      this.isLoggedIn = this.authService.isLoggedIn();\n      this.user_id = this.authService.getUID();\n    });\n    //set up theme, event emitted in theme service\n    this.events.subscribe('theme:retrieved', () => {\n      this.theming.getActiveTheme().subscribe(val => {\n        if (val) {\n          this.selectedTheme = val;\n          switch (val) {\n            case 'light-theme':\n              this.menuColor = 'light';\n              this.menuIconColor = 'secondary';\n              break;\n            case 'dark-theme':\n              this.menuColor = 'dark';\n              this.menuIconColor = 'primary';\n              break;\n          }\n        }\n        else {\n          this.selectedTheme = 'light-theme';\n          this.menuColor = 'light';\n          this.menuIconColor = 'secondary';\n        }\n      });\n    });\n    //fires when the user id is set in authService\n    this.events.subscribe('user:loggedin&set', () => {\n      this.getSubscribed();\n    })\n    this.menuIconColor = 'secondary';\n\n    this.isLoggedIn = this.authService.isLoggedIn();\n    this.storage.get(\"userHasAccount\").then(val => {\n      this.userHasAccount = val;\n    });\n    \n    this.user_id = this.authService.getUID();\n    this.showSubscribedSubreddits = true;\n\n\n    this.posts = [];\n\n    //initial sort by method and icon\n    this.sortIcon = 'flame';\n    this.sortMethod = 'hot';\n    //searchbar results\n    // this.databaseService.getSubreddits().then(subreddits => {\n    //   this.subreddits = subreddits;\n    //   this.subredditDisplay = [];\n    // });\n\n    this.isCardLayout = false;\n    this.closeAllOverlays();\n\n    // When user logs in, update authservice variables\n    this.events.subscribe('update:posts', () => {\n      this.authService.updateAuthState().then(() => {\n        this.setUsername();\n        this.posts = []; // Clear posts\n        this.getAllPosts(); // Get votable posts\n      });\n    });\n    // When user navigates from subreddits, refresh\n    this.events.subscribe('nav', () => {\n      this.isLoggedIn = this.authService.isLoggedIn();\n      this.getAllPosts();\n    });\n    //refresh subscribed when user subscribes/unsubscribes\n    this.events.subscribe('refresh:subscribed', () => {\n      this.storageService.getSubscribedSubreddits().then(subscribed => {\n        this.subscribedSubreddits = subscribed;\n      });\n    });\n  }\n  /** \n   * Set up environment\n   */\n  setUp() {\n    this.setUsername();\n    this.getAllSubreddits();\n    this.getAllPosts();\n    this.isMobile = this.dataSharing.getIsMobile();\n    this.sort(\"hot\");\n  }\n  /**\n   * get user's subscribed subreddits from storage or from database\n   */\n  getSubscribed() {\n    //initialize subscribed subreddits\n    let subscribedSubreddits = this.storageService.getInitSubreddits();\n    // if (!subscribedSubreddits || subscribedSubreddits.length == 0) {\n      this.databaseService.getSubscribedSubreddits(this.authService.getUID()).then(subreddits => {\n        this.subscribedSubreddits = subreddits;\n        let subscribed = [];\n        for (var key in subreddits) {\n          subscribed.push(subreddits[key]);\n        }\n        this.subscribedSubreddits = subscribed;\n        this.storageService.setSubscribedSubreddits(subscribed);\n      });\n    // }\n    // else {\n    //   this.subscribedSubreddits = subscribedSubreddits;\n    // }\n  }\n  /**\n   * get a list of all subreddits\n   */\n  getAllSubreddits() {\n    // Clean subreddits\n    this.subreddits = [];\n    // Get subreddits\n    this.databaseService.getSubreddits().then((subreddits) => {\n      this.subreddits = [];\n      for (var key in subreddits) {\n        this.subreddits.push(subreddits[key]);\n      }\n    }).catch(err => console.error(err));\n  }\n  /**\n   * get all posts\n   */\n  getAllPosts() {\n    // Clean posts\n    this.posts = [];\n    // Get posts\n    this.databaseService.getAllPosts().then((subreddits) => {\n      let subredditList = [];\n      for (var key in subreddits) {\n        subredditList.push(subreddits[key]);\n      }\n      subredditList.forEach((subreddit) => {\n        for (var subredditKey in subreddit) {\n          this.posts.push(subreddit[subredditKey]);\n        }\n      });\n      //initially sort the posts by most popular\n      this.posts = this.dataSharing.sortBy(this.posts, 'hot');\n    }).catch(err => console.error(err));\n  }\n  /**\n   * set the user's username\n   */\n  setUsername() {\n    this.username = this.authService.getUsername();\n  }\n\n  /**\n   * Log out user\n   */\n  logout() {\n    this.authService.logout().then(() => {\n      this.username = \"\";\n      this.isLoggedIn = false;\n      this.closeAllOverlays();\n      this.subscribedSubreddits = [];\n      this.storageService.setSubscribedSubreddits([]);\n      this.authService.updateAuthState().then(() => {\n        this.posts = [];\n        this.getAllPosts();\n\n      });\n    });\n  }\n  /**\n   * open the login/signup page\n   */\n  openAuth() {\n    let param = { theme: this.selectedTheme };\n    let authModal = this.modalCtrl.create(LoginPage, param, {\n      cssClass: this.selectedTheme\n    });\n    authModal.present();\n    authModal.onWillDismiss((isLoggedIn: boolean) => {\n      if (isLoggedIn) {\n        this.isLoggedIn = isLoggedIn;\n        this.userHasAccount = true;\n        this.getSubscribed();\n        this.closeAllOverlays();\n      }\n    });\n  }\n\n  /**\n   * open the user profile page\n   */\n  openProfile() {\n    if (this.isLoggedIn) {\n      let param = { userHasAccount: this.userHasAccount, username: this.username, theme: this.selectedTheme };\n      let profModal = this.modalCtrl.create(ProfilePage, param, {\n        cssClass: this.selectedTheme\n      });\n      profModal.present();\n    }\n    else {\n      this.openAuth();\n    }\n  }\n\n  /**\n   * Get posts from specified subreddit\n   */\n  // getPosts() {\n  //   this.databaseService.getSubredditPosts(\"subredditID_1\").then((posts) => {\n  //     this.posts = this.posts.concat(Object.values(posts));\n  //   }).catch(err => console.error(err));\n  // }\n\n  /**\n   * toggle the display of the menu\n   */\n  toggleMenu() {\n    this.showSearchbar = false;\n    this.showMenu = !this.showMenu;\n  }\n  /**\n   * toggle the display of the searchbar\n   */\n  toggleSearchbar() {\n    this.showMenu = false;\n    this.showSearchbar = !this.showSearchbar;\n  }\n  /*\n  toggleNewPostBox() {\n    if (this.userHasAccount && this.isLoggedIn) {\n      this.showNewPostBox = !this.showNewPostBox;\n    }\n    else {\n      //prompt user to log in\n      this.openAuth();\n    }\n  }*/\n  /**\n   * close any overlaying components\n   */\n  closeAllOverlays() {\n    this.showMenu = false;\n    this.showNewPostBox = false;\n    this.showSearchbar = false;\n    this.showSubscribedSubreddits = true;\n  }\n  /**\n   * switch between large images and small images\n   */\n  toggleLayout() {\n    this.isCardLayout = !this.isCardLayout;\n  }\n  /**\n   * switch between dark and light themes\n   */\n  toggleTheme() {\n    if (this.selectedTheme === 'dark-theme') {\n      this.theming.setActiveTheme('light-theme');\n      this.selectedTheme = 'light-theme';\n      this.menuColor = 'light';\n      this.menuIconColor = 'secondary';\n    } else {\n      this.theming.setActiveTheme('dark-theme');\n      this.selectedTheme = 'dark-theme';\n      this.menuColor = 'dark';\n      this.menuIconColor = 'primary';\n    }\n  }\n  /**\n   * show a popover with options to sort posts by\n   * @param ev tells the popover where to display on the page\n   */\n  showSortByPopover(ev) {\n    this.showBackgroundDiv = true;\n    let popover = this.popoverCtrl.create(SortByPopover, { sortMethod: this.sortMethod });\n    popover.present({ ev: ev });\n    popover.onWillDismiss(sortMethod => {\n      if (sortMethod != this.sortMethod && sortMethod) {\n        this.sortMethod = sortMethod.sortMethod;\n        this.sortIcon = sortMethod.icon;\n\n        this.sort(this.sortMethod);\n      }\n      this.showBackgroundDiv = false;\n    })\n  }\n  /**\n   * sort the posts\n   * @param sortMethod method to sort posts by\n   */\n  sort(sortMethod: string) {\n    this.posts = this.dataSharing.sortBy(this.posts, sortMethod);\n  }\n  /**\n   * reinitialize the search results on keyup\n   */\n  initializeSearch() {\n    this.subredditDisplay = [];\n  }\n  /**\n   * filter the list of subreddits and display those that match the user's input\n   * @param event keyup event fired by the user's input\n   */\n  onInput(event) {\n    this.initializeSearch();\n    let val = event.target.value;\n    if (val && val.trim() != '') {\n      this.showSubscribedSubreddits = false;\n      this.subredditDisplay = this.subreddits.filter((subreddit) => {\n        return subreddit.name.toLowerCase().indexOf(event.target.value.toLowerCase()) > -1;\n      });\n    }\n  }\n  /**\n   * \n   * @param event click event fired by user's input\n   */\n  onCancel(event) {\n    this.showSubscribedSubreddits = true;\n  }\n  /**\n   * navigate to a subreddit's page\n   * @param subreddit the subreddit to nav to\n   */\n  goToSubreddit(subreddit_id: string) {\n    this.databaseService.getSubreddit(subreddit_id).then((subreddit) => {\n      if (subreddit) {\n        this.navCtrl.push('subreddit', subreddit);\n      }\n    });\n  }\n\n  /**\n   * create a new subreddit\n   */\n  createSubreddit() {\n    let createSubredditModal = this.modalCtrl.create(CreateSubredditPage, { theme: this.selectedTheme }, {\n      cssClass: this.selectedTheme\n    });\n    if (this.isLoggedIn) {\n      createSubredditModal.present();\n      createSubredditModal.onDidDismiss(sub_id => {\n        if(sub_id != null){\n          this.goToSubreddit(sub_id);\n        }\n      })\n    } else {\n      let authModal = this.modalCtrl.create(LoginPage, { theme: this.selectedTheme }, { cssClass: this.selectedTheme });\n      authModal.present();\n      authModal.onWillDismiss((isLoggedIn) => {\n        if (isLoggedIn) {\n          this.isLoggedIn = isLoggedIn;\n          this.getSubscribed();\n        }\n      });\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n      Home\n    \n    \n      \n        \n       -->\n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n  \n\n\n\n  \n  \n    \n      r/{{subreddit.name}}\n    \n    \n      Subscribed Subreddits\n      r/{{subreddit.subreddit_name}}\n    \n  \n  \n  \n    {{!isLoggedIn ? 'Log In / Register' : 'Sign Out'}}\n  \n\n  \n    Subreddit navigation:\n    \n      \n        {{subreddit.name}}\n      \n    \n    GO\n   -->\n\n  \n    Welcome to Reddit Clone\n    \n      A social news aggregator where users have the power to add, rate, and curate content!\n    \n    Your username is u/{{username}}\n    \n  \n  \n  Create a Subreddit -->\n  \n  \n    Sort Posts By\n    \n      &nbsp;&nbsp;{{sortMethod}}&nbsp;&nbsp;\n      \n    \n  \n  \n  \n  \n    \n  \n\n\n  \n  \n    \n      &nbsp;&nbsp;&nbsp;\n      {{!isLoggedIn ? 'Log In / Sign Up' : 'Log Out'}}\n    \n    \n      &nbsp;&nbsp;&nbsp;\n      Create a Subreddit\n    \n    \n      &nbsp;&nbsp;&nbsp;\n      {{isCardLayout ? 'Compact View' : 'Card View'}}\n    \n    \n      &nbsp;&nbsp;&nbsp;\n      {{selectedTheme == 'dark-theme' ? 'Light Theme' : 'Dark Theme'}}\n    \n    \n      &nbsp;&nbsp;&nbsp;\n      Profile\n    \n  \n\n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Home                             -->                                                                    r/{{subreddit.name}}              Subscribed Subreddits      r/{{subreddit.subreddit_name}}              {{!isLoggedIn ? \\'Log In / Register\\' : \\'Sign Out\\'}}        Subreddit navigation:                  {{subreddit.name}}              GO   -->      Welcome to Reddit Clone          A social news aggregator where users have the power to add, rate, and curate content!        Your username is u/{{username}}          Create a Subreddit -->        Sort Posts By            {{sortMethod}}                                                 {{!isLoggedIn ? \\'Log In / Sign Up\\' : \\'Log Out\\'}}                       Create a Subreddit                       {{isCardLayout ? \\'Compact View\\' : \\'Card View\\'}}                       {{selectedTheme == \\'dark-theme\\' ? \\'Light Theme\\' : \\'Dark Theme\\'}}                       Profile          '\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPage\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/pages/login/login.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-login\n            \n\n\n\n\n            \n                templateUrl\n                login.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Public events\n                            \n                            \n                                 isLoggedIn\n                            \n                            \n                                 isMobile\n                            \n                            \n                                 itemColor\n                            \n                            \n                                Public navCtrl\n                            \n                            \n                                Public navParams\n                            \n                            \n                                 needsVerification\n                            \n                            \n                                 resetEmail\n                            \n                            \n                                 screenX\n                            \n                            \n                                 screenY\n                            \n                            \n                                 showIncompleteFormErr\n                            \n                            \n                                 showPasswordsErr\n                            \n                            \n                                 textColor\n                            \n                            \n                                 userHasAccount\n                            \n                            \n                                 usernameText\n                            \n                            \n                                 validUsername\n                            \n                            \n                                Public viewController\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 attemptSignIn\n                            \n                            \n                                 checkUsername\n                            \n                            \n                                 closeModal\n                            \n                            \n                                 loginUser\n                            \n                            \n                                 resetPassword\n                            \n                            \n                                 signInUser\n                            \n                            \n                                 signUpUser\n                            \n                            \n                                 switchForms\n                            \n                            \n                                 switchToResetEmail\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(alertCtrl: AlertController, authService: AuthService, dataSharing: DataSharingService, loadingCtrl: LoadingController, navCtrl: NavController, navParams: NavParams, storage: Storage, viewController: ViewController, events: Events, platform: Platform)\n                        \n                    \n                            \n                                \n                                    Defined in src/pages/login/login.ts:28\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      alertCtrl\n                                                      \n                                                                AlertController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      authService\n                                                      \n                                                                AuthService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      dataSharing\n                                                      \n                                                                DataSharingService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      loadingCtrl\n                                                      \n                                                                LoadingController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navCtrl\n                                                      \n                                                                NavController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navParams\n                                                      \n                                                                NavParams\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      storage\n                                                      \n                                                                Storage\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      viewController\n                                                      \n                                                                ViewController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      events\n                                                      \n                                                                Events\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      platform\n                                                      \n                                                                Platform\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             attemptSignIn\n                        \n                    \n                    \n                        \n    attemptSignIn()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/login/login.ts:119\n                                \n                            \n    \n                    \n                        \n                                attempt to sign in after verification email is sent\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             checkUsername\n                        \n                    \n                    \n                        \n    checkUsername(username: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/login/login.ts:63\n                                \n                            \n    \n                    \n                        \n                                Checking username availibility\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      username\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             closeModal\n                        \n                    \n                    \n                        \n    closeModal()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/login/login.ts:261\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             loginUser\n                        \n                    \n                    \n                        \n    loginUser(form: NgForm)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/login/login.ts:111\n                                \n                            \n    \n                    \n                        \n                                get form data and log user in\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      form\n                                                      \n                                                              NgForm\n                                                      \n                                                      \n                                                      \n                                                      form with user's login info\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             resetPassword\n                        \n                    \n                    \n                        \n    resetPassword(form: NgForm)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/login/login.ts:84\n                                \n                            \n    \n                    \n                        \n                                resetPassword\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      form\n                                                      \n                                                              NgForm\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             signInUser\n                        \n                    \n                    \n                        \n    signInUser(email: string, password: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/login/login.ts:209\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      email\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      user's email\n    \n                                                    \n                                                    \n                                                      password\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      user's password\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             signUpUser\n                        \n                    \n                    \n                        \n    signUpUser(form: NgForm)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/login/login.ts:140\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      form\n                                                      \n                                                              NgForm\n                                                      \n                                                      \n                                                      \n                                                      form with user's sign up information\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             switchForms\n                        \n                    \n                    \n                        \n    switchForms()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/login/login.ts:250\n                                \n                            \n    \n                    \n                        \n                                switch between login and sign up forms\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             switchToResetEmail\n                        \n                    \n                    \n                        \n    switchToResetEmail()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/login/login.ts:257\n                                \n                            \n    \n                    \n                        \n                                switch from normal login to reset email login\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            Public events\n                        \n                    \n                    \n                        \n                            events:     Events\n    \n                        \n                    \n                        \n                            \n                                Type :     Events\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:39\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isLoggedIn\n                        \n                    \n                    \n                        \n                            isLoggedIn:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:16\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isMobile\n                        \n                    \n                    \n                        \n                            isMobile:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:17\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             itemColor\n                        \n                    \n                    \n                        \n                            itemColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:18\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navCtrl\n                        \n                    \n                    \n                        \n                            navCtrl:     NavController\n    \n                        \n                    \n                        \n                            \n                                Type :     NavController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:35\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navParams\n                        \n                    \n                    \n                        \n                            navParams:     NavParams\n    \n                        \n                    \n                        \n                            \n                                Type :     NavParams\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:36\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             needsVerification\n                        \n                    \n                    \n                        \n                            needsVerification:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:19\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             resetEmail\n                        \n                    \n                    \n                        \n                            resetEmail:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:28\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             screenX\n                        \n                    \n                    \n                        \n                            screenX:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:20\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             screenY\n                        \n                    \n                    \n                        \n                            screenY:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:21\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showIncompleteFormErr\n                        \n                    \n                    \n                        \n                            showIncompleteFormErr:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:22\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showPasswordsErr\n                        \n                    \n                    \n                        \n                            showPasswordsErr:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:23\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             textColor\n                        \n                    \n                    \n                        \n                            textColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:24\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             userHasAccount\n                        \n                    \n                    \n                        \n                            userHasAccount:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:25\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             usernameText\n                        \n                    \n                    \n                        \n                            usernameText:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:26\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             validUsername\n                        \n                    \n                    \n                        \n                            validUsername:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:27\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public viewController\n                        \n                    \n                    \n                        \n                            viewController:     ViewController\n    \n                        \n                    \n                        \n                            \n                                Type :     ViewController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/login/login.ts:38\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Platform, AlertController, LoadingController, ViewController, Events } from 'ionic-angular';\nimport { Storage } from \"@ionic/storage\";\n\nimport { DataSharingService } from '../../shared/data-sharing.service';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../../shared/auth.service';\n\nimport * as firebase from 'firebase';\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n  isLoggedIn: boolean;\n  isMobile: boolean;\n  itemColor: string;\n  needsVerification: boolean;\n  screenX: number;\n  screenY: number;\n  showIncompleteFormErr: boolean;\n  showPasswordsErr: boolean;\n  textColor: string;\n  userHasAccount: boolean;\n  usernameText: string;\n  validUsername: boolean;\n  resetEmail: boolean;\n\n  constructor(\n    private alertCtrl: AlertController,\n    private authService: AuthService,\n    private dataSharing: DataSharingService,\n    private loadingCtrl: LoadingController,\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private storage: Storage,\n    public viewController: ViewController,\n    public events: Events,\n    platform: Platform) {\n\t\t// Initialize\n\t\tthis.usernameText = \"\";\n    let theme = this.navParams.data.theme;\n    this.itemColor = theme == 'dark-theme' ? '#1a1a1a' : '#fff';\n    this.textColor = theme == 'dark-theme' ? '#fff' : '#000';\n\t\tthis.screenX = this.dataSharing.getScreenX();\n\t\tthis.screenY = this.dataSharing.getScreenY();\n\t\tthis.isMobile = this.dataSharing.getIsMobile();\n\t\tthis.screenX = window.screen.width;\n\t\tthis.screenY = window.screen.height;\n    this.isMobile = platform.is('mobile');\n    this.resetEmail = false;\n\t\t//does the user have an account?\n\t\tthis.storage.get('userHasAccount').then((val: boolean) => {\n\t\tthis.userHasAccount = val;\n\t\t});\n\t\tthis.validUsername = false;\n  }\n\n  /**\n   * Checking username availibility\n   */\n  checkUsername(username : string) {\n    // Check if username is letters and numbers\n    if (!(/^\\w+$/i.test(username)) || username.length  16)  {\n        this.validUsername = false;\n    } else {\n      username = username.toLowerCase();\n      var database = firebase.database();\n      database.ref('userlist/' + username).on('value', (snapshot) => {\n        if (snapshot.val()) {\n          this.validUsername = false;\n        } else {\n          this.validUsername = true;\n        }\n      });\n    }\n  }\n\n  /**\n   * resetPassword\n   * @param(form: NgForm)\n   */\n  resetPassword(form: NgForm){\n    if (form.value.emailInput) {\n      firebase.auth().sendPasswordResetEmail(form.value.emailInput).then(() => {\n        let alert = this.alertCtrl.create({\n          subTitle: 'reset password email sent to ' + form.value.emailInput,\n          message: 'Please note that it may take time for the email to reach your inbox',\n          buttons: ['Ok']\n        });\n        alert.present();\n        console.log(\"email address reset password sent\")\n        this.resetEmail = false;     \n      }).catch(err => {\n        console.error(err);\n        let alert = this.alertCtrl.create({\n          title: err.message,\n          subTitle: \"Please try again\",\n          buttons: ['Ok']\n        });\n        alert.present();\n      });    \n    }\n  }\n\n  /**\n   * get form data and log user in\n   * @param form form with user's login info\n   */\n  loginUser(form: NgForm) {\n    if (form.value.emailInput && form.value.password) {\n      this.signInUser(form.value.emailInput, form.value.password);\n    }\n  }\n  /**\n   * attempt to sign in after verification email is sent\n   */\n  attemptSignIn() {\n    let email = this.authService.getEmail();\n    let pswd = this.authService.getPswd();\n    firebase.auth().signInWithEmailAndPassword(email, pswd).then(() => {\n      let isVerified = firebase.auth().currentUser.emailVerified;\n      firebase.auth().signOut().catch((err) => console.error(err));\n      if (isVerified) {\n        this.signInUser(email, pswd);\n      }\n      else {\n        this.alertCtrl.create({ \n          title: 'Email not verified', \n          subTitle: 'Please check your email and verify your account', \n          buttons: [{ text: 'Ok' }] }).present();\n      }\n    }).catch(err => console.error(err));\n  }\n  /**\n   * \n   * @param form form with user's sign up information\n   */\n  signUpUser(form: NgForm) {\n    let username = this.usernameText;\n    let email = form.value.emailInput;\n    let password = form.value.password;\n    let confirmPassword = form.value.confirmPassword;\n    if (email && password && confirmPassword) {\n      if (password == confirmPassword) {\n        this.showPasswordsErr = false;\n        this.showIncompleteFormErr = false;\n        //user password is ok, form is complete, so sign up user, then log them in (catch any errors and log them)\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n          this.needsVerification = true;\n          this.authService.setEmail(email);\n          this.authService.setPswd(password);\n\n          let uid = firebase.auth().currentUser.uid;\n\n          // Add user to user collection\n          firebase.database().ref('users/' + uid).set({\n              email: email,\n              karma: 0,\n              username: username,\n          });\n\n          // Add user to userlist (to handle looking for duplicate users)\n          firebase.database().ref('userlist/').update({\n            [username]: uid\n          });\n\n          //send an email to verify the user's email address\n          firebase.auth().currentUser.sendEmailVerification().then(() => {\n            this.alertCtrl.create({\n              title: 'Email sent to ' + email,\n              subTitle: 'Click the link in the email to verify your account',\n              buttons: [{\n                text: 'Ok',\n                role: 'cancel'\n              }]\n            }).present();\n          }).catch(err => console.error(err));\n        }).catch((err) => {\n          //error w/ account creation\n          console.error(err);\n          this.alertCtrl.create({\n            title: err.message,\n            subTitle: 'Please try again',\n            buttons: [\n              {\n                text: 'OK'\n              }\n            ]\n          }).present();\n        }).then(() => {\n          this.storage.set('userHasAccount', true);\n        });\n      }\n      else {\n        this.showPasswordsErr = true;\n      }\n    }\n    else {\n      this.showIncompleteFormErr = true;\n    }\n  }\n  /**\n   * \n   * @param email user's email\n   * @param password user's password\n   */\n  signInUser(email: string, password: string) {\n    //SSO, permanently signed in until explicit sign out\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n\n      let loading = this.loadingCtrl.create({\n        content: 'Loading...',\n        enableBackdropDismiss: false\n      });\n      loading.present();\n      firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n        // TODO: Replace setEmail and setPswd with setUserInfo()\n        this.authService.setEmail(email);\n        this.authService.setPswd(password);\n        this.needsVerification = false;\n        loading.dismiss();\n      }).then(() => {\n        this.storage.set('userHasAccount', true);\n        this.storage.set('isLoggedIn', true).then(() => {\n          this.isLoggedIn = true;\n          this.viewController.dismiss(this.isLoggedIn);\n          this.events.publish('update:posts');\n          this.events.publish('update:comments');\n        });\n    }).catch(err => {\n      loading.dismiss();\n      console.log(err);\n      this.alertCtrl.create({\n        title: err.message,\n        subTitle: 'Please try again',\n        buttons: [\n          {\n            text: 'OK'\n          }\n        ]\n      }).present();\n    });\n  }).catch(err => console.error(err));\n  }\n  /**\n   * switch between login and sign up forms\n   */\n  switchForms() {\n    this.userHasAccount = !this.userHasAccount;\n  }\n\n  /**\n   * switch from normal login to reset email login\n   */\n  switchToResetEmail(){\n    this.resetEmail = !this.resetEmail;\n  }\n\n  closeModal() {\n    this.viewController.dismiss(this.isLoggedIn);\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{userHasAccount ? 'Login' : 'Sign Up'}}\n    \n      \n        \n      \n    \n  \n\n\n\n\n\n  \n    \n    \n      Welcome to Reddit Clone\n      \n      \n        \n          = 3\">\n            \n              {{usernameText}} is available.\n            \n            \n              {{usernameText}} is unavailable.\n            \n          \n\n          \n            \n          \n          \n            \n          \n          \n            \n          \n          \n            \n          \n          Submit\n        \n      \n      \n      \n        \n          \n            \n          \n          \n            \n          \n          Submit\n        \n        \n        Forgot password?\n      \n      \n      \n        Reset Email\n        \n          \n                        \n          \n          send verification email\n        \n        Back to Login Page                  \n      \n      \n      \n        Please Complete All Fields\n        Passwords Do Not Match\n      \n      \n      \n        {{userHasAccount ? \"Don't have an account? Create one here\" : 'Already have an account? Login in Here'}}\n      \n \n      \n      \n        For your convenience, you can quickly sign in AFTER you verify your email\n        Sign In\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{userHasAccount ? \\'Login\\' : \\'Sign Up\\'}}                                              Welcome to Reddit Clone                              = 3\">                          {{usernameText}} is available.                                      {{usernameText}} is unavailable.                                                                                                                                                                Submit                                                                                                            Submit                        Forgot password?                          Reset Email                                                              send verification email                Back to Login Page                                            Please Complete All Fields        Passwords Do Not Match                          {{userHasAccount ? \"Don\\'t have an account? Create one here\" : \\'Already have an account? Login in Here\\'}}                           For your convenience, you can quickly sign in AFTER you verify your email        Sign In            '\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyApp.html":{"url":"components/MyApp.html","title":"component - MyApp","body":"\n                   \n\n\n\n\n\n  Components\n  MyApp\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                app.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 rootPage\n                            \n                            \n                                 selectedTheme\n                            \n                            \n                                Public storageService\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 getTheme\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(events: Events, dataSharing: DataSharingService, databaseService: DatabaseService, platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, storageService: StorageService, theming: SettingsProvider)\n                        \n                    \n                            \n                                \n                                    Defined in src/app/app.component.ts:16\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      events\n                                                      \n                                                                Events\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      dataSharing\n                                                      \n                                                                DataSharingService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      databaseService\n                                                      \n                                                                DatabaseService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      platform\n                                                      \n                                                                Platform\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      statusBar\n                                                      \n                                                                StatusBar\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      splashScreen\n                                                      \n                                                                SplashScreen\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      storageService\n                                                      \n                                                                StorageService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      theming\n                                                      \n                                                                SettingsProvider\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             getTheme\n                        \n                    \n                    \n                        \n    getTheme()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/app.component.ts:45\n                                \n                            \n    \n                    \n                        \n                                get the active theme for the app\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             rootPage\n                        \n                    \n                    \n                        \n                            rootPage:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                        \n                            \n                                Default value : HomePage\n                            \n                        \n                            \n                                \n                                    Defined in src/app/app.component.ts:15\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             selectedTheme\n                        \n                    \n                    \n                        \n                            selectedTheme:     String\n    \n                        \n                    \n                        \n                            \n                                Type :     String\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/app/app.component.ts:16\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public storageService\n                        \n                    \n                    \n                        \n                            storageService:     StorageService\n    \n                        \n                    \n                        \n                            \n                                Type :     StorageService\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/app/app.component.ts:21\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Platform, Events } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { SettingsProvider } from '../shared/theming.service';\nimport { StorageService } from \"../shared/storage.service\";\nimport { DataSharingService } from '../shared/data-sharing.service';\nimport { DatabaseService } from '../shared/database.service';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage: any = HomePage;\n  selectedTheme: String;\n\n  constructor(private events: Events, \n    private dataSharing: DataSharingService,\n    private databaseService: DatabaseService,\n    platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, public storageService: StorageService, private theming: SettingsProvider) {\n    //set up theme, event emitted in theme service\n    this.events.subscribe('theme:retrieved', () => {\n      this.getTheme();\n    });\n    platform.ready().then(() => {\n      //this.dataSharing.setScreenX(platform.width());\n      this.dataSharing.setIsMobile(platform.is('mobile'));\n      this.events.publish('platform:ready');\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n\n      //initialize subscribed subreddits\n      this.storageService.getSubscribedSubreddits().then(subscribedSubreddits => {\n        this.storageService.setInitSubreddits(subscribedSubreddits);\n      });\n\n    });\n  }\n  /**\n   * get the active theme for the app\n   */\n  getTheme() {\n    this.theming.getActiveTheme().subscribe(val => this.selectedTheme = val);\n  };\n}\n\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyApp'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/components/post/post.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                post\n            \n\n\n\n\n            \n                templateUrl\n                post.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Public alertCtrl\n                            \n                            \n                                 commentCount\n                            \n                            \n                                 datePosted\n                            \n                            \n                                 disableInput\n                            \n                            \n                                Public events\n                            \n                            \n                                 isLoggedIn\n                            \n                            \n                                Public modalCtrl\n                            \n                            \n                                Public navCtrl\n                            \n                            \n                                 score\n                            \n                            \n                                 userDownvoted\n                            \n                            \n                                 userHasAccount\n                            \n                            \n                                 userUpvoted\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 calculateDatePosted\n                            \n                            \n                                 deletePost\n                            \n                            \n                                 downvote\n                            \n                            \n                                 goToLink\n                            \n                            \n                                 goToSubreddit\n                            \n                            \n                                 ngOnInit\n                            \n                            \n                                 openAuth\n                            \n                            \n                                 showComments\n                            \n                            \n                                 updatePost\n                            \n                            \n                                 upvote\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commentPage\n                            \n                            \n                                isCardLayout\n                            \n                            \n                                isMobile\n                            \n                            \n                                post\n                            \n                            \n                                showCommentBtn\n                            \n                            \n                                showDeleteBtn\n                            \n                            \n                                subreddit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(authService: AuthService, databaseService: DatabaseService, events: Events, navCtrl: NavController, alertCtrl: AlertController, modalCtrl: ModalController)\n                        \n                    \n                            \n                                \n                                    Defined in src/components/post/post.ts:29\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      authService\n                                                      \n                                                                AuthService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      databaseService\n                                                      \n                                                                DatabaseService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      events\n                                                      \n                                                                Events\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navCtrl\n                                                      \n                                                                NavController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      alertCtrl\n                                                      \n                                                                AlertController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      modalCtrl\n                                                      \n                                                                ModalController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            commentPage\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/post/post.ts:28\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            isCardLayout\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/post/post.ts:24\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            isMobile\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/post/post.ts:25\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            post\n                        \n                        \n                              \n                                Type:    Post\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/post/post.ts:23\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            showCommentBtn\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/post/post.ts:26\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            showDeleteBtn\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/post/post.ts:29\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            subreddit\n                        \n                        \n                              \n                                Type:    Subreddit\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/components/post/post.ts:27\n                                \n                            \n                \n            \n    \n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             calculateDatePosted\n                        \n                    \n                    \n                        \n    calculateDatePosted()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/post/post.ts:41\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             deletePost\n                        \n                    \n                    \n                        \n    deletePost()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/post/post.ts:219\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             downvote\n                        \n                    \n                    \n                        \n    downvote()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/post/post.ts:156\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             goToLink\n                        \n                    \n                    \n                        \n    goToLink()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/post/post.ts:109\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             goToSubreddit\n                        \n                    \n                    \n                        \n    goToSubreddit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/post/post.ts:103\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/post/post.ts:85\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             openAuth\n                        \n                    \n                    \n                        \n    openAuth()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/post/post.ts:203\n                                \n                            \n    \n                    \n                        \n                                open the login/signup page\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showComments\n                        \n                    \n                    \n                        \n    showComments()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/post/post.ts:215\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             updatePost\n                        \n                    \n                    \n                        \n    updatePost()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/post/post.ts:193\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             upvote\n                        \n                    \n                    \n                        \n    upvote()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/post/post.ts:119\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            Public alertCtrl\n                        \n                    \n                    \n                        \n                            alertCtrl:     AlertController\n    \n                        \n                    \n                        \n                            \n                                Type :     AlertController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:35\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             commentCount\n                        \n                    \n                    \n                        \n                            commentCount:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:15\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             datePosted\n                        \n                    \n                    \n                        \n                            datePosted:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:16\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             disableInput\n                        \n                    \n                    \n                        \n                            disableInput:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:18\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public events\n                        \n                    \n                    \n                        \n                            events:     Events\n    \n                        \n                    \n                        \n                            \n                                Type :     Events\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:33\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isLoggedIn\n                        \n                    \n                    \n                        \n                            isLoggedIn:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:17\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public modalCtrl\n                        \n                    \n                    \n                        \n                            modalCtrl:     ModalController\n    \n                        \n                    \n                        \n                            \n                                Type :     ModalController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:36\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navCtrl\n                        \n                    \n                    \n                        \n                            navCtrl:     NavController\n    \n                        \n                    \n                        \n                            \n                                Type :     NavController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:34\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             score\n                        \n                    \n                    \n                        \n                            score:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:14\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             userDownvoted\n                        \n                    \n                    \n                        \n                            userDownvoted:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:21\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             userHasAccount\n                        \n                    \n                    \n                        \n                            userHasAccount:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:19\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             userUpvoted\n                        \n                    \n                    \n                        \n                            userUpvoted:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/post/post.ts:20\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Post } from '../../models/post.model';\nimport { DatabaseService } from '../../shared/database.service';\nimport { AuthService } from '../../shared/auth.service';\nimport { NavController, AlertController, ModalController, Events } from 'ionic-angular';\nimport { LoginPage, CommentsPage } from \"../../shared/pages\";\nimport { Subreddit } from '../../models/subreddit.model';\n\n@Component({\n  selector: 'post',\n  templateUrl: 'post.html'\n})\nexport class PostComponent implements OnInit {\n  score: number;\n  commentCount: number;\n  datePosted: string;\n  isLoggedIn: boolean;\n  disableInput: boolean;\n  userHasAccount: boolean;\n  userUpvoted: boolean;\n  userDownvoted: boolean;\n  \n  @Input() post: Post;\n  @Input() isCardLayout: boolean;\n  @Input() isMobile: boolean;\n  @Input() showCommentBtn: boolean;\n  @Input() subreddit: Subreddit;\n  @Input() commentPage: boolean;\n  @Input() showDeleteBtn: boolean;\n\n  constructor(private authService: AuthService, \n    private databaseService: DatabaseService,\n    public events: Events,\n    public navCtrl: NavController, \n    public alertCtrl: AlertController, \n    public modalCtrl: ModalController) {\n    this.isLoggedIn = this.authService.isLoggedIn(); // Check if user is logged in    \n    this.disableInput = false; // For temporary disable input on upvotes/downvotes\n  }\n\n  calculateDatePosted() {\n    let currentTime = new Date();\n    let difference = currentTime.getTime() - this.post.timestamp;\n\n    let yearsDifference = Math.floor(difference / 1000 / 60 / 60 / 24 / 365);\n    difference -= yearsDifference * 1000 * 60 * 60 * 24 * 365;\n\n    let daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);\n    difference -= daysDifference * 1000 * 60 * 60 * 24\n\n    let hoursDifference = Math.floor(difference / 1000 / 60 / 60);\n    difference -= hoursDifference * 1000 * 60 * 60\n\n    let minutesDifference = Math.floor(difference / 1000 / 60);\n    difference -= minutesDifference * 1000 * 60\n\n    let secondsDifference = Math.floor(difference / 1000);\n\n    if (yearsDifference > 1) {\n      this.datePosted = yearsDifference + ' years ago';\n    }\n    else if (yearsDifference == 1) {\n      this.datePosted = '1 year ago';\n    }\n    else if (daysDifference > 1) {\n      this.datePosted = daysDifference + ' days ago';\n    }\n    else if (daysDifference == 1) {\n      this.datePosted = '1 day ago';\n    }\n    else if (hoursDifference > 1 && hoursDifference = 1) {\n      this.datePosted = minutesDifference + ' minutes ago';\n    }\n    else {\n      this.datePosted = secondsDifference + ' seconds ago';\n    }\n  }\n\n  ngOnInit() {\n    this.score = this.post.score;\n    this.calculateDatePosted();\n    let user = this.authService.getUsername();\n    //initialize posts upvotes and downvotes\n    this.databaseService.checkUpvoted(user, this.post).then(boolean => {\n      this.userUpvoted = boolean;\n    });\n    this.databaseService.checkDownvoted(user, this.post).then(boolean => {\n      this.userDownvoted = boolean;\n    });\n    // this.databaseService.getPostCommentsLength(this.post.post_id).then(count => {\n    //   for (var key in count) {\n    //     this.commentCount++;\n    //   }\n    // });\n  }\n\n  goToSubreddit() {\n    this.databaseService.getSubreddit(this.post.subreddit_id).then((subreddit) => {\n      this.navCtrl.push('subreddit', subreddit);\n    });\n  }\n\n  goToLink() {\n    if (this.post.link) {\n      window.open(this.post.link);\n    } else {\n      console.log(this.commentPage);\n      this.showComments();\n    }\n\n  }\n\n  upvote() {\n    if (this.isLoggedIn){\n      this.disableInput = true;\n      let user = this.authService.getUsername();\n      this.databaseService.upvotePost(user, this.post).then((points) => {\n        this.score = this.score + points;\n        \n        this.databaseService.checkUpvoted(user, this.post).then(boolean => {\n          this.userUpvoted = boolean;\n        });\n        this.databaseService.checkDownvoted(user, this.post).then(boolean => {\n          this.userDownvoted = boolean;\n        });\n        this.updatePost();   \n      });\n    } else{\n      console.log(\"not logged in\");\n      const alert = this.alertCtrl.create({\n        title: \"Not Logged In\",\n        subTitle: \"Please log in to upvote and downvote posts, as well as create your own subreddits, posts, and comments!\",\n        buttons: [\n          {\n            text: 'Log In/Sign Up',\n            role: 'login',\n            handler: data => {\n              this.openAuth();\n            }\n          },\n          {\n            text: 'Dismiss'\n          }\n        ]\n      });\n      alert.present();\n    }\n  }\n\n  downvote() {\n    if (this.isLoggedIn){\n      this.disableInput = true;\n      let user = this.authService.getUsername();\n      this.databaseService.downvotePost(user, this.post).then((points) => {\n        this.score = this.score + points;\n        this.databaseService.checkDownvoted(user, this.post).then(boolean => {\n          this.userDownvoted = boolean;\n        });\n        this.databaseService.checkUpvoted(user, this.post).then(boolean => {\n          this.userUpvoted = boolean;\n        });\n        this.updatePost();\n      });\n    } else{\n      console.log(\"not logged in\");\n      const alert = this.alertCtrl.create({\n        title: \"Not Logged In\",\n        subTitle: \"Please log in to upvote and downvote posts, as well as create your own subreddits, posts, and comments!\",\n        buttons: [\n          {\n            text: 'Log In/Sign Up',\n            role: 'login',\n            handler: data => {\n              this.openAuth();\n            }\n          },\n          {\n            text: 'Dismiss'\n          }\n        ]\n      });\n      alert.present();\n    }\n    \n  }\n\n  updatePost() {\n    this.databaseService.getPost(this.post.post_id, this.post.subreddit_id).then((post) => {\n      this.post = post;\n      this.disableInput = false;\n    })\n  }\n\n  /**\n   * open the login/signup page\n   */\n  openAuth() {\n    let param = { userHasAccount: this.userHasAccount };\n    let authModal = this.modalCtrl.create(LoginPage, param);\n    authModal.present();\n    authModal.onWillDismiss((isLoggedIn) => {\n      if (isLoggedIn) {\n        this.isLoggedIn = isLoggedIn;\n        console.log(\"loggedin: \" +this.isLoggedIn);\n      }\n    });\n  }\n\n  showComments() {\n    this.navCtrl.push(CommentsPage, {post: this.post});\n  }\n\n  deletePost() {\n    this.alertCtrl.create({\n      title: \"Deletion confirmation\",\n      subTitle: \"Are you sure you want to delete this post?\",\n      buttons: [\n        {\n          text: 'Confirm',\n          handler: data => {\n            this.databaseService.deletePost(this.post.subreddit_id, this.post.post_id).then(() => {\n              this.events.publish('update:posts')\n            })\n          }\n        },\n        {\n          text: 'Cancel'\n        }\n      ]\n    }).present();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n          r/{{post.subreddit}}\n          r/{{post.subreddit}} &bull; {{datePosted}} &bull; u/{{post.user}}\n          \n        \n        \n          {{post.title}}\n          {{showCommentBtn ? (post.message | slice:0:120) : (post.message)}}\n        \n        \n          {{post.title}}\n          {{post.message}}\n        \n      \n\n    \n    \n      \n    \n    \n      \n        \n          &nbsp;&nbsp; {{post.numcomments}} Comments\n        \n      \n      \n        \n          \n          \n          \n          \n          \n        {{score}}\n        \n          \n          \n          \n          \n          \n        \n      \n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  r/{{post.subreddit}}          r/{{post.subreddit}} • {{datePosted}} • u/{{post.user}}                                    {{post.title}}          {{showCommentBtn ? (post.message | slice:0:120) : (post.message)}}                          {{post.title}}          {{post.message}}                                                               {{post.numcomments}} Comments                                                                                      {{score}}                                                                                '\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  ProfilePage\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/pages/profile/profile.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-profile\n            \n\n\n\n\n            \n                templateUrl\n                profile.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 changePhoto\n                            \n                            \n                                 email\n                            \n                            \n                                Public events\n                            \n                            \n                                 isLoggedIn\n                            \n                            \n                                 karma\n                            \n                            \n                                 memberSince\n                            \n                            \n                                Public navCtrl\n                            \n                            \n                                Public navParams\n                            \n                            \n                                 photo\n                            \n                            \n                                 selectedTheme\n                            \n                            \n                                 uid\n                            \n                            \n                                 username\n                            \n                            \n                                Public viewController\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 closeModal\n                            \n                            \n                                 getPhotoURL\n                            \n                            \n                                 ionViewDidLoad\n                            \n                            \n                                 isURL\n                            \n                            \n                                 setPhoto\n                            \n                            \n                                 showPhotoLink\n                            \n                            \n                                 showUserInfo\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(alertCtrl: AlertController, authService: AuthService, databaseService: DatabaseService, events: Events, navCtrl: NavController, navParams: NavParams, platform: Platform, theming: SettingsProvider, viewController: ViewController)\n                        \n                    \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:26\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      alertCtrl\n                                                      \n                                                                AlertController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      authService\n                                                      \n                                                                AuthService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      databaseService\n                                                      \n                                                                DatabaseService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      events\n                                                      \n                                                                Events\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navCtrl\n                                                      \n                                                                NavController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navParams\n                                                      \n                                                                NavParams\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      platform\n                                                      \n                                                                Platform\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      theming\n                                                      \n                                                                SettingsProvider\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      viewController\n                                                      \n                                                                ViewController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             closeModal\n                        \n                    \n                    \n                        \n    closeModal()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:59\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             getPhotoURL\n                        \n                    \n                    \n                        \n    getPhotoURL()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:86\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ionViewDidLoad\n                        \n                    \n                    \n                        \n    ionViewDidLoad()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:55\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isURL\n                        \n                    \n                    \n                        \n    isURL(str: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:93\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      str\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     any\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             setPhoto\n                        \n                    \n                    \n                        \n    setPhoto(form: NgForm)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:71\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      form\n                                                      \n                                                              NgForm\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showPhotoLink\n                        \n                    \n                    \n                        \n    showPhotoLink()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:90\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showUserInfo\n                        \n                    \n                    \n                        \n    showUserInfo()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:63\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             changePhoto\n                        \n                    \n                    \n                        \n                            changePhoto:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:26\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             email\n                        \n                    \n                    \n                        \n                            email:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:20\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public events\n                        \n                    \n                    \n                        \n                            events:     Events\n    \n                        \n                    \n                        \n                            \n                                Type :     Events\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:33\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isLoggedIn\n                        \n                    \n                    \n                        \n                            isLoggedIn:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:18\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             karma\n                        \n                    \n                    \n                        \n                            karma:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:21\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             memberSince\n                        \n                    \n                    \n                        \n                            memberSince:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:23\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navCtrl\n                        \n                    \n                    \n                        \n                            navCtrl:     NavController\n    \n                        \n                    \n                        \n                            \n                                Type :     NavController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:34\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navParams\n                        \n                    \n                    \n                        \n                            navParams:     NavParams\n    \n                        \n                    \n                        \n                            \n                                Type :     NavParams\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:35\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             photo\n                        \n                    \n                    \n                        \n                            photo:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:24\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             selectedTheme\n                        \n                    \n                    \n                        \n                            selectedTheme:     String\n    \n                        \n                    \n                        \n                            \n                                Type :     String\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:25\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             uid\n                        \n                    \n                    \n                        \n                            uid:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:22\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             username\n                        \n                    \n                    \n                        \n                            username:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:19\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public viewController\n                        \n                    \n                    \n                        \n                            viewController:     ViewController\n    \n                        \n                    \n                        \n                            \n                                Type :     ViewController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/profile/profile.ts:38\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Platform, ViewController, Events } from 'ionic-angular';\nimport { AlertController } from 'ionic-angular';\n\nimport { AuthService } from '../../shared/auth.service';\nimport { DatabaseService } from '../../shared/database.service';\nimport { SettingsProvider } from '../../shared/theming.service';\nimport { NgForm } from '@angular/forms/src/directives/ng_form';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-profile',\n  templateUrl: 'profile.html',\n})\nexport class ProfilePage {\n\n  isLoggedIn: boolean;\n  username: string;\n  email: string;\n  karma: string;\n  uid: string;\n  memberSince: string;\n  photo: string;\n  selectedTheme: String;\n  changePhoto: boolean;\n\n\n  constructor(\n    private alertCtrl: AlertController,\n    private authService: AuthService,\n    private databaseService: DatabaseService,\n    public events: Events,\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    platform: Platform,\n    private theming: SettingsProvider,\n    public viewController: ViewController) {\n    this.theming.getActiveTheme().subscribe(val => this.selectedTheme = val);\n\n    this.isLoggedIn = this.authService.isLoggedIn();\n    if (this.isLoggedIn) {\n      this.changePhoto = false;\n      this.username = this.authService.getUsername();\n      this.email = this.authService.getEmail();\n      this.uid = this.authService.getUID();\n      this.memberSince = this.authService.getMemberSince();\n      this.photo = this.authService.getPhoto();\n      this.databaseService.getKarma(this.uid).then(karma => {\n        this.karma = karma;\n      });\n    }\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ProfilePage');\n  }\n\n  closeModal() {\n    this.viewController.dismiss();\n  }\n\n  showUserInfo() {\n    console.log(\"Username: \" + this.username);\n    console.log(\"UID: \" + this.uid);\n    console.log(\"Email: \" + this.email);\n    console.log(\"Karma: \" + this.karma);\n    console.log(\"Member Since: \" + this.memberSince);\n  }\n\n  setPhoto(form: NgForm){\n      if (this.isURL(form.value.photoURL)){\n        this.photo = form.value.photoURL;\n        this.authService.setPhoto(this.photo);\n        this.changePhoto = false;\n      } else{\n        let alert = this.alertCtrl.create({\n          title: \"Please enter a valid link\",\n          buttons: ['Dismiss']\n        });\n        alert.present();\n      }\n      \n  }\n\n  getPhotoURL(){\n    this.photo = this.authService.getPhoto();\n  }\n\n  showPhotoLink(){\n    this.changePhoto = true;\n  }\n  isURL(str : string) {\n    if (str.includes('.')) {\n      var pattern = new RegExp('^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$');\n      return pattern.test(str);\n    } else {\n      return false;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    User Profile\n    \n      \n        \n      \n     \n  \n\n\n\n  \n    u/{{username}}\n    \n    \n  \n    \n      \n           Username: {{username}}          \n      \n      \n           Email: {{email}}          \n      \n      \n           Karma Points: {{karma}}          \n      \n      \n           Member Since: {{memberSince}}          \n      \n      \n          \n              Photo URL\n              \n          \n          Submit\n        \n    \n    Update display photo\n  \n  Show User Info -->\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      User Profile                                     u/{{username}}                               Username: {{username}}                                 Email: {{email}}                                 Karma Points: {{karma}}                                 Member Since: {{memberSince}}                                              Photo URL                                  Submit                Update display photo    Show User Info -->'\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SortByPopover.html":{"url":"components/SortByPopover.html","title":"component - SortByPopover","body":"\n                   \n\n\n\n\n\n  Components\n  SortByPopover\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/components/sortBy/sortBy.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 sortMethod\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 selectSortMethod\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(viewCtrl: ViewController, navParams: NavParams)\n                        \n                    \n                            \n                                \n                                    Defined in src/components/sortBy/sortBy.ts:30\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      viewCtrl\n                                                      \n                                                                ViewController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navParams\n                                                      \n                                                                NavParams\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             selectSortMethod\n                        \n                    \n                    \n                        \n    selectSortMethod(sortMethod: \"hot\" | \"new\" | \"top\")\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/components/sortBy/sortBy.ts:43\n                                \n                            \n    \n                    \n                        \n                                sort posts by a sort method\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      sortMethod\n                                                      \n                                                              \"hot\" | \"new\" | \"top\"\n                                                      \n                                                      \n                                                      \n                                                      method to sort by\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             sortMethod\n                        \n                    \n                    \n                        \n                            sortMethod:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/components/sortBy/sortBy.ts:30\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { ViewController, NavParams } from \"ionic-angular\";\nimport { Component } from \"@angular/core\";\n\n@Component({\n    template: `\n    \n      Sort Posts By:\n      \n      \n        \n          \n          \n          Hot\n        \n        \n          \n          \n          New\n        \n        \n          \n          \n          Top\n        \n      \n    \n    `\n  })\n  export class SortByPopover {\n    sortMethod: string;\n    constructor(private viewCtrl: ViewController, private navParams: NavParams) {\n      if (this.navParams.data.sortMethod) {\n        this.sortMethod = navParams.data.sortMethod;\n      }\n      else {\n        this.sortMethod = 'hot';\n      }\n    }\n    /**\n     * sort posts by a sort method\n     * @param sortMethod method to sort by\n     */\n    selectSortMethod(sortMethod: 'hot' | 'new' | 'top') {\n      let icons = { hot: 'flame', new: 'star', top: 'podium' }\n      this.sortMethod = sortMethod;\n      this.viewCtrl.dismiss({ sortMethod: sortMethod, icon: icons[sortMethod] });\n    }\n  }\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SortByPopover'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubredditPage.html":{"url":"components/SubredditPage.html","title":"component - SubredditPage","body":"\n                   \n\n\n\n\n\n  Components\n  SubredditPage\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/pages/subreddit/subreddit.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-subreddit\n            \n\n\n\n\n            \n                templateUrl\n                subreddit.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Public events\n                            \n                            \n                                 id\n                            \n                            \n                                 isEmpty\n                            \n                            \n                                 isLoggedIn\n                            \n                            \n                                 isSubscribed\n                            \n                            \n                                Public modalCtrl\n                            \n                            \n                                 navBar\n                            \n                            \n                                Public navCtrl\n                            \n                            \n                                Public navParams\n                            \n                            \n                                 posts\n                            \n                            \n                                 selectedTheme\n                            \n                            \n                                 showBackgroundDiv\n                            \n                            \n                                 sortIcon\n                            \n                            \n                                 sortMethod\n                            \n                            \n                                 subreddit\n                            \n                            \n                                 times\n                            \n                            \n                                 user_id\n                            \n                            \n                                 username\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 createPost\n                            \n                            \n                                 getPosts\n                            \n                            \n                                 ngOnInit\n                            \n                            \n                                 setUp\n                            \n                            \n                                 showSortByPopover\n                            \n                            \n                                 subscribe\n                            \n                            \n                                 unsubscribe\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(databaseService: DatabaseService, alertCtrl: AlertController, dataSharing: DataSharingService, authService: AuthService, navCtrl: NavController, navParams: NavParams, events: Events, modalCtrl: ModalController, popoverCtrl: PopoverController, theming: SettingsProvider, storageService: StorageService)\n                        \n                    \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:33\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      databaseService\n                                                      \n                                                                DatabaseService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      alertCtrl\n                                                      \n                                                                AlertController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      dataSharing\n                                                      \n                                                                DataSharingService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      authService\n                                                      \n                                                                AuthService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navCtrl\n                                                      \n                                                                NavController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      navParams\n                                                      \n                                                                NavParams\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      events\n                                                      \n                                                                Events\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      modalCtrl\n                                                      \n                                                                ModalController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      popoverCtrl\n                                                      \n                                                                PopoverController\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      theming\n                                                      \n                                                                SettingsProvider\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      storageService\n                                                      \n                                                                StorageService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             createPost\n                        \n                    \n                    \n                        \n    createPost()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:140\n                                \n                            \n    \n                    \n                        \n                                add a new post to the current subreddit\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             getPosts\n                        \n                    \n                    \n                        \n    getPosts()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:73\n                                \n                            \n    \n                    \n                        \n                                get posts for the current subreddit\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:105\n                                \n                            \n    \n                    \n                        \n                                initialize current subreddit\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             setUp\n                        \n                    \n                    \n                        \n    setUp()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:90\n                                \n                            \n    \n                    \n                        \n                                initialize page state and content\n    \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showSortByPopover\n                        \n                    \n                    \n                        \n    showSortByPopover(ev: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:180\n                                \n                            \n    \n                    \n                        \n                                show a popover with options to sort posts by\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      ev\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      tells the popover where to display on the page\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             subscribe\n                        \n                    \n                    \n                        \n    subscribe(user_id: string, subreddit_name: string, subreddit_id: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:200\n                                \n                            \n    \n                    \n                        \n                                subscribe a user to a subreddit\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      user_id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      id of the user\n    \n                                                    \n                                                    \n                                                      subreddit_name\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      name of the subreddit to subscribe to\n    \n                                                    \n                                                    \n                                                      subreddit_id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      id of the subreddit to subscribe to\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             unsubscribe\n                        \n                    \n                    \n                        \n    unsubscribe(user_id: string, subreddit_id: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:248\n                                \n                            \n    \n                    \n                        \n                                unsubscribe a user from a subreddit\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      user_id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      id of the user\n    \n                                                    \n                                                    \n                                                      subreddit_id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      id of the subreddit to unsubscribe from\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            Public events\n                        \n                    \n                    \n                        \n                            events:     Events\n    \n                        \n                    \n                        \n                            \n                                Type :     Events\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:41\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             id\n                        \n                    \n                    \n                        \n                            id:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:20\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isEmpty\n                        \n                    \n                    \n                        \n                            isEmpty:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:21\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isLoggedIn\n                        \n                    \n                    \n                        \n                            isLoggedIn:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:22\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isSubscribed\n                        \n                    \n                    \n                        \n                            isSubscribed:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:23\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public modalCtrl\n                        \n                    \n                    \n                        \n                            modalCtrl:     ModalController\n    \n                        \n                    \n                        \n                            \n                                Type :     ModalController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:42\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             navBar\n                        \n                    \n                    \n                        \n                            navBar:     Navbar\n    \n                        \n                    \n                        \n                            \n                                Type :     Navbar\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:24\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navCtrl\n                        \n                    \n                    \n                        \n                            navCtrl:     NavController\n    \n                        \n                    \n                        \n                            \n                                Type :     NavController\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:39\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public navParams\n                        \n                    \n                    \n                        \n                            navParams:     NavParams\n    \n                        \n                    \n                        \n                            \n                                Type :     NavParams\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:40\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             posts\n                        \n                    \n                    \n                        \n                            posts:     Post[]\n    \n                        \n                    \n                        \n                            \n                                Type :     Post[]\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:25\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             selectedTheme\n                        \n                    \n                    \n                        \n                            selectedTheme:     String\n    \n                        \n                    \n                        \n                            \n                                Type :     String\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:26\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             showBackgroundDiv\n                        \n                    \n                    \n                        \n                            showBackgroundDiv:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:27\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             sortIcon\n                        \n                    \n                    \n                        \n                            sortIcon:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:28\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             sortMethod\n                        \n                    \n                    \n                        \n                            sortMethod:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:29\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             subreddit\n                        \n                    \n                    \n                        \n                            subreddit:     Subreddit\n    \n                        \n                    \n                        \n                            \n                                Type :     Subreddit\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:30\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             times\n                        \n                    \n                    \n                        \n                            times:     string[]\n    \n                        \n                    \n                        \n                            \n                                Type :     string[]\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:31\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             user_id\n                        \n                    \n                    \n                        \n                            user_id:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:32\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             username\n                        \n                    \n                    \n                        \n                            username:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/pages/subreddit/subreddit.ts:33\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, ViewChild, OnInit } from '@angular/core';\nimport { NavController, NavParams, Navbar, Events, ModalController, PopoverController, AlertController } from 'ionic-angular';\n\nimport { AuthService } from '../../shared/auth.service';\nimport { CreatePostPage, LoginPage } from \"../../shared/pages\";\nimport { DatabaseService } from '../../shared/database.service';\nimport { DataSharingService } from '../../shared/data-sharing.service';\nimport { Post } from '../../models/post.model';\nimport { SortByPopover } from '../../components/sortBy/sortBy';\nimport { Subreddit } from '../../models/subreddit.model';\nimport { StorageService } from \"../../shared/storage.service\";\nimport { SettingsProvider } from '../../shared/theming.service';\n\n\n@Component({\n\tselector: 'page-subreddit',\n\ttemplateUrl: 'subreddit.html',\n})\nexport class SubredditPage implements OnInit {\n\tid: string;\n\tisEmpty: boolean;\n\tisLoggedIn: boolean;\n\tisSubscribed: boolean;\n\t@ViewChild(Navbar) navBar: Navbar;\n\tposts: Post[];\n\tselectedTheme: String;\n\tshowBackgroundDiv: boolean;\n\tsortIcon: string;\n\tsortMethod: string;\n\tsubreddit: Subreddit;\n\ttimes: string[];\n\tuser_id: string;\n\tusername: string;\n\tconstructor(\n\t\tprivate databaseService: DatabaseService,\n\t\tprivate alertCtrl: AlertController,\n\t\tprivate dataSharing: DataSharingService,\n\t\tprivate authService: AuthService,\n\t\tpublic navCtrl: NavController,\n\t\tpublic navParams: NavParams,\n\t\tpublic events: Events,\n\t\tpublic modalCtrl: ModalController,\n\t\tprivate popoverCtrl: PopoverController,\n\t\tprivate theming: SettingsProvider,\n\t\tprivate storageService: StorageService) {\n\n\t\t//initial sort by method and icon\n\t\tthis.sortIcon = 'flame';\n\t\tthis.sortMethod = 'hot';\n\t\tthis.username = this.authService.getUsername();\n\t\t\n\t\t//theme to pass to create post\n\t\tthis.events.subscribe('theme:retrieved', () => {\n\t\t\tconsole.log('ok');\n\t\t\tthis.theming.getActiveTheme().subscribe(val => this.selectedTheme = val);\n\t\t});\n\t\tthis.events.subscribe('update:posts', () => {\n\t\t\tthis.authService.updateAuthState().then(() => {\n\t\t\t\tthis.posts = []; // Clear posts\n\t\t\t\tthis.getPosts(); // Get votable posts\n\t\t\t\tthis.isLoggedIn = true;\n\t\t\t});\n\t\t});\n\t\tthis.events.subscribe('update:posts', () => {\n\t\t\tthis.posts = []; // Clear posts\n\t\t\tthis.getPosts(); // Get votable posts\n\t\t});\n\n\t}\n\t/**\n\t * get posts for the current subreddit\n\t */\n\tgetPosts() {\n\t\tthis.databaseService.getSubredditPosts(this.id).then(posts => {\n\t\t\tif (posts) {\n\t\t\t\tthis.isEmpty = false;\n\t\t\t\tthis.posts = [];\n\t\t\t\tfor (var key in posts) {\n\t\t\t\t\tthis.posts.push(posts[key]);\n\t\t\t\t}\n\t\t\t\tthis.posts = this.dataSharing.sortBy(this.posts, this.sortMethod);\n\t\t\t} else {\n\t\t\t\tthis.isEmpty = true;\n\t\t\t}\n\t\t});\n\t}\n\t/**\n\t * initialize page state and content\n\t */\n\tsetUp() {\n\t\tthis.authService.updateAuthState().then(() => {\n\t\t\tthis.posts = []; // Clear posts\n\t\t\tthis.getPosts(); // Get votable posts\n\t\t\tthis.isLoggedIn = this.authService.isLoggedIn();\n\t\t});\n\t\tthis.id = this.subreddit.subreddit_id;\n\t\tthis.user_id = this.authService.getUID();\n\t\tthis.posts = [];\n\t\tthis.isSubscribed = this.storageService.isSubscribed(this.subreddit.subreddit_id);\n\t\tthis.getPosts();\n\t}\n\t/**\n\t * initialize current subreddit\n\t */\n\tngOnInit() {\n\t\t// When the back button is pressed\n\t\tthis.navBar.backButtonClick = () => {\n\t\t\tthis.events.publish('nav');\n\t\t\tthis.navCtrl.pop();\n\t\t}\n\n\t\tthis.isLoggedIn = this.authService.isLoggedIn();\n\n\t\t// Routing\n\t\tif (this.navParams.data['UID']) {\n\t\t\tthis.subreddit = this.navParams.data;\n\t\t\tthis.setUp();\n\t\t} else {\n\t\t\tlet subredditName = this.navParams.data['name']\n\t\t\tif (subredditName) {\n\t\t\t\t// Check subreddit\n\t\t\t\tthis.databaseService.checkGetSubreddit(subredditName).then((subreddit) => {\n\t\t\t\t\tif (subreddit) {\n\t\t\t\t\t\tthis.subreddit = subreddit;\n\t\t\t\t\t\tthis.setUp();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Invalid subreddit\n\t\t\t\t\t}\n\t\t\t\t}).catch(() => {\n\t\t\t\t\tconsole.log(\"Subreddit not found\");\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// 404 page or homepage?\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * add a new post to the current subreddit\n\t */\n\tcreatePost() {\n\t\tlet theme = this.theming.getThemeAsString()\n\t\tlet createPostModal = this.modalCtrl.create(CreatePostPage, { subreddit: this.subreddit, theme: theme }, { cssClass: theme });\n\t\tif (this.isLoggedIn) {\n\t\t\tcreatePostModal.present();\n\t\t} else {\n\t\t\tconst alert = this.alertCtrl.create({\n\t\t\t  title: \"Not Logged In\",\n\t\t\t  subTitle: \"Please log in to upvote and downvote posts, as well as create your own subreddits, posts, and comments!\",\n\t\t\t  buttons: [\n\t\t\t\t{\n\t\t\t\t  text: 'Log In/Sign Up',\n\t\t\t\t  role: 'login',\n\t\t\t\t  handler: data => {\n\t\t\t\t\tlet theme = this.theming.getThemeAsString();\n\t\t\t\t\tlet authModal = this.modalCtrl.create(LoginPage, { theme: theme }, { cssClass: theme });\n\t\t\t\t\tauthModal.present();\n\t\t\t\t\tauthModal.onWillDismiss((isLoggedIn) => {\n\t\t\t\t\t\tif (isLoggedIn) {\n\t\t\t\t\t\t\tthis.isLoggedIn = isLoggedIn;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t  }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t  text: 'Dismiss'\n\t\t\t\t}\n\t\t\t  ]\n\t\t\t});\n\t\t\talert.present();\n\t\t}\n\n\t\tcreatePostModal.onDidDismiss(() => {\n\t\t\tthis.getPosts();\n\t\t});\n\t}\n\t/**\n  * show a popover with options to sort posts by\n  * @param ev tells the popover where to display on the page\n  */\n\tshowSortByPopover(ev) {\n\t\tthis.showBackgroundDiv = true;\n\t\tlet popover = this.popoverCtrl.create(SortByPopover, { sortMethod: this.sortMethod });\n\t\tpopover.present({ ev: ev });\n\t\tpopover.onWillDismiss(sortMethod => {\n\t\t\tif (sortMethod != this.sortMethod && sortMethod) {\n\t\t\t\tthis.sortMethod = sortMethod.sortMethod;\n\t\t\t\tthis.sortIcon = sortMethod.icon;\n\t\t\t\tthis.posts = this.dataSharing.sortBy(this.posts, this.sortMethod);\n\t\t\t\t//function to resort posts\n\t\t\t}\n\t\t\tthis.showBackgroundDiv = false;\n\t\t})\n\t}\n\t/**\n\t * subscribe a user to a subreddit\n\t * @param user_id id of the user\n\t * @param subreddit_name name of the subreddit to subscribe to\n\t * @param subreddit_id id of the subreddit to subscribe to\n\t */\n\tsubscribe(user_id: string, subreddit_name: string, subreddit_id: string) {\n\t\tif (this.isLoggedIn){\n\t\t\tthis.isSubscribed = !this.isSubscribed;\n\t\t\tthis.databaseService.subscribeSubreddit(user_id, subreddit_name, subreddit_id).then(() => {\n\t\t\t\tthis.storageService.getSubscribedSubreddits().then(subreddits => {\n\t\t\t\t\tif (!subreddits) {\n\t\t\t\t\t\tsubreddits = [];\n\t\t\t\t\t}\n\t\t\t\t\tsubreddits.push({ subreddit_id: subreddit_id, subreddit_name: subreddit_name });\n\t\t\t\t\tthis.storageService.setSubscribedSubreddits(subreddits);\n\t\t\t\t\tconsole.log('subscribe success');\n\t\t\t\t\t//emit to home page to refresh subscribed\n\t\t\t\t\tthis.navCtrl.viewDidLeave.subscribe(() => {\n\t\t\t\t\t\tthis.events.publish('refresh:subscribed');\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}).catch(err => console.error(err));\n\t\t  } else {\n\t\t\tconst alert = this.alertCtrl.create({\n\t\t\t  title: \"Not Logged In\",\n\t\t\t  subTitle: \"Please log in or sign up to subscribe to subreddits!\",\n\t\t\t  buttons: [\n\t\t\t\t{\n\t\t\t\t  text: 'Log In/Sign Up',\n\t\t\t\t  role: 'login',\n\t\t\t\t  handler: data => {\n\t\t\t\t\tlet theme = this.theming.getThemeAsString();\n\t\t\t\t\tlet authModal = this.modalCtrl.create(LoginPage, { theme: theme }, { cssClass: theme });\n\t\t\t\t\tauthModal.present();\n\t\t\t\t\tauthModal.onWillDismiss((isLoggedIn) => {\n\t\t\t\t\t\tif (isLoggedIn) {\n\t\t\t\t\t\t\tthis.isLoggedIn = isLoggedIn;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t  }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t  text: 'Dismiss'          }\n\t\t\t  ]\n\t\t\t});\n\t\t\talert.present();\n\t\t  }\n\t}\n\t/**\n\t * unsubscribe a user from a subreddit\n\t * @param user_id id of the user\n\t * @param subreddit_id id of the subreddit to unsubscribe from\n\t */\n\tunsubscribe(user_id: string, subreddit_id: string) {\n\t\tthis.isSubscribed = !this.isSubscribed;\n\t\tthis.databaseService.unsubscribeSubreddit(user_id, subreddit_id).then(() => {\n\t\t\tthis.storageService.getSubscribedSubreddits().then(subreddits => {\n\t\t\t\tfor (let i = 0; i  {\n\t\t\t\t\tthis.events.publish('refresh:subscribed');\n\t\t\t\t});\n\t\t\t});\n\t\t}).catch(err => console.error(err));\n\t}\n}\n\n    \n\n    \n        \n  \n    /r/{{subreddit.name}}\n    \n  \n\n\n\n  \n    \n    Welcome to /r/{{subreddit.name}}\n    {{subreddit.description}}\n    \n      &nbsp;&nbsp;Subscribed\n    \n    \n      &nbsp;&nbsp;Subscribe\n    \n    Scroll through the posts below or click \"Create a post\" to add your own content.      \n    \n      \n        Sort Posts By\n        \n          &nbsp;&nbsp;{{sortMethod}}&nbsp;&nbsp;\n          \n        \n      \n      Create a post\n    \n  \n\n  \n  \n    \n      \n    \n    There are no posts at the moment!\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      /r/{{subreddit.name}}                Welcome to /r/{{subreddit.name}}    {{subreddit.description}}            Subscribed                Subscribe        Scroll through the posts below or click \"Create a post\" to add your own content.                        Sort Posts By                    {{sortMethod}}                                Create a post                            There are no posts at the moment!  '\n    var COMPONENTS = [{'name': 'CommentComponent', 'selector': 'comment'},{'name': 'CommentsPage', 'selector': ''},{'name': 'CommentsPage', 'selector': 'page-comments'},{'name': 'CreatePostPage', 'selector': 'page-createpost'},{'name': 'CreateSubredditPage', 'selector': 'page-createsubreddit'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'LoginPage', 'selector': 'page-login'},{'name': 'MyApp', 'selector': ''},{'name': 'PostComponent', 'selector': 'post'},{'name': 'ProfilePage', 'selector': 'page-profile'},{'name': 'SortByPopover', 'selector': ''},{'name': 'SubredditPage', 'selector': 'page-subreddit'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubredditPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/auth.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private created\n                                    \n                                    \n                                        Private email\n                                    \n                                    \n                                        Private loggedIn\n                                    \n                                    \n                                        Private password\n                                    \n                                    \n                                        Private photoURL\n                                    \n                                    \n                                        Private uid\n                                    \n                                    \n                                        Private username\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         firebaseSetup\n                                    \n                                    \n                                         getEmail\n                                    \n                                    \n                                         getErrMsg\n                                    \n                                    \n                                         getMemberSince\n                                    \n                                    \n                                         getPhoto\n                                    \n                                    \n                                         getPswd\n                                    \n                                    \n                                         getUID\n                                    \n                                    \n                                         getUsername\n                                    \n                                    \n                                         isLoggedIn\n                                    \n                                    \n                                         logout\n                                    \n                                    \n                                         setEmail\n                                    \n                                    \n                                         setPhoto\n                                    \n                                    \n                                         setPswd\n                                    \n                                    \n                                         setUsername\n                                    \n                                    \n                                         updateAuthState\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(events: Events)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:13\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              events\n                                                              \n                                                                        Events\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     firebaseSetup\n                                \n                            \n                            \n                                \n            firebaseSetup()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                        Initialize firebase\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getEmail\n                                \n                            \n                            \n                                \n            getEmail()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:123\n                                        \n                                    \n            \n                            \n                                \n                                        Get the user's email\n            \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getErrMsg\n                                \n                            \n                            \n                                \n            getErrMsg(code: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:177\n                                        \n                                    \n            \n                            \n                                \n                                        return an error message from firebases error codes\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              code\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              firebase error code\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getMemberSince\n                                \n                            \n                            \n                                \n            getMemberSince()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:84\n                                        \n                                    \n            \n                            \n                                \n                                        Get creation time\n            \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getPhoto\n                                \n                            \n                            \n                                \n            getPhoto()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:107\n                                        \n                                    \n            \n                            \n                                \n                                        Get profile photo\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getPswd\n                                \n                            \n                            \n                                \n            getPswd()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:138\n                                        \n                                    \n            \n                            \n                                \n                                        get the user's password\n            \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getUID\n                                \n                            \n                            \n                                \n            getUID()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:116\n                                        \n                                    \n            \n                            \n                                \n                                        Get UID\n            \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getUsername\n                                \n                            \n                            \n                                \n            getUsername()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:77\n                                        \n                                    \n            \n                            \n                                \n                                        Get username\n            \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isLoggedIn\n                                \n                            \n                            \n                                \n            isLoggedIn()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:150\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     logout\n                                \n                            \n                            \n                                \n            logout()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:157\n                                        \n                                    \n            \n                            \n                                \n                                        logout the user\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setEmail\n                                \n                            \n                            \n                                \n            setEmail(email: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:131\n                                        \n                                    \n            \n                            \n                                \n                                        set the user's email\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              email\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              the users email\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setPhoto\n                                \n                            \n                            \n                                \n            setPhoto(photo: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:92\n                                        \n                                    \n            \n                            \n                                \n                                        Set profile photo\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              photo\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setPswd\n                                \n                            \n                            \n                                \n            setPswd(pswd: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:146\n                                        \n                                    \n            \n                            \n                                \n                                        set the user's password\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              pswd\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setUsername\n                                \n                            \n                            \n                                \n            setUsername()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:63\n                                        \n                                    \n            \n                            \n                                \n                                        Set username\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     updateAuthState\n                                \n                            \n                            \n                                \n            updateAuthState()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:36\n                                        \n                                    \n            \n                            \n                                \n                                        updates the user authentication state, determines if user is logge din or not\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private created\n                                \n                            \n                            \n                                \n                                    created:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private email\n                                \n                            \n                            \n                                \n                                    email:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private loggedIn\n                                \n                            \n                            \n                                \n                                    loggedIn:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private password\n                                \n                            \n                            \n                                \n                                    password:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private photoURL\n                                \n                            \n                            \n                                \n                                    photoURL:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:13\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private uid\n                                \n                            \n                            \n                                \n                                    uid:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private username\n                                \n                            \n                            \n                                \n                                    username:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/auth.service.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport * as firebase from 'firebase';\nimport { Events } from \"ionic-angular\";\n\n@Injectable()\nexport class AuthService {\n    private username: string;\n    private uid: string;    \n    private email: string;    \n    private password: string;\n    private loggedIn: boolean;\n    private created: string;\n    private photoURL: string;\n\n    constructor(private events: Events) {\n        this.firebaseSetup();\n    }\n\n    /**\n     * Initialize firebase\n    */\n    firebaseSetup() {    \n        var config = {\n            apiKey: \"AIzaSyAreoTdCsTtPbCzatkDT-nelNIbizsj2UI\",\n            authDomain: \"reddit-clone-ced0e.firebaseapp.com\",\n            databaseURL: \"https://reddit-clone-ced0e.firebaseio.com\",\n            projectId: \"reddit-clone-ced0e\",\n            storageBucket: \"reddit-clone-ced0e.appspot.com\",\n            messagingSenderId: \"896550001075\"\n          };\n          firebase.initializeApp(config);\n    }\n    /**\n     * updates the user authentication state, determines if user is logge din or not\n     */\n    updateAuthState() {\n        return new Promise((resolve, reject) => {\n            firebase.auth().onAuthStateChanged((user) => {\n                if (user) {\n                    // User is signed in.\n                    if (user.photoURL == null){\n                        this.setPhoto(\"https://www.stockvault.net/data/2009/10/05/110974/thumb16.jpg\");\n                    }\n                    this.loggedIn = true;\n                    this.uid = user.uid;\n                    this.email = user.email;\n\n                    this.events.publish('user:loggedin&set');\n                    this.setUsername().then(() => {\n                        return resolve(true);\n                    });\n                } else {\n                    // No user is signed in\n                    return reject(false);                    \n                }\n            });\n        }).catch(err => console.log(err));\n    }\n\n    /**\n     * Set username\n     */\n    setUsername() {\n        return new Promise((resolve, reject) => {\n            var database = firebase.database();\n            database.ref('users/' + this.uid).once('value').then((snapshot) => {\n                this.username = (snapshot.val() && snapshot.val().username);\n            }).then(() => {\n                resolve();\n            });\n        }).catch(err => console.log(err));\n    }\n\n    /**\n     * Get username\n     */\n    getUsername() {\n        return this.username;\n    }\n\n    /**\n     * Get creation time\n     */\n    getMemberSince(){\n        this.created = firebase.auth().currentUser.metadata.creationTime;\n        return this.created;\n    }\n\n    /**\n     * Set profile photo\n     */\n    setPhoto(photo){\n        var user = firebase.auth().currentUser;\n        user.updateProfile({\n            displayName: user.displayName,\n            photoURL: photo\n        }).then(function(){\n            console.log(\"update successful\")\n        }).catch(function(error){\n            console.log(\"error\")\n        });\n    }\n\n    /**\n     * Get profile photo\n     */\n    getPhoto(){\n        var user = firebase.auth().currentUser;\n        this.photoURL = user.photoURL;\n        return user.photoURL;\n    }\n\n    /**\n     * Get UID\n     */\n    getUID() {\n        return this.uid;\n    }\n\n    /**\n     * Get the user's email\n     */\n    getEmail() {\n        return this.email;\n    }\n\n    /**\n     * set the user's email\n     * @param email the users email\n     */\n    setEmail(email: string) {\n        this.email = email;\n    }\n\n    /**\n     * get the user's password\n     */\n    getPswd() {\n        return this.password;\n    }\n\n    /**\n     * set the user's password\n     * @param password the users password\n     */\n    setPswd(pswd: string) {\n        this.password = pswd;\n    }\n    \n    isLoggedIn() {\n        return this.loggedIn;\n    }\n\n    /**\n     * logout the user\n     */\n    logout() {\n        return new Promise((resolve, reject) => {\n            firebase.auth().signOut().then(() => {\n                this.username = \"\";\n                this.email = \"\";\n                this.uid = \"\";\n                this.loggedIn = false;\n                this.password = \"\";\n                return resolve();\n            }).catch(err => {\n                console.error(err);\n                return reject();\n            })\n        });\n    }\n\n    /**\n     * return an error message from firebases error codes\n     * @param code firebase error code\n     */\n    getErrMsg(code: string) {\n        let codes = {\n            \"auth/app-deleted\":\"This app has been deleted from Firebase. Please notify the developer.\",\n            \"auth/app-not-authorized\":\"App not authorized to user Firebase Authentication. Please notify the developer.\",\n            \"auth/argument-error\":\"Incorrect Arguments.\",\n            \"auth/invalid-api-key\":\"Invalid API Key. Please notify the developer.\",\n            \"auth/invalid-user-token\":\"User credentials no longer valid. Please sign in again.\",\n            \"auth/network-request-failed\":\"Network Error. Please check your internet connection and try again.\",\n            \"auth/operation-not-allowed\":\"Operation not allowed. Notify developer to configure providers.\",\n            \"auth/requires-recent-login\":\"Time since last log in did not meet security threshold. Please sign in again.\",\n            \"auth/too-many-requests\":\"Request blocked due to unusual activity on your device.\",\n            \"auth/unauthorized-domain\":\"App domain not authorized for OAuth operations. Notify the developer.\",\n            \"auth/user-disabled\":\"Your account has been disabled\",\n            \"auth/user-token-expired\":\"Your credentials have expired, or have been deleted.\",\n            \"auth/web-storage-unsupported\":\"Browser storage not supported or has been declined.\",\n        }\n        return codes[code];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSharingService.html":{"url":"injectables/DataSharingService.html","title":"injectable - DataSharingService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DataSharingService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/data-sharing.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         isMobile\n                                    \n                                    \n                                         screenX\n                                    \n                                    \n                                         screenY\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         getIsMobile\n                                    \n                                    \n                                         getScreenX\n                                    \n                                    \n                                         getScreenY\n                                    \n                                    \n                                         setIsMobile\n                                    \n                                    \n                                         setScreenX\n                                    \n                                    \n                                         setScreenY\n                                    \n                                    \n                                         sortBy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:8\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getIsMobile\n                                \n                            \n                            \n                                \n            getIsMobile()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:39\n                                        \n                                    \n            \n                            \n                                \n                                        return true is running on a mobile device\n            \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getScreenX\n                                \n                            \n                            \n                                \n            getScreenX()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:13\n                                        \n                                    \n            \n                            \n                                \n                                        get the screen width\n            \n            \n                                        \n                                            Returns :     number\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getScreenY\n                                \n                            \n                            \n                                \n            getScreenY()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:26\n                                        \n                                    \n            \n                            \n                                \n                                        get the screen height\n            \n            \n                                        \n                                            Returns :     number\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setIsMobile\n                                \n                            \n                            \n                                \n            setIsMobile(isMobile: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:46\n                                        \n                                    \n            \n                            \n                                \n                                        set the device is mobile property\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              isMobile\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              true if the device is mobile, false otherwise\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setScreenX\n                                \n                            \n                            \n                                \n            setScreenX(width: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:20\n                                        \n                                    \n            \n                            \n                                \n                                        set the width of the screen\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              width\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              width of the screen\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setScreenY\n                                \n                            \n                            \n                                \n            setScreenY(height: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:33\n                                        \n                                    \n            \n                            \n                                \n                                        set the height of the screen\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              height\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              height of the screen\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     sortBy\n                                \n                            \n                            \n                                \n            sortBy(posts: Post[], sortMethod: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:54\n                                        \n                                    \n            \n                            \n                                \n                                        Sort posts by a sort method\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              posts\n                                                              \n                                                                      Post[]\n                                                              \n                                                              \n                                                              \n                                                              array of posts\n            \n                                                            \n                                                            \n                                                              sortMethod\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              method to sort by\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     {}\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isMobile\n                                \n                            \n                            \n                                \n                                    isMobile:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     screenX\n                                \n                            \n                            \n                                \n                                    screenX:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     screenY\n                                \n                            \n                            \n                                \n                                    screenY:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/data-sharing.service.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Post } from \"../models/post.model\";\n\n@Injectable()\nexport class DataSharingService {\n    screenX: number;\n    screenY: number;\n    isMobile: boolean;\n    constructor() { }\n    /**\n     * get the screen width\n     */\n    getScreenX() {\n        return this.screenX;\n    }\n    /**\n     * set the width of the screen\n     * @param width width of the screen\n     */\n    setScreenX(width: number) {\n        this.screenX = width;\n    }\n    /**\n     * get the screen height\n     */\n    getScreenY() {\n        return this.screenY;\n    }\n    /**\n     * set the height of the screen\n     * @param height height of the screen\n     */\n    setScreenY(height: number) {\n        this.screenY = height;\n    }\n    /**\n     * return true is running on a mobile device\n     */\n    getIsMobile() {\n        return this.isMobile;\n    }\n    /**\n     * set the device is mobile property\n     * @param isMobile true if the device is mobile, false otherwise\n     */\n    setIsMobile(isMobile: boolean) {\n        this.isMobile = isMobile;\n    }\n    /**\n     * Sort posts by a sort method\n     * @param posts array of posts\n     * @param sortMethod method to sort by\n     */\n    sortBy(posts: Post[], sortMethod: string) {\n        let currentDate = new Date();\n        let currentTime = currentDate.getTime();\n        function relativeDiff(A, B) {\n            B = currentTime - B;\n            return Math.abs(A - B) / B;\n        }\n        //insertion sort for top posts\n        function insertionSortTop() {\n            var len = posts.length;\n            for (var i = 1; i = 0 && (posts[j][\"score\"] = 0 && (posts[j][\"timestamp\"] = 0 && (relativeDiff(posts[j][\"score\"], posts[j][\"timestamp\"]) > relativeDiff(tmp[\"score\"], tmp[\"timestamp\"])); j--) {\n                    //Shift the number\n                    posts[j + 1] = posts[j];\n                }\n                //Insert the copied number at the correct position\n                //in sorted part. \n                posts[j + 1] = tmp;\n            }\n        }\n\n        switch (sortMethod) {\n            case 'hot':\n                insertionSortHot();\n                break;\n            case 'new':\n                insertionSortNew();\n                break;\n            case 'top':\n                insertionSortTop();\n                break;\n\n        }\n        return posts;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/database.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         checkDownvoted\n                                    \n                                    \n                                         checkDownvotedComment\n                                    \n                                    \n                                         checkGetSubreddit\n                                    \n                                    \n                                         checkUpvoted\n                                    \n                                    \n                                         checkUpvotedComment\n                                    \n                                    \n                                         checkValidSubreddit\n                                    \n                                    \n                                         checkVotedComment\n                                    \n                                    \n                                         checkVotedPost\n                                    \n                                    \n                                         createLinkPost\n                                    \n                                    \n                                         createTextPost\n                                    \n                                    \n                                         deleteComment\n                                    \n                                    \n                                         deletePost\n                                    \n                                    \n                                         deleteSubreddit\n                                    \n                                    \n                                         downvoteComment\n                                    \n                                    \n                                         downvotePost\n                                    \n                                    \n                                         getAllPosts\n                                    \n                                    \n                                         getComment\n                                    \n                                    \n                                         getKarma\n                                    \n                                    \n                                         getPost\n                                    \n                                    \n                                         getPostComments\n                                    \n                                    \n                                         getSubreddit\n                                    \n                                    \n                                         getSubredditPosts\n                                    \n                                    \n                                         getSubreddits\n                                    \n                                    \n                                         getSubscribedSubreddits\n                                    \n                                    \n                                         newSubreddit\n                                    \n                                    \n                                         subscribeSubreddit\n                                    \n                                    \n                                         unsubscribeSubreddit\n                                    \n                                    \n                                         updateCommentScore\n                                    \n                                    \n                                         updatePostScore\n                                    \n                                    \n                                         upvoteComment\n                                    \n                                    \n                                         upvotePost\n                                    \n                                    \n                                         userKarmaUpdate\n                                    \n                                    \n                                         writeComment\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:8\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     checkDownvoted\n                                \n                            \n                            \n                                \n            checkDownvoted(username: string, post: Post)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:124\n                                        \n                                    \n            \n                            \n                                \n                                        Check downvoted post\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              post\n                                                              \n                                                                      Post\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     checkDownvotedComment\n                                \n                            \n                            \n                                \n            checkDownvotedComment(username: string, comment: Comment, postId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:160\n                                        \n                                    \n            \n                            \n                                \n                                        Check downvoted comment\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              comment\n                                                              \n                                                                      Comment\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     checkGetSubreddit\n                                \n                            \n                            \n                                \n            checkGetSubreddit(subredditName: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:29\n                                        \n                                    \n            \n                            \n                                \n                                        check if a subreddit exists by name\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subredditName\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              name of the subredddit\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     checkUpvoted\n                                \n                            \n                            \n                                \n            checkUpvoted(username: string, post: Post)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:106\n                                        \n                                    \n            \n                            \n                                \n                                        Check upvoted post\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              post\n                                                              \n                                                                      Post\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     checkUpvotedComment\n                                \n                            \n                            \n                                \n            checkUpvotedComment(username: string, comment: Comment, postId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:142\n                                        \n                                    \n            \n                            \n                                \n                                        Check upvoted comment\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              comment\n                                                              \n                                                                      Comment\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     checkValidSubreddit\n                                \n                            \n                            \n                                \n            checkValidSubreddit(subredditName: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:48\n                                        \n                                    \n            \n                            \n                                \n                                        check if a subreddit name is valid or not\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subredditName\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              name of the subreddit\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     checkVotedComment\n                                \n                            \n                            \n                                \n            checkVotedComment(username: string, comment: Comment, postId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:86\n                                        \n                                    \n            \n                            \n                                \n                                        Check if current user has voted on specified post\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              comment\n                                                              \n                                                                      Comment\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     checkVotedPost\n                                \n                            \n                            \n                                \n            checkVotedPost(username: string, post: Post)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:66\n                                        \n                                    \n            \n                            \n                                \n                                        Check if current user has voted on specified post\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              post\n                                                              \n                                                                      Post\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     createLinkPost\n                                \n                            \n                            \n                                \n            createLinkPost(postData: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:465\n                                        \n                                    \n            \n                            \n                                \n                                        Write a post to a subreddit\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              postData\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     createTextPost\n                                \n                            \n                            \n                                \n            createTextPost(postData: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:493\n                                        \n                                    \n            \n                            \n                                \n                                        Write a post to a subreddit\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              postData\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     deleteComment\n                                \n                            \n                            \n                                \n            deleteComment(subredditId: string, postId: string, commentId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:578\n                                        \n                                    \n            \n                            \n                                \n                                        remove a comment\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subredditId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the subreddit\n            \n                                                            \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the post\n            \n                                                            \n                                                            \n                                                              commentId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     deletePost\n                                \n                            \n                            \n                                \n            deletePost(subredditId: string, postId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:560\n                                        \n                                    \n            \n                            \n                                \n                                        delete a post\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subredditId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the subreddit\n            \n                                                            \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the post\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     deleteSubreddit\n                                \n                            \n                            \n                                \n            deleteSubreddit(subredditId: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:550\n                                        \n                                    \n            \n                            \n                                \n                                        delete a subreddit by its id.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subredditId\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              id of the subreddit\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     downvoteComment\n                                \n                            \n                            \n                                \n            downvoteComment(username: string, comment: Comment, postId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:320\n                                        \n                                    \n            \n                            \n                                \n                                        Downvote a post\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              comment\n                                                              \n                                                                      Comment\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     downvotePost\n                                \n                            \n                            \n                                \n            downvotePost(username: string, post: Post)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:253\n                                        \n                                    \n            \n                            \n                                \n                                        Downvote a post\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              post\n                                                              \n                                                                      Post\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getAllPosts\n                                \n                            \n                            \n                                \n            getAllPosts()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:401\n                                        \n                                    \n            \n                            \n                                \n                                        return a JSON obj of posts from all subreddits\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getComment\n                                \n                            \n                            \n                                \n            getComment(postId: string, commentId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:366\n                                        \n                                    \n            \n                            \n                                \n                                        Get a comment by a post id\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              commentId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getKarma\n                                \n                            \n                            \n                                \n            getKarma(user_id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        Get user karma points\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              user_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getPost\n                                \n                            \n                            \n                                \n            getPost(post_id: string, subreddit_id: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:354\n                                        \n                                    \n            \n                            \n                                \n                                        Get a post from specified subreddit\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              post_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              subreddit_id\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getPostComments\n                                \n                            \n                            \n                                \n            getPostComments(postId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:426\n                                        \n                                    \n            \n                            \n                                \n                                        get JSON obj of comments on a post by its id\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the post\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getSubreddit\n                                \n                            \n                            \n                                \n            getSubreddit(subreddit_id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:378\n                                        \n                                    \n            \n                            \n                                \n                                        return a JSON obj of a subreddit\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subreddit_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getSubredditPosts\n                                \n                            \n                            \n                                \n            getSubredditPosts(subredditId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:413\n                                        \n                                    \n            \n                            \n                                \n                                        return a JSON obj of all posts in a subreddit\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subredditId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the subreddit\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getSubreddits\n                                \n                            \n                            \n                                \n            getSubreddits()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:389\n                                        \n                                    \n            \n                            \n                                \n                                        return a JSON obj of subreddits from the database\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getSubscribedSubreddits\n                                \n                            \n                            \n                                \n            getSubscribedSubreddits(user_id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:625\n                                        \n                                    \n            \n                            \n                                \n                                        get a users subscribed subreddits\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              user_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of user\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     newSubreddit\n                                \n                            \n                            \n                                \n            newSubreddit(subredditName: string, subredditDescription: string, username: string, user_id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:441\n                                        \n                                    \n            \n                            \n                                \n                                        create a new subreddit\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subredditName\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              name of the new subreddit\n            \n                                                            \n                                                            \n                                                              subredditDescription\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              description of the new subreddit\n            \n                                                            \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              username of the creator\n            \n                                                            \n                                                            \n                                                              user_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              user_id of the creator\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     subscribeSubreddit\n                                \n                            \n                            \n                                \n            subscribeSubreddit(user_id: string, subreddit_name: string, subreddit_id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:600\n                                        \n                                    \n            \n                            \n                                \n                                        subscribe a user to a subreddit\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              user_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the user\n            \n                                                            \n                                                            \n                                                              subreddit_name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              name of the subreddit\n            \n                                                            \n                                                            \n                                                              subreddit_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the subreddit\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     unsubscribeSubreddit\n                                \n                            \n                            \n                                \n            unsubscribeSubreddit(user_id: string, subreddit_id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:613\n                                        \n                                    \n            \n                            \n                                \n                                        unsubscribe a user from a subreddit\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              user_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the user\n            \n                                                            \n                                                            \n                                                              subreddit_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the subreddit\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     updateCommentScore\n                                \n                            \n                            \n                                \n            updateCommentScore(comment: Comment, change: number, postId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:205\n                                        \n                                    \n            \n                            \n                                \n                                        Update comment score\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              comment\n                                                              \n                                                                      Comment\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              change\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     updatePostScore\n                                \n                            \n                            \n                                \n            updatePostScore(post: Post, change: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:192\n                                        \n                                    \n            \n                            \n                                \n                                        Update post score\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              post\n                                                              \n                                                                      Post\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              change\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     upvoteComment\n                                \n                            \n                            \n                                \n            upvoteComment(username: string, comment: Comment, postId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:286\n                                        \n                                    \n            \n                            \n                                \n                                        Upvote a comment\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              user that upvoted the comment\n            \n                                                            \n                                                            \n                                                              comment\n                                                              \n                                                                      Comment\n                                                              \n                                                              \n                                                              \n                                                              comment to be upvoted\n            \n                                                            \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     upvotePost\n                                \n                            \n                            \n                                \n            upvotePost(username: string, post: Post)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:219\n                                        \n                                    \n            \n                            \n                                \n                                        Upvote a post\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              username\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              post\n                                                              \n                                                                      Post\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     userKarmaUpdate\n                                \n                            \n                            \n                                \n            userKarmaUpdate(user_id: string, change: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:178\n                                        \n                                    \n            \n                            \n                                \n                                        Update users karma points\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              user_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              change\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     writeComment\n                                \n                            \n                            \n                                \n            writeComment(commentData: any, postId: string, subredditId: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/database.service.ts:522\n                                        \n                                    \n            \n                            \n                                \n                                        write a comment on a post\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              commentData\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              comment to be written\n            \n                                                            \n                                                            \n                                                              postId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              id of the post the comment is being written to\n            \n                                                            \n                                                            \n                                                              subredditId\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Post } from \"../models/post.model\";\nimport { Comment } from \"../models/comment.model\";\nimport * as firebase from 'firebase';\nimport { Subreddit } from \"../models/subreddit.model\";\n\n@Injectable()\nexport class DatabaseService {\n    constructor() {\n\n    }\n\n    /**\n     * Get user karma points\n     * @param user_id\n     */\n    getKarma(user_id: string) {\n        return new Promise(resolve => {\n            firebase.database().ref('users/' + user_id + \"/karma\").once('value').then(karma => {\n                console.log(karma.val());\n                return resolve(karma.val());\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * check if a subreddit exists by name\n     * @param subredditName name of the subredddit\n     */\n    checkGetSubreddit(subredditName: string) {\n        return new Promise((resolve, reject) => {\n            var database = firebase.database();\n            database.ref('subredditlist/' + subredditName).once('value').then(result => {\n                let subredditID = result.val();\n                if (subredditID) {\n                    this.getSubreddit(subredditID).then(subreddit => {\n                        return resolve(subreddit)\n                    }).catch(err => console.log());\n                } else {\n                    return reject();\n                }\n            }).catch((err => console.log(err)));\n        }).catch(err => console.log(err));\n    }\n    /**\n     * check if a subreddit name is valid or not\n     * @param subredditName name of the subreddit\n     */\n    checkValidSubreddit(subredditName: string) {\n        return new Promise((resolve, reject) => {\n            var database = firebase.database();\n            database.ref('subredditlist/' + subredditName).once('value').then(result => {\n                if (result.val()) {\n                    resolve(false);\n                } else {\n                    resolve(true);\n                }\n            });\n        }).catch(err => console.log(err));\n    }\n\n    /**\n     * Check if current user has voted on specified post\n     * @param username \n     * @param post \n     */\n    checkVotedPost(username: string, post: Post) {\n        return new Promise(resolve => {\n            firebase.database().ref(\"/posts/\" + post.subreddit_id + \"/\" + post.post_id).once('value').then(post => {\n                let hasUpvotes = post.val().hasOwnProperty(\"upvotes\");\n                let hasDownvotes = post.val().hasOwnProperty(\"downvotes\");\n                if (hasUpvotes && post.val().upvotes[username]) {\n                    return resolve(0); // Found in upvotes\n                }\n                if (hasDownvotes && post.val().downvotes[username]) {\n                    return resolve(1); // Found in downvotes\n                }\n                return resolve(2); // Didn't vote\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * Check if current user has voted on specified post\n     * @param username \n     * @param post \n     */\n    checkVotedComment(username: string, comment: Comment, postId: string) {\n        return new Promise(resolve => {\n            firebase.database().ref(\"/comments/\" + postId + \"/comments/\" + comment.comment_id).once('value').then(comment => {\n                let hasUpvotes = comment.val().hasOwnProperty(\"upvotes\");\n                let hasDownvotes = comment.val().hasOwnProperty(\"downvotes\");\n                if (hasUpvotes && comment.val().upvotes[username]) {\n                    return resolve(0); // Found in upvotes\n                }\n                if (hasDownvotes && comment.val().downvotes[username]) {\n                    return resolve(1); // Found in downvotes\n                }\n                return resolve(2); // Didn't vote\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * Check upvoted post\n     * @param username \n     * @param post \n     */\n    checkUpvoted(username: string, post: Post) {\n        return new Promise(resolve => {\n            firebase.database().ref(\"/posts/\" + post.subreddit_id + \"/\" + post.post_id).once('value').then(post => {\n                let hasUpvotes = post.val().hasOwnProperty(\"upvotes\");\n                if (hasUpvotes && post.val().upvotes[username]) {\n                    return resolve(true); // Found in upvotes\n                }\n                else {\n                    return resolve(false);\n                }\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * Check downvoted post\n     * @param username \n     * @param post \n     */\n    checkDownvoted(username: string, post: Post) {\n        return new Promise(resolve => {\n            firebase.database().ref(\"/posts/\" + post.subreddit_id + \"/\" + post.post_id).once('value').then(post => {\n                let hasDownvotes = post.val().hasOwnProperty(\"downvotes\");\n                if (hasDownvotes && post.val().downvotes[username]) {\n                    return resolve(true); // Found in upvotes\n                }\n                else {\n                    return resolve(false);\n                }\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * Check upvoted comment\n     * @param username \n     * @param comment \n     */\n    checkUpvotedComment(username: string, comment: Comment, postId: string) {\n        return new Promise(resolve => {\n            firebase.database().ref(\"/comments/\" + postId + \"/comments/\" + comment.comment_id).once('value').then(post => {\n                let hasUpvotes = post.val().hasOwnProperty(\"upvotes\");\n                if (hasUpvotes && post.val().upvotes[username]) {\n                    return resolve(true); // Found in upvotes\n                }\n                else {\n                    return resolve(false);\n                }\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * Check downvoted comment\n     * @param username \n     * @param comment \n     */\n    checkDownvotedComment(username: string, comment: Comment, postId: string) {\n        return new Promise(resolve => {\n            firebase.database().ref(\"/comments/\" + postId + \"/comments/\" + comment.comment_id).once('value').then(comment => {\n                let hasDownvotes = comment.val().hasOwnProperty(\"downvotes\");\n                if (hasDownvotes && comment.val().downvotes[username]) {\n                    return resolve(true); // Found in upvotes\n                }\n                else {\n                    return resolve(false);\n                }\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * Update users karma points\n     * @param user_id \n     * @param change \n     */\n    userKarmaUpdate(user_id: string, change: number) {\n        return new Promise(resolve => {\n            let ref = firebase.database().ref('users/' + user_id + \"/karma\");\n            ref.transaction((karma) => {\n                return (karma || 0) + change;\n            }).catch(err => console.error(err));\n        });\n    }\n\n    /**\n     * Update post score\n     * @param post_id \n     * @param change \n     */\n    updatePostScore(post: Post, change: number) {\n        return new Promise(resolve => {\n            let ref = firebase.database().ref('posts/' + post.subreddit_id + \"/\" + post.post_id + \"/score\");\n            ref.transaction((score) => {\n                return (score || 0) + change;\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * Update comment score\n     * @param comment \n     * @param change \n     */\n    updateCommentScore(comment: Comment, change: number, postId: string) {\n        return new Promise(resolve => {\n            let ref = firebase.database().ref('comments/' + postId + \"/comments/\" + comment.comment_id + \"/score\");\n            ref.transaction((score) => {\n                return (score || 0) + change;\n            }).catch(err => console.error(err));\n        });\n    }\n\n    /**\n     * Upvote a post\n     * @param username \n     * @param post \n     */\n    upvotePost(username: string, post: Post) {\n        return new Promise(resolve => {\n            this.checkVotedPost(username, post).then((voted) => {\n                let updates = {};\n                switch (voted) {\n                    case 0: // upvoted --> take away upvote\n                        updates[\"/upvotes/\" + username] = null;\n                        firebase.database().ref(\"/posts/\" + post.subreddit_id + \"/\" + post.post_id).update(updates);\n                        this.updatePostScore(post, - 1);\n                        this.userKarmaUpdate(post.user_id, - 1);\n                        return resolve(-1);\n                    case 1: // downvoted\n                        updates[\"/upvotes/\" + username] = true;\n                        updates[\"/downvotes/\" + username] = null;\n                        firebase.database().ref(\"/posts/\" + post.subreddit_id + \"/\" + post.post_id).update(updates);\n                        this.updatePostScore(post, + 2);\n                        this.userKarmaUpdate(post.user_id, + 2);\n                        return resolve(2);\n                    case 2: // no vote\n                        updates[\"/upvotes/\" + username] = true;\n                        firebase.database().ref(\"/posts/\" + post.subreddit_id + \"/\" + post.post_id).update(updates);\n                        this.updatePostScore(post, + 1);\n                        this.userKarmaUpdate(post.user_id, + 1);\n                        return resolve(1);\n                }\n            }).catch(err => console.error(err));\n        });\n    }\n\n    /**\n     * Downvote a post\n     * @param username \n     * @param post \n     */\n    downvotePost(username: string, post: Post) {\n        return new Promise(resolve => {\n            this.checkVotedPost(username, post).then((voted) => {\n                let updates = {};\n                switch (voted) {\n                    case 0: // upvoted\n                        updates[\"/upvotes/\" + username] = null;\n                        updates[\"/downvotes/\" + username] = true;\n                        firebase.database().ref(\"/posts/\" + post.subreddit_id + \"/\" + post.post_id).update(updates);\n                        this.updatePostScore(post, - 2);\n                        this.userKarmaUpdate(post.user_id, - 2);\n                        return resolve(-2);\n                    case 1: // downvoted --> take away downvote\n                        updates[\"/downvotes/\" + username] = null;\n                        firebase.database().ref(\"/posts/\" + post.subreddit_id + \"/\" + post.post_id).update(updates);\n                        this.updatePostScore(post, + 1);\n                        this.userKarmaUpdate(post.user_id, + 1);\n                        return resolve(1);\n                    case 2: // no vote\n                        updates[\"/downvotes/\" + username] = true;\n                        firebase.database().ref(\"/posts/\" + post.subreddit_id + \"/\" + post.post_id).update(updates);\n                        this.updatePostScore(post, - 1);\n                        this.userKarmaUpdate(post.user_id, - 1);\n                        return resolve(-1);\n                }\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * Upvote a comment\n     * @param username user that upvoted the comment\n     * @param comment comment to be upvoted\n     */\n    upvoteComment(username: string, comment: Comment, postId: string) {\n        return new Promise(resolve => {\n            this.checkVotedComment(username, comment, postId).then((voted) => {\n                let updates = {};\n                switch (voted) {\n                    case 0: // upvoted --> take away upvote\n                        updates[\"/upvotes/\" + username] = null;\n                        firebase.database().ref(\"/comments/\" + postId + \"/comments/\" + comment.comment_id).update(updates);\n                        this.updateCommentScore(comment, - 1, postId);\n                        this.userKarmaUpdate(comment.UID, - 1);\n                        return resolve(-1);\n                    case 1: // downvoted\n                        updates[\"/upvotes/\" + username] = true;\n                        updates[\"/downvotes/\" + username] = null;\n                        firebase.database().ref(\"/comments/\" + postId + \"/comments/\" + comment.comment_id).update(updates);\n                        this.updateCommentScore(comment, + 2, postId);\n                        this.userKarmaUpdate(comment.UID, + 2);\n                        return resolve(2);\n                    case 2: // no vote\n                        updates[\"/upvotes/\" + username] = true;\n                        firebase.database().ref(\"/comments/\" + postId + \"/comments/\" + comment.comment_id).update(updates);\n                        this.updateCommentScore(comment, + 1, postId);\n                        this.userKarmaUpdate(comment.UID, + 1);\n                        return resolve(1);\n                }\n            }).catch(err => console.error(err));\n        })\n    }\n\n    /**\n     * Downvote a post\n     * @param username \n     * @param post \n     */\n    downvoteComment(username: string, comment: Comment, postId: string) {\n        return new Promise(resolve => {\n            this.checkVotedComment(username, comment, postId).then((voted) => {\n                let updates = {};\n                switch (voted) {\n                    case 0: // upvoted\n                        updates[\"/upvotes/\" + username] = null;\n                        updates[\"/downvotes/\" + username] = true;\n                        firebase.database().ref(\"/comments/\" + postId + \"/comments/\" + comment.comment_id).update(updates);\n                        this.updateCommentScore(comment, - 2, postId);\n                        this.userKarmaUpdate(comment.UID, - 2);\n                        return resolve(-2);\n                    case 1: // downvoted --> take away downvote\n                        updates[\"/downvotes/\" + username] = null;\n                        firebase.database().ref(\"/comments/\" + postId + \"/comments/\" + comment.comment_id).update(updates);\n                        this.updateCommentScore(comment, + 1, postId);\n                        this.userKarmaUpdate(comment.UID, + 1);\n                        return resolve(1);\n                    case 2: // no vote\n                        updates[\"/downvotes/\" + username] = true;\n                        firebase.database().ref(\"/comments/\" + postId + \"/comments/\" + comment.comment_id).update(updates);\n                        this.updateCommentScore(comment, - 1, postId);\n                        this.userKarmaUpdate(comment.UID, - 1);\n                        return resolve(-1);\n                }\n            }).catch(err => console.error(err));\n        });\n    }\n\n    /**\n     * Get a post from specified subreddit\n     * @param post_id \n     * @param subreddit_id \n     */\n    getPost(post_id: string, subreddit_id) {\n        return new Promise(resolve => {\n            firebase.database().ref('posts/' + subreddit_id + \"/\" + post_id).once('value').then(post => {\n                return resolve(post.val());\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * Get a comment by a post id\n     * @param postId \n     * @param comment \n     */\n    getComment(postId: string, commentId: string) {\n        return new Promise(resolve => {\n            firebase.database().ref('comments/' + postId + \"/comments/\" + commentId).once('value').then(comment => {\n                return resolve(comment.val());\n            }).catch(err => console.error(err));\n        });\n    }\n\n    /**\n     * return a JSON obj of a subreddit\n     * @param subreddit_id \n     */\n    getSubreddit(subreddit_id: string) {\n        return new Promise(resolve => {\n            var database = firebase.database();\n            database.ref('subreddits/' + subreddit_id).once('value').then(subreddit => {\n                return resolve(subreddit.val());\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * return a JSON obj of subreddits from the database\n     */\n    getSubreddits() {\n        return new Promise(resolve => {\n            var database = firebase.database();\n            database.ref('subreddits/').once('value').then(subreddits => {\n                return resolve(subreddits.val());\n            }).catch(err => console.error(err));\n        });\n    }\n\n    /**\n     * return a JSON obj of posts from all subreddits\n     */\n    getAllPosts() {\n        return new Promise(resolve => {\n            var database = firebase.database();\n            database.ref('posts/').once('value').then(posts => {\n                return resolve(posts.val());\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * return a JSON obj of all posts in a subreddit\n     * @param subredditId id of the subreddit\n     */\n    getSubredditPosts(subredditId: string) {\n        return new Promise(resolve => {\n            var database = firebase.database();\n            database.ref('posts/' + subredditId).once('value').then(posts => {\n                return resolve(posts.val());\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * get JSON obj of comments on a post by its id\n     * @param subredditId id of the subreddit the post is in\n     * @param postId id of the post\n     */\n    getPostComments(postId: string) {\n        return new Promise(resolve => {\n            var database = firebase.database();\n            database.ref('comments/' + postId + '/comments/').once('value').then(comments => {\n                return resolve(comments.val());\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * create a new subreddit\n     * @param subredditName name of the new subreddit\n     * @param subredditDescription description of the new subreddit\n     * @param username username of the creator\n     * @param user_id user_id of the creator\n     */\n    newSubreddit(subredditName: string, subredditDescription: string, username: string, user_id: string) {\n        return new Promise(resolve => {\n            let key = firebase.database().ref('subreddits').push().key;\n            let subreddit = new Subreddit(\n                subredditName,\n                subredditDescription,\n                user_id,\n                username,\n                key\n            );\n\n            let updates = {};\n            updates['subreddits/' + key] = subreddit;\n            updates['subredditlist/' + subredditName] = key\n            firebase.database().ref().update(updates);\n            return resolve(key);\n        });\n\n    }\n    /**\n     * Write a post to a subreddit\n     * @param post post to be written\n     * @param subredditId id of the subreddit to write the post\n     */\n    createLinkPost(postData: any) {\n        return new Promise(resolve => {\n            let key = firebase.database().ref('posts/' + postData.subreddit.subreddit_id + '/').push().key;\n            let upvote = {};\n            upvote[postData.username] = true;\n            let post = new Post(\n                postData.title,\n                postData.link,\n                key,\n                null,\n                postData.subreddit.name,\n                postData.subreddit.subreddit_id,\n                firebase.database.ServerValue.TIMESTAMP,\n                postData.username,\n                postData.user_id,\n                1,\n                0\n            );\n            post[\"upvotes\"] = upvote;\n            firebase.database().ref('posts/' + postData.subreddit.subreddit_id + '/' + key).update(post).catch(err => console.error(err));\n            resolve();\n        });\n    }\n    /**\n * Write a post to a subreddit\n * @param post post to be written\n * @param subredditId id of the subreddit to write the post\n */\n    createTextPost(postData: any) {\n        return new Promise(resolve => {\n            let key = firebase.database().ref('posts/' + postData.subreddit.subreddit_id + '/').push().key;\n            let upvote = {};\n            upvote[postData.username] = true;\n            let post = new Post(\n                postData.title,\n                null,\n                key,\n                postData.message,\n                postData.subreddit.name,\n                postData.subreddit.subreddit_id,\n                firebase.database.ServerValue.TIMESTAMP,\n                postData.username,\n                postData.user_id,\n                1,\n                0\n            );\n            post[\"upvotes\"] = upvote;\n\n            firebase.database().ref('posts/' + postData.subreddit.subreddit_id + '/' + key).update(post).catch(err => console.error(err));\n            resolve();\n        });\n    }\n    /**\n     * write a comment on a post\n     * @param commentData comment to be written\n     * @param postId id of the post the comment is being written to\n     */\n    writeComment(commentData: any, postId: string, subredditId: string) {\n        return new Promise(resolve => {\n            let key = firebase.database().ref('comments/' + postId + '/comments/').push().key;\n            let d = new Date();\n            let comment = new Comment(\n                commentData.message,\n                d.getTime(),\n                commentData.creator,\n                commentData.UID,\n                key,\n                commentData.score\n            );\n            firebase.database().ref('comments/' + postId + '/comments/' + key).update(comment).catch(err => console.error(err));\n\n            // Increment comment counter in posts\n            let ref = firebase.database().ref('posts/' + subredditId + \"/\" + postId + \"/numcomments\");\n            ref.transaction((comments) => {\n                return (comments || 0) + 1;\n            }).catch(err => console.error(err));\n            return resolve(comment);\n        });\n\n    }\n\n    /**\n     * delete a subreddit by its id.\n     * @param subredditId id of the subreddit\n     */\n    deleteSubreddit(subredditId) {\n        firebase.database().ref('subreddit-data/' + subredditId).remove().then(() => {\n            console.log('delete success');\n        }).catch(err => console.error(err));\n    }\n    /**\n     * delete a post\n     * @param subredditId id of the subreddit\n     * @param postId id of the post\n     */\n    deletePost(subredditId: string, postId: string) {\n        return new Promise((resolve, reject) => {\n            firebase.database().ref('posts/' + subredditId + '/' + postId).remove().then(() => {\n                firebase.database().ref('comments/' + postId).remove().then(() => {\n                    resolve()\n                })\n            }).catch(err => {\n                console.error(err)\n                reject()\n            })\n        })\n    }\n    /**\n     * remove a comment\n     * @param subredditId id of the subreddit\n     * @param postId id of the post\n     * @param comment comment to be deleted\n     */\n    deleteComment(subredditId:string, postId: string, commentId: string) {\n        return new Promise((resolve, reject) => {\n            firebase.database().ref('comments/' + postId + '/comments/' + commentId)\n            .remove().then(() => {\n                let ref = firebase.database().ref('posts/' + subredditId + \"/\" + postId + \"/numcomments\");\n                ref.transaction((comments) => {\n                    return (comments || 0) - 1;\n                }).catch(err => console.error(err));\n                resolve()\n            }).catch(err => {\n                console.error(err)\n                reject()\n            });\n        })\n\n    }\n    /**\n     * subscribe a user to a subreddit\n     * @param user_id id of the user\n     * @param subreddit_name name of the subreddit\n     * @param subreddit_id id of the subreddit\n     */\n    subscribeSubreddit(user_id: string, subreddit_name: string, subreddit_id: string) {\n        return new Promise(resolve => {\n            firebase.database().ref(`users/${user_id}/subscribed/${subreddit_id}`)\n                .update({ subreddit_name: subreddit_name, subreddit_id: subreddit_id })\n                .catch(err => console.error(err));\n            resolve();\n        });\n    }\n    /**\n     * unsubscribe a user from a subreddit\n     * @param user_id id of the user\n     * @param subreddit_id id of the subreddit\n     */\n    unsubscribeSubreddit(user_id: string, subreddit_id: string) {\n        return new Promise(resolve => {\n            firebase.database().ref(`users/${user_id}/subscribed/${subreddit_id}`)\n                .remove()\n                .catch(err => console.error(err));\n            resolve();\n        });\n    }\n    /**\n     * get a users subscribed subreddits\n     * @param user_id id of user\n     */\n    getSubscribedSubreddits(user_id: string) {\n        return new Promise(resolve => {\n            firebase.database().ref(`users/${user_id}/subscribed`).once('value').then(subreddits => {\n                return resolve(subreddits.val());\n            }).catch(err => console.error(err));\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsProvider.html":{"url":"injectables/SettingsProvider.html","title":"injectable - SettingsProvider","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SettingsProvider\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/theming.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private theme\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         getActiveTheme\n                                    \n                                    \n                                        Private getTheme\n                                    \n                                    \n                                         getThemeAsString\n                                    \n                                    \n                                         setActiveTheme\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(storage: Storage, events: Events)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/shared/theming.service.ts:9\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              storage\n                                                              \n                                                                        Storage\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              events\n                                                              \n                                                                        Events\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getActiveTheme\n                                \n                            \n                            \n                                \n            getActiveTheme()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/theming.service.ts:39\n                                        \n                                    \n            \n                            \n                                \n                                        return the active theme for the app\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private getTheme\n                                \n                            \n                            \n                                \n                                        \n                                    getTheme()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/theming.service.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getThemeAsString\n                                \n                            \n                            \n                                \n            getThemeAsString()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/theming.service.ts:45\n                                        \n                                    \n            \n                            \n                                \n                                        get the theme as a string\n            \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setActiveTheme\n                                \n                            \n                            \n                                \n            setActiveTheme(val: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/theming.service.ts:32\n                                        \n                                    \n            \n                            \n                                \n                                        set a theme for the app\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              val\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              name of theme\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private theme\n                                \n                            \n                            \n                                \n                                    theme:     BehaviorSubject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     BehaviorSubject\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/theming.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/Rx';\nimport { Storage } from \"@ionic/storage\";\nimport { Events } from 'ionic-angular';\n\n@Injectable()\nexport class SettingsProvider {\n\n    private theme: BehaviorSubject;\n\n    constructor(private storage: Storage, private events: Events) {\n        this.getTheme();\n        this.events.subscribe('platform:ready', () => {\n            this.getTheme();\n        });\n    }\n    private getTheme() {\n        this.storage.get('app-theme').then(theme => {\n            if (theme) {\n                this.theme = new BehaviorSubject(theme);\n            }\n            else {\n                this.theme = new BehaviorSubject('light-theme');\n            }\n            this.events.publish('theme:retrieved');\n        });\n    }\n    /**\n     * set a theme for the app\n     * @param val name of theme\n     */\n    setActiveTheme(val) {\n        this.theme.next(val);\n        this.storage.set('app-theme', val);\n    }\n    /**\n     * return the active theme for the app\n     */\n    getActiveTheme() {\n        return this.theme.asObservable();\n    }\n    /**\n     * get the theme as a string\n     */\n    getThemeAsString(): string {\n        return this.theme.value;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/storage.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         initSubreddits\n                                    \n                                    \n                                         subreddits\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         getInitSubreddits\n                                    \n                                    \n                                         getSubscribedSubreddits\n                                    \n                                    \n                                         isSubscribed\n                                    \n                                    \n                                         setInitSubreddits\n                                    \n                                    \n                                         setSubscribedSubreddits\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(storage: Storage)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/shared/storage.service.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              storage\n                                                              \n                                                                        Storage\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getInitSubreddits\n                                \n                            \n                            \n                                \n            getInitSubreddits()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/storage.service.ts:71\n                                        \n                                    \n            \n                            \n                                \n                                        return initially subscribed subreddits\n            \n            \n                                        \n                                            Returns :     {}\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getSubscribedSubreddits\n                                \n                            \n                            \n                                \n            getSubscribedSubreddits()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/storage.service.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                        get users subreddits from storage\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isSubscribed\n                                \n                            \n                            \n                                \n            isSubscribed(subreddit_id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/storage.service.ts:41\n                                        \n                                    \n            \n                            \n                                \n                                        check if user is subscribed to a subreddit\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subreddit_id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              subreddit id\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setInitSubreddits\n                                \n                            \n                            \n                                \n            setInitSubreddits(subreddits: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/storage.service.ts:65\n                                        \n                                    \n            \n                            \n                                \n                                        set initially subscribed subreddits\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subreddits\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              initially subscribed subreddits\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setSubscribedSubreddits\n                                \n                            \n                            \n                                \n            setSubscribedSubreddits(subscribedSubreddits: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/shared/storage.service.ts:13\n                                        \n                                    \n            \n                            \n                                \n                                        set the user's subscribed subreddits\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              subscribedSubreddits\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              user's subscribed subreddits\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     initSubreddits\n                                \n                            \n                            \n                                \n                                    initSubreddits:     any[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/storage.service.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     subreddits\n                                \n                            \n                            \n                                \n                                    subreddits:     any[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/shared/storage.service.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Storage } from \"@ionic/storage\";\n\n@Injectable()\nexport class StorageService {\n    subreddits: any[];\n    initSubreddits: any[];\n    constructor(private storage: Storage) { }\n    /**\n     * set the user's subscribed subreddits\n     * @param subscribedSubreddits user's subscribed subreddits\n     */\n    setSubscribedSubreddits(subscribedSubreddits: any[]) {\n        return new Promise(resolve => {\n            this.subreddits = subscribedSubreddits;\n            this.storage.set('subscribedSubreddits', subscribedSubreddits)\n                .catch(err => console.error(err));\n            resolve();\n        });\n    }\n    /**\n     * get users subreddits from storage\n     */\n    getSubscribedSubreddits() {\n        return new Promise>(resolve => {\n            this.storage.get('subscribedSubreddits').then(subreddits => {\n                if (subreddits) {\n                    this.subreddits = subreddits;\n                    return resolve(this.subreddits);\n                }\n                else {\n                    return resolve(null);\n                }\n            }).catch(err => console.error(err));\n        });\n    }\n    /**\n     * check if user is subscribed to a subreddit\n     * @param subreddit_id subreddit id\n     */\n    isSubscribed(subreddit_id: string) {\n        if (!this.subreddits) {\n            this.getSubscribedSubreddits().then(() => {\n                for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/comment.model.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         comment_id\n                                    \n                                    \n                                         creator\n                                    \n                                    \n                                         message\n                                    \n                                    \n                                         score\n                                    \n                                    \n                                         timestamp\n                                    \n                                    \n                                         UID\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(message: string, timestamp: any, creator: string, UID: string, comment_id: string, score: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/models/comment.model.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              message\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              timestamp\n                                                              \n                                                                        any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              creator\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              UID\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              comment_id\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              score\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     comment_id\n                                \n                            \n                            \n                                \n                                    comment_id:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/comment.model.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     creator\n                                \n                            \n                            \n                                \n                                    creator:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/comment.model.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     message\n                                \n                            \n                            \n                                \n                                    message:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/comment.model.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     score\n                                \n                            \n                            \n                                \n                                    score:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/comment.model.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     timestamp\n                                \n                            \n                            \n                                \n                                    timestamp:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/comment.model.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     UID\n                                \n                            \n                            \n                                \n                                    UID:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/comment.model.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Comment {\n    comment_id: string;\n    message: string;\n    timestamp: any;\n    score: number;\n    creator: string;\n    UID: string;\n    constructor(message: string, timestamp: any, creator: string, UID: string, comment_id: string, score: number) {\n        this.message = message;\n        this.timestamp = timestamp;\n        this.creator = creator;\n        this.UID = UID;\n        this.comment_id = comment_id;\n        this.score = score;\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/post.model.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         link\n                                    \n                                    \n                                         message\n                                    \n                                    \n                                         numcomments\n                                    \n                                    \n                                         post_id\n                                    \n                                    \n                                         score\n                                    \n                                    \n                                         subreddit\n                                    \n                                    \n                                         subreddit_id\n                                    \n                                    \n                                         timestamp\n                                    \n                                    \n                                         title\n                                    \n                                    \n                                         user\n                                    \n                                    \n                                         user_id\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(title: string, link: string, post_id: string, message: string, subreddit: string, subreddit_id: string, timestamp: any, user: string, user_id: string, score: number, numcomments: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              title\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              link\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              post_id\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              message\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              subreddit\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              subreddit_id\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              timestamp\n                                                              \n                                                                        any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              user\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              user_id\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              score\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              numcomments\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     link\n                                \n                            \n                            \n                                \n                                    link:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     message\n                                \n                            \n                            \n                                \n                                    message:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     numcomments\n                                \n                            \n                            \n                                \n                                    numcomments:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     post_id\n                                \n                            \n                            \n                                \n                                    post_id:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     score\n                                \n                            \n                            \n                                \n                                    score:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     subreddit\n                                \n                            \n                            \n                                \n                                    subreddit:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     subreddit_id\n                                \n                            \n                            \n                                \n                                    subreddit_id:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     timestamp\n                                \n                            \n                            \n                                \n                                    timestamp:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     title\n                                \n                            \n                            \n                                \n                                    title:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     user\n                                \n                            \n                            \n                                \n                                    user:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     user_id\n                                \n                            \n                            \n                                \n                                    user_id:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/post.model.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Post {\n    title: string;\n    link: string;\n    message: string;\n    post_id: string;\n    subreddit: string;\n    subreddit_id: string;\n    timestamp: number;\n    score: number;\n    user: string;\n    user_id: string;\n    numcomments: number;\n    constructor(\n        title: string, \n        link: string, \n        post_id: string,\n        message: string, \n        subreddit: string, \n        subreddit_id: string, \n        timestamp: any,\n        user: string,\n        user_id: string,\n        score: number,\n        numcomments: number) {\n            this.title = title;\n            this.link = link;\n            this.post_id = post_id;\n            this.message = message;\n            this.subreddit = subreddit;\n            this.subreddit_id = subreddit_id;\n            this.timestamp = timestamp;\n            this.user = user;\n            this.user_id = user_id;\n            this.score = score;\n            this.numcomments = numcomments;\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subreddit.html":{"url":"classes/Subreddit.html","title":"class - Subreddit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subreddit\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/subreddit.model.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         creator\n                                    \n                                    \n                                         description\n                                    \n                                    \n                                         name\n                                    \n                                    \n                                         subreddit_id\n                                    \n                                    \n                                         UID\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(name: string, description: string, uid: string, creator: string, subreddit_id: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/models/subreddit.model.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              description\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              uid\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              creator\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              subreddit_id\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     creator\n                                \n                            \n                            \n                                \n                                    creator:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/subreddit.model.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     description\n                                \n                            \n                            \n                                \n                                    description:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/subreddit.model.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/subreddit.model.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     subreddit_id\n                                \n                            \n                            \n                                \n                                    subreddit_id:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/subreddit.model.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     UID\n                                \n                            \n                            \n                                \n                                    UID:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/models/subreddit.model.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export class Subreddit {\n    name: string;\n    description: string;\n    UID: string; // UID of creator\n    creator: string;\n    subreddit_id: string;\n\n    constructor(name: string, description: string, uid: string, creator: string, subreddit_id: string) {\n        this.name = name;\n        this.description = description;\n        this.UID = uid;\n        this.creator = creator;\n        this.subreddit_id = subreddit_id;\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                MyApp\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                src/components/comment/comment.ts\n            \n            \n                component\n            \n            \n                CommentComponent\n            \n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                src/components/post/post.ts\n            \n            \n                component\n            \n            \n                PostComponent\n            \n            \n                3 %\n                (1/31)\n            \n        \n        \n            \n                src/components/sortBy/sortBy.ts\n            \n            \n                component\n            \n            \n                SortByPopover\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                src/models/comment.model.ts\n            \n            \n                class\n            \n            \n                Comment\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/models/post.model.ts\n            \n            \n                class\n            \n            \n                Post\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                src/models/subreddit.model.ts\n            \n            \n                class\n            \n            \n                Subreddit\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/pages/home/home.ts\n            \n            \n                component\n            \n            \n                HomePage\n            \n            \n                42 %\n                (19/45)\n            \n        \n        \n            \n                src/pages/subreddit/subreddit.ts\n            \n            \n                component\n            \n            \n                SubredditPage\n            \n            \n                25 %\n                (7/27)\n            \n        \n        \n            \n                src/shared/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                src/shared/data-sharing.service.ts\n            \n            \n                injectable\n            \n            \n                DataSharingService\n            \n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                src/shared/database.service.ts\n            \n            \n                injectable\n            \n            \n                DatabaseService\n            \n            \n                94 %\n                (33/35)\n            \n        \n        \n            \n                src/shared/storage.service.ts\n            \n            \n                injectable\n            \n            \n                StorageService\n            \n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                src/shared/theming.service.ts\n            \n            \n                injectable\n            \n            \n                SettingsProvider\n            \n            \n                60 %\n                (3/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
